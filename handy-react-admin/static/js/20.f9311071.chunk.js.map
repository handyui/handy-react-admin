{"version":3,"sources":["components/table/BasicTable.tsx","components/table/index.ts","api/preferential.ts","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","pages/soldierManage/uraniumMining/index.tsx"],"names":["BasicTable","forwardRef","props","ref","columns","rowKey","rowSelection","queryParams","pageOption","searchParam","getListFunc","type","onExpand","callback","useState","data","setData","loading","setLoading","flag","find","item","dataIndex","key","actions","_isCancelled","React","useRef","refreshTableData","param","params","current","size","pageSize","then","result","code","records","total","forEach","finally","actionEvent","record","func","useEffect","useImperativeHandle","refreshTable","val","column","arr","push","filter","length","title","render","text","map","action","index","onConfirm","onClick","genColumn","dataSource","pagination","onChange","page","pageSizeOptions","showSizeChanger","defaultProps","deletePreferential","id","request","get","deletePreferentialList","ids","getPreferential","getPreferentialPage","post","savePreferential","saveAudit","getSoldierInfo","getVeteransPage","AntdIcon","Object","assign","icon","displayName","PreferentialPage","history","panes","useSelector","state","layoutReducer","dispatch","useDispatch","selectedRowKeys","setSelectedRowKeys","searchFormRef","tableRef","location","useLocation","pathname","resData","setResData","checkUrl","url","findIndex","matchPath","menuPath","path","exact","splice","setPanes","handleDetail","a","preferentialId","refresh","permission","effect","handleClick","className","dynamicValidateForm","layout","labelCol","span","wrapperCol","grid","rowGutter","colSpan","formItem","label","field","value","placeholder","showBtn","ghost","danger","Modal","confirm","content","onOk","toString","keys"],"mappings":"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","file":"static/js/20.f9311071.chunk.js","sourcesContent":["import React, { useEffect, useState, forwardRef, useImperativeHandle } from 'react'\r\nimport {TableColumn} from \"./tableColumn.d\"\r\nimport { Table, Space, Popconfirm } from 'antd'\r\n// import {debounce} from '@/utils/index'\r\n\r\ninterface Columns {\r\n    actions?: any;\r\n    [key: string]: any;\r\n}\r\n\r\n// 分页查询参数\r\ninterface PagePrams {\r\n    current?: string | number // 当前页数\r\n    size?: string | number // 每页条数\r\n    [key: string]: any\r\n}\r\n\r\nexport interface BasicTableProps {\r\n    columns?: TableColumn\r\n    rowSelection?: any\r\n    rowKey?: any\r\n    queryParams?: object\r\n    pageOption?: any\r\n    searchParam?: any\r\n    getListFunc?: (val: any) => Promise<unknown> \r\n    refreshTable?: boolean\r\n    style?: React.CSSProperties\r\n    type?: any\r\n    onExpand?:(expanded:any, record:any) => void\r\n    callback?:(val:any) => void\r\n}\r\n\r\nexport interface MenuItemProps {\r\n    index?: string;\r\n    disabled?: boolean\r\n    className?: string\r\n    style?: React.CSSProperties\r\n}\r\n\r\nconst BasicTable = forwardRef<any, BasicTableProps>((props, ref) => {\r\n    const {columns, rowKey, rowSelection, queryParams, pageOption, searchParam, getListFunc, type, onExpand, callback} = props\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    // const [pageOptions, setPageOptions] = useState(pageOption)\r\n    const flag = columns.find((item:any) => (item.dataIndex || item.key) === 'action')\r\n    const actions = flag ? flag.actions : []\r\n    const _isCancelled = React.useRef(false)\r\n    // const [searchParam, setSearchParam] = useState({}) // 存储搜索记录，销毁时清除\r\n\r\n    // 获取表格数据\r\n    const refreshTableData =  (param?:any) => {\r\n        setLoading(true)\r\n        const params =  {\r\n            current:pageOption.current, \r\n            size:pageOption.pageSize, \r\n            ...queryParams, \r\n            ...searchParam,\r\n            ...param\r\n        }\r\n        getListFunc &&  getListFunc(params).then((result:any)=>{\r\n            if(result.code === 200){\r\n                if (!_isCancelled.current) { \r\n                const {records, current, size, total} = result.result\r\n                    // setPageOptions(Object.assign(pageOption, {current, pageSize:size, total}))\r\n                    callback && callback({\r\n                        searchParam: params,\r\n                        pageOption: {current, pageSize:size, total}\r\n                    })\r\n                    // 因为没有传回children字段，要自行添加，table tree 需要children\r\n                    if(type && type ==='table-tree'){\r\n                        records.forEach((item:any) => {\r\n                            item['children'] = []\r\n                        })\r\n                    }\r\n                    setData(records)\r\n                }\r\n            }\r\n        }).finally(() => {if(!_isCancelled.current){setLoading(false)} })\r\n        \r\n    }\r\n\r\n    // 操作事件\r\n    const actionEvent = (record:any, func:any) => func({record, props}, refreshTableData)\r\n\r\n    const genColumn = (column:any)=>{\r\n        let arr=[]\r\n        arr.push(...column.filter((item:any) => {\r\n           return item.dataIndex !== 'action'\r\n        }))\r\n        if(actions.length>0){\r\n            arr.push({\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text:any, record:any) => (\r\n                    <Space size=\"middle\">\r\n                    { actions.map((action:any, index:number) => (\r\n                         [ action.type==='popconfirm'? ( \r\n                            <Popconfirm key={index} title=\"您确定要删除吗？\" onConfirm={()=>actionEvent(record, action.func)}\r\n                    ><a>删除</a></Popconfirm>):'' ,\r\n                        action.type ===  'text'? (<a key={index} onClick={()=>actionEvent(record, action.func)}>{action.text}</a>):'']\r\n                    ))}\r\n                        \r\n                {/* //     <a>编辑</a>\r\n                //     <a>关联权限</a> */}\r\n                </Space>\r\n                ),\r\n            })\r\n        }\r\n        return arr\r\n    }\r\n\r\n    useEffect(()=>{\r\n        refreshTableData()\r\n        return () => {\r\n            // setSearchParam({})\r\n            _isCancelled.current = true\r\n        }\r\n    }, [])\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        refreshTable: (val:any) => {\r\n            // setSearchParam(val)\r\n            refreshTableData(val)\r\n        }\r\n    }))\r\n\r\n    // 分页改变\r\n    const paginationChange = (page:number, pageSize:number) => {\r\n        let params = {\r\n            size:pageSize?pageSize:pageOption.pageSize,\r\n            current: page\r\n        }\r\n        // setPageOptions({current: page, size:pageSize?pageSize:pageOption.pageSize })\r\n        callback && callback({\r\n            searchParam: searchParam,\r\n            pageOption: params\r\n        })\r\n        refreshTableData(params)\r\n    }\r\n\r\n\r\n    return (\r\n        <Table rowKey={rowKey}\r\n            rowSelection={rowSelection} \r\n            columns={genColumn(columns)} \r\n            dataSource={data} \r\n            loading={loading}\r\n            pagination={{...pageOption, \r\n                onChange:paginationChange, \r\n                pageSizeOptions: ['5', '10', '20', '50'],\r\n                showSizeChanger: true,\r\n            }}\r\n            onExpand={onExpand}\r\n        >\r\n            {/* {\r\n                columns.map((item:any) => (\r\n                <Column title={item.title} dataIndex={item.dataIndex} key={item.dataIndex}></Column>   \r\n                //   {item.dataIndex!=='action'?\r\n                //     <Column title={item.title} dataIndex={item.dataIndex} key={item.dataIndex} />\r\n                //     :''}\r\n                ))\r\n            } */}\r\n            {/* <Column title=\"roleName\" dataIndex=\"roleName\" key=\"roleName\" />\r\n        \r\n                actions.map((action:any, index:number) => (\r\n                    <div key={index}>88</div>\r\n                    {action.type == 'text'? <button>dddd</button>:''}  \r\n\r\n                ))\r\n            }\r\n            \r\n        <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\r\n        \r\n            <Column\r\n                title=\"Action\"\r\n                key=\"action\"\r\n                render={(text, record) => (\r\n                    <Space size=\"middle\">\r\n                        <a>Invite {record.lastName}</a>\r\n                        <a>Delete</a>\r\n                    </Space>\r\n                )}\r\n                />  */}\r\n        </Table>\r\n    )\r\n})\r\n\r\nBasicTable.defaultProps = {\r\n    pageOption:{\r\n        current:1, pageSize:10\r\n    },\r\n    refreshTable:false\r\n}\r\n\r\nexport default BasicTable\r\n","export { default as BasicTable } from './BasicTable'\r\nexport * from './tableColumn.d'","import { request } from '@/utils/api.request'\r\n\r\n/***==============优抚信息================= */\r\n\r\n// 删除优抚信息\r\nexport const deletePreferential = (id:string) => request.get('/veteransPreferential/deletePreferential', {id})\r\n\r\n// 批量删除优抚信息\r\nexport const deletePreferentialList = (ids:string) => request.get('/veteransPreferential/deletePreferentialList', {ids})\r\n\r\n// 根据优抚id查询优抚信息\r\nexport const getPreferential = (id:string) => request.get('/veteransPreferential/getPreferential', {id})\r\n\r\n/* 查询优抚信息列表\r\n{\r\n  \"current\": 1,\r\n  \"name\": \"\",\r\n  \"organizationId\": \"\",\r\n  \"sex\": \"string\",\r\n  \"size\": 5,\r\n  \"state\": \"\",\r\n  \"type\": \"sc\"\r\n}\r\n*/\r\nexport const getPreferentialPage = (data:any) => request.post('/veteransPreferential/getPreferentialPage', data)\r\n\r\n/* 新增/修改优抚信息\r\n{\r\n    \"abilityLive\": \"string\",\r\n    \"applyType\": \"string\",\r\n    \"belongPeriod\": \"string\",\r\n    \"conscriptsConvertDate\": \"string\",\r\n    \"conscriptsEndDate\": \"2020-12-25T09:50:38.421Z\",\r\n    \"conscriptsStartDate\": \"2020-12-25T09:50:38.421Z\",\r\n    \"disabilityBelong\": \"string\",\r\n    \"disabilityLevel\": \"string\",\r\n    \"disabilityNature\": \"string\",\r\n    \"employmentSituation\": \"string\",\r\n    \"fiveGuarantees\": \"string\",\r\n    \"identificationBasis\": \"string\",\r\n    \"ionelyOldPeople\": \"string\",\r\n    \"joinArmyDate\": \"2020-12-25T09:50:38.421Z\",\r\n    \"joinParty\": \"2020-12-25T09:50:38.421Z\",\r\n    \"laborCapacity\": \"string\",\r\n    \"medicalInsurance\": \"string\",\r\n    \"mentalDisease\": \"string\",\r\n    \"militaryCode\": \"string\",\r\n    \"otherPreferentialIdentity\": \"string\",\r\n    \"otherSafeguards\": \"string\",\r\n    \"outArmyDate\": \"2020-12-25T09:50:38.421Z\",\r\n    \"pensionSecurityType\": \"string\",\r\n    \"preferentialId\": \"string\",\r\n    \"preferentialTreatmentType\": \"string\",\r\n    \"remarks\": \"string\",\r\n    \"retireIdNumber\": \"string\",\r\n    \"state\": \"string\",\r\n    \"subsistenceAllowances\": \"string\",\r\n    \"type\": \"string\",\r\n    \"version\": 0,\r\n    \"veteransBankInfo\": {\r\n      \"bankAccount\": \"string\",\r\n      \"bankAccountNo\": \"string\",\r\n      \"bankAddress\": \"string\",\r\n      \"bankName\": \"string\",\r\n      \"id\": \"string\",\r\n      \"preferentialId\": \"string\",\r\n      \"remarks\": \"string\"\r\n    },\r\n    \"veteransBaseInfoAddReq\": {\r\n      \"actualAddress\": \"string\",\r\n      \"birthDate\": \"2020-12-25T09:50:38.421Z\",\r\n      \"domicile\": \"string\",\r\n      \"educationDegree\": \"string\",\r\n      \"fixedTelephone\": \"string\",\r\n      \"health\": \"string\",\r\n      \"householdAddress\": \"string\",\r\n      \"householdAddressType\": \"string\",\r\n      \"householdType\": \"string\",\r\n      \"idCardNo\": \"string\",\r\n      \"idPhoto\": \"string\",\r\n      \"maritalStatus\": \"string\",\r\n      \"name\": \"string\",\r\n      \"nameUsedBefore\": \"string\",\r\n      \"nation\": \"string\",\r\n      \"organizationId\": \"string\",\r\n      \"phone\": \"string\",\r\n      \"politicalIdentity\": \"string\",\r\n      \"remarks\": \"string\",\r\n      \"sex\": \"string\",\r\n      \"signingIssuingOrganization\": \"string\",\r\n      \"termValidityEnd\": \"2020-12-25T09:50:38.421Z\",\r\n      \"termValidityStart\": \"2020-12-25T09:50:38.421Z\",\r\n      \"version\": 0,\r\n      \"veteransId\": \"string\",\r\n      \"wechatQq\": \"string\",\r\n      \"whetherHk\": \"string\"\r\n    },\r\n    \"veteransFamilyInfo\": {\r\n      \"agedSize\": 0,\r\n      \"familySize\": 0,\r\n      \"id\": \"string\",\r\n      \"preferentialId\": \"string\",\r\n      \"remarks\": \"string\",\r\n      \"underAgeSize\": 0\r\n    },\r\n    \"veteransHouseInfo\": {\r\n      \"houseArea\": 0,\r\n      \"houseStatus\": \"string\",\r\n      \"houseType\": \"string\",\r\n      \"id\": \"string\",\r\n      \"preferentialId\": \"string\",\r\n      \"remarks\": \"string\",\r\n      \"roomsNumber\": 0\r\n    },\r\n    \"veteransId\": \"string\",\r\n    \"veteransMartyrFamily\": {\r\n      \"familyId\": \"string\",\r\n      \"holderName\": \"string\",\r\n      \"martyrCertificateNo\": \"string\",\r\n      \"martyrName\": \"string\",\r\n      \"preferentialId\": \"string\",\r\n      \"relation\": \"string\",\r\n      \"remarks\": \"string\",\r\n      \"sacrificeDate\": \"2020-12-25T09:50:38.421Z\"\r\n    },\r\n    \"veteransTypeInfo\": {\r\n      \"applyType\": \"string\",\r\n      \"disabilityPeriod\": \"string\",\r\n      \"disabilitySituation\": \"string\",\r\n      \"id\": \"string\",\r\n      \"ionelyOldPeople\": \"string\",\r\n      \"isOrphan\": \"string\",\r\n      \"joinParty\": \"string\",\r\n      \"levelAdjustment\": \"string\",\r\n      \"nuclearRelatedSituation\": \"string\",\r\n      \"preferentialId\": \"string\",\r\n      \"remarks\": \"string\",\r\n      \"situationRemark\": \"string\"\r\n    },\r\n    \"workUnit\": \"string\"\r\n  }*/\r\nexport const savePreferential = (data:any) => request.post('/veteransPreferential/savePreferential', data)\r\n\r\n// 审批操作相关接口\r\nexport const saveAudit = (data:any) => request.post('/auditRecords/saveAudit', data)\r\n\r\n// 根据军人id查询军人信息\r\nexport const getSoldierInfo = (id:any) => request.get('/veteransBaseInfo/getPreferential', {id})\r\n\r\n// 查询军人信息列表\r\nexport const getVeteransPage = (data:any) => request.post('/veteransBaseInfo/getVeteransPage', data)\r\n","// This icon file is generated automatically.\nvar DeleteOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\"\n      }\n    }]\n  },\n  \"name\": \"delete\",\n  \"theme\": \"outlined\"\n};\nexport default DeleteOutlined;","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return (\n    /*#__PURE__*/\n    React.createElement(AntdIcon, Object.assign({}, props, {\n      ref: ref,\n      icon: DeleteOutlinedSvg\n    }))\n  );\n};\n\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default\n/*#__PURE__*/\nReact.forwardRef(DeleteOutlined);","\r\nimport React, { FC, useState, useEffect, useRef} from 'react'\r\nimport {BasicTable} from '@/components/table'\r\nimport {getPreferentialPage, deletePreferentialList, deletePreferential, } from '@/api/preferential'\r\nimport { Modal, Button } from 'antd'\r\nimport { PlusOutlined, DeleteOutlined} from '@ant-design/icons'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport { CustSchemaForm } from '@/components/form'\r\nimport { matchPath, useLocation} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '@/store/types'\r\nimport { setPanes } from '@/store/actions'\r\n\r\nconst PreferentialPage: FC = (props) => {\r\n    const  { history }:any = props\r\n    const panes = useSelector((state:RootState) => state.layoutReducer.panes)\r\n    const dispatch = useDispatch()\r\n\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n    const searchFormRef = useRef<FormInstance>(null)\r\n    const tableRef = useRef(null)\r\n\r\n    const location = useLocation()\r\n    const {pathname, state} = location\r\n    const [resData, setResData] = useState({\r\n        pageOption: {},\r\n        searchParam: {}\r\n    })\r\n\r\n    // 检验是否存在页面，是就在点击编辑前删除掉\r\n    const checkUrl=(url:string)=>{\r\n        const index = panes.findIndex((item:any)=> {\r\n            return matchPath(item.menuPath, {path: url, exact: true})\r\n        })\r\n        if(index > 0){\r\n            const arr = panes\r\n            arr.splice(index, 1)\r\n            dispatch(setPanes([...arr]))\r\n        }\r\n    }\r\n\r\n    const searchSchema = {\r\n        layout : {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 18 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 6\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"input\",\r\n                label: \"人员姓名\",\r\n                field: \"name\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入人员姓名\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"身份证号\",\r\n                field: \"idCardNo\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入身份证号码\"\r\n                },\r\n            }\r\n        ]\r\n    }\r\n\r\n    const handleDetail=async(record:any)=>{\r\n       // 先校验，存在就删除，再打开新的编辑页\r\n       checkUrl('/soldierManage/uraniumMining/detail/:id')\r\n       history.push({\r\n            pathname:`/soldierManage/uraniumMining/detail/${record.preferentialId}`,\r\n            state:{\r\n                refresh: true   \r\n            }\r\n       })\r\n    }\r\n\r\n    const columns=[ \r\n            {\r\n                title: '姓名',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text:any, ...[record, index]:any) => {\r\n                    return  <a type=\"text\" onClick={()=>handleDetail(record)}>\r\n                    {text}\r\n                  </a>\r\n                }\r\n            },\r\n            {\r\n                title: '身份证号',\r\n                dataIndex: 'idCardNo',\r\n                key: 'idCardNo',\r\n            },\r\n            {\r\n                title: '性别',\r\n                dataIndex: 'sex',\r\n                key: 'sex',\r\n                render: (text:any) => text === 'M' ? '男':'女'\r\n            },\r\n            {\r\n                title: '民族',\r\n                dataIndex: 'nation',\r\n                key: 'nation',\r\n            },\r\n            {\r\n                title: '联系电话',\r\n                dataIndex: 'phone',\r\n                key: 'phone',\r\n            },\r\n            {\r\n                title: '审核状态',\r\n                dataIndex: 'stateName',\r\n                key: 'stateName',\r\n            },\r\n            {\r\n                title: '行政区划',\r\n                dataIndex: 'orgName',\r\n                key: 'orgName',\r\n            },\r\n            {\r\n                title: '操作',\r\n                dataIndex: 'action',\r\n                actions: [\r\n                    {\r\n                        type: 'popconfirm', // 控制类型，默认为a,可选： select | button | text\r\n                        key: 'fileid', // 删除的依据，如果需要根据多个字段删除，则字段之间以英文逗号分隔开，例如： id, name\r\n                        text: '删除',\r\n                        permission: { // 权限\r\n                            action: 'delete',\r\n                            effect: 'disabled'\r\n                        },\r\n                        props: {\r\n                            type: 'danger'\r\n                        },\r\n                        func: async ({record}:any, callback:any) => {\r\n                            await deletePreferential(record.preferentialId)\r\n                            callback()\r\n                        },\r\n                    },\r\n                    {\r\n                        type: 'text', // 控制类型，默认为a,可选： select | button | text\r\n                        key: 'fileid', // 删除的依据，如果需要根据多个字段删除，则字段之间以英文逗号分隔开，例如： id, name\r\n                        text: '编辑',\r\n                        props: {\r\n                            type: 'danger'\r\n                        },\r\n                        func: async ({record}:any, callback:any) => {\r\n                            // 先校验，存在就删除，再打开新的编辑页\r\n                            checkUrl('/soldierManage/uraniumMining/edit/:id')\r\n                            history.push({\r\n                                pathname:`/soldierManage/uraniumMining/edit/${record.preferentialId}`,\r\n                                state:{\r\n                                    refresh: true   \r\n                                }\r\n                            })\r\n                        },\r\n                    },\r\n                    {\r\n                        type: 'text', // 控制类型，默认为a,可选： select | button | text\r\n                        key: 'fileid', // 删除的依据，如果需要根据多个字段删除，则字段之间以英文逗号分隔开，例如： id, name\r\n                        text: '审核',\r\n                        props: {\r\n                            type: 'warning'\r\n                        },\r\n                        func: async ({record}:any, callback:any) => {\r\n                            // 先校验，存在就删除，再打开新的编辑页\r\n                            checkUrl('/soldierManage/uraniumMining/audit/:id')\r\n                            history.push({\r\n                                pathname:`/soldierManage/uraniumMining/audit/${record.preferentialId}`,\r\n                                state:{\r\n                                    refresh: true   \r\n                                }\r\n                            })\r\n                      }\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n\r\n    const onSelectChange = (keys:any) => {\r\n        setSelectedRowKeys(keys)\r\n    }\r\n\r\n    const deleteItems=()=>{\r\n        Modal.confirm({\r\n            title: '提示',\r\n            icon: '',\r\n            content: '您确定要删除所有选中吗？',\r\n            onOk: async () => {\r\n                await deletePreferentialList(selectedRowKeys.toString());\r\n                (tableRef as any).current.refreshTable()\r\n                setSelectedRowKeys([])\r\n            }\r\n        })\r\n    }\r\n\r\n    const addItem =()=>{\r\n        history.push({\r\n            pathname:'/soldierManage/uraniumMining/add'\r\n        })\r\n    }\r\n\r\n    const handleClick=(val:any)=> {\r\n        setResData({\r\n            pageOption: resData.pageOption,\r\n            searchParam:val\r\n        });\r\n        (tableRef as any).current.refreshTable(val)\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(state && (state as any).refresh && pathname === '/soldierManage/uraniumMining'){\r\n            handleClick(resData.searchParam)\r\n        }\r\n    }, [state])\r\n\r\n    const callback=(val:any)=> setResData(val)\r\n\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <CustSchemaForm ref={searchFormRef} dynamicValidateForm={searchSchema} callback={handleClick} showBtn>\r\n                <Button type=\"primary\" ghost icon={<PlusOutlined />}  onClick={addItem}> 添加 </Button>\r\n                <Button danger icon={<DeleteOutlined />} onClick={deleteItems}> 删除 </Button>\r\n            </CustSchemaForm>\r\n            <BasicTable \r\n                ref={tableRef}\r\n                columns={columns} \r\n                getListFunc={getPreferentialPage} \r\n                queryParams={{\"type\": \"300027006\"}} \r\n                rowKey=\"preferentialId\"  \r\n                rowSelection={{\r\n                    selectedRowKeys,\r\n                    onChange: onSelectChange,\r\n                }} \r\n                pageOption={resData.pageOption}\r\n                searchParam={resData.searchParam}\r\n                callback={callback}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PreferentialPage"],"sourceRoot":""}