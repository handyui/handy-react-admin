{"version":3,"sources":["components/table/BasicTable.tsx","utils/validate.ts","pages/soldierManage/components/baseInfo/bi_preferential.tsx","pages/soldierManage/components/baseInfo/bi_joinBattle.tsx","pages/soldierManage/components/baseInfo/bi_threeGenera.tsx","pages/soldierManage/components/baseInfo/bi_inCountryside.tsx","pages/soldierManage/components/baseInfo/bi_seniorStaff.tsx","pages/soldierManage/components/baseInfo/bi_illness.tsx","pages/soldierManage/components/baseInfo/bi_senior.tsx","pages/soldierManage/components/baseInfo/bi_uraniumMining.tsx","pages/soldierManage/components/baseInfo/bi_martyr.tsx","pages/soldierManage/components/baseInfo/bi_martyrFamily.tsx","pages/soldierManage/components/typeInfor.tsx","pages/soldierManage/components/lifenfor.tsx","pages/soldierManage/components/medicalInfor.tsx","pages/soldierManage/components/filesInfor.tsx","pages/soldierManage/components/otherInfor.tsx","pages/soldierManage/components/soldierModal.tsx","webpack:///./src/assets/style/soldierManage.scss?740b","pages/soldierManage/components/allDetail.tsx","components/table/index.ts","api/preferential.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","utils/dateUtil.ts","api/file.ts","components/upload/utils.ts","webpack:///./src/components/upload/index.scss?9a6c","components/upload/SingleUpload.tsx","components/upload/AvatarUpload.tsx","components/upload/index.ts","components/upload/index.scss","assets/style/soldierManage.scss"],"names":["BasicTable","forwardRef","props","ref","columns","rowKey","rowSelection","queryParams","pageOption","searchParam","getListFunc","type","onExpand","callback","useState","data","setData","loading","setLoading","flag","find","item","dataIndex","key","actions","_isCancelled","React","useRef","refreshTableData","param","params","current","size","pageSize","then","result","code","records","total","forEach","finally","actionEvent","record","func","useEffect","useImperativeHandle","refreshTable","val","column","arr","push","filter","length","title","render","text","map","action","index","onConfirm","onClick","genColumn","dataSource","pagination","onChange","page","pageSizeOptions","showSizeChanger","defaultProps","isCardNo","card","test","BaseInfor","getContext","useContext","Context","modalType","resData","formRef","addSchema","layout","labelCol","span","wrapperCol","grid","rowGutter","colSpan","formItem","label","field","value","undefined","placeholder","treeDefaultExpandAll","asyncOptions","curValue","fields","a","getOrganizationTtree","mapTree","rules","required","message","validator","rule","Promise","resolve","reject","getDictionaryOption","options","date","dateString","setFieldsValue","outArmyDate","disabledDate","startDate","getFieldValue","moment","endOf","tailLayout","setFields","validateForm","veteransBaseInfo","dynamicValidateForm","console","log","conscriptsEndDate","TypeInfor","veteransTypeInfo","Lifenfor","veteransBankInfo","MedicalInfor","medicalInsurance","otherSafeguards","pensionSecurityType","medicalReimbursement","urbanMedicalHelp","comfortMedicaid","medicalInstitutionRelief","personalPayment","medicalFee","supportType","FilesInfor","fileList","ownerId","veteransId","disable","OtherInfor","veteransHouseInfo","SoldierModal","isModalVisible","setIsModalVisible","tableRef","searchFormRef","selectedKeys","setSelectedRowKeys","setveteransId","showModal","visible","onOk","onCancel","width","showBtn","getVeteransPage","selectedRowKeys","selectedRows","locals","TabPane","Tabs","createContext","DetailPage","preType","history","useHistory","location","useLocation","pathname","state","panes","useSelector","layoutReducer","dispatch","useDispatch","detailType","setResult","setFileList","isLoading","formRef1","formRef2","formRef3","formRef4","formRef5","formRef6","uploadRef","soldieRef","setIndex","getDetail","preferentialId","getPreferential","joinArmyDate","conscriptsStartDate","veteransMartyrFamily","retireIdNumber","militaryCode","abilityState","identificationBasis","applyType","belongPeriod","joinParty","conscriptsConvertDate","mentalDisease","fiveGuarantees","otherPreferentialIdentity","ionelyOldPeople","cancelTime","birthDate","threeGeneraObj","sacrificeDate","approvalMartyrsTime","revolutionaryTime","joinBattleObj","abilityLive","disabilityBelong","disabilityLevel","disabilityNature","laborCapacity","employmentSituation","workUnit","preferentialTreatmentType","subsistenceAllowances","bankAccount","bankAccountNo","bankName","bankAddress","houseType","houseStatus","houseArea","roomsNumber","familySize","veteransFamilyInfo","underAgeSize","agedSize","getDatas","url","split","slice","join","matchPath","path","exact","checkUrls","id","handleClose","findIndex","menuPath","splice","setPanes","deletePane","refresh","hasTypeInfo","indexOf","handleSubmit","validateFields","data1","data2","data3","data4","data6","formatToDateTime","updateTime","Date","idPhoto","getfileIds","remarks","holderName","martyrCertificateNo","martyrName","relation","sacrificeNativePlace","livingUnit","previousPosition","sacrificePlace","burialPlaceType","burialPlace","martyrsDeeds","martyrLogo","familyId","version","fileIds","toString","Object","assign","savePreferential","Message","success","close","forceUpdate","getSoldierInfoData","getSoldierInfo","rest","Provider","className","spinning","fileId","defaultActiveKey","activeKey","onTabClick","event","tab","renderBaseInfo","forceRender","deletePreferential","request","get","deletePreferentialList","ids","getPreferentialPage","post","saveAudit","_objectWithoutProperties","source","excluded","i","target","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","DATE_TIME_FORMAT","DATE_FORMAT","format","formatToDate","uploadAttachFile","getAttachFile","now","SingleUpload","accept","multiple","setState","setIds","Map","imgUrl","setImgUrl","previewVisible","previewTitle","previewImage","showImg","setShowImg","getImg","res","b","Blob","URL","createObjectURL","set","getAsyncData","setTimeout","handleDelete","deleteAttachFile","idIndex","arrs","nIds","error","setfileList","tip","status","onPreview","imageUrl","src","alt","style","fileName","link","document","createElement","download","href","click","handleDownload","tabIndex","role","e","files","nextFileList","img","reader","FileReader","addEventListener","readAsDataURL","getBase64","uid","name","formData","FormData","append","targetItem","PlusOutlined","marginTop","footer","classes","classNames","uploadClasses","module","exports"],"mappings":"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","file":"static/js/3.7f466c7c.chunk.js","sourcesContent":["import React, { useEffect, useState, forwardRef, useImperativeHandle } from 'react'\r\nimport {TableColumn} from \"./tableColumn.d\"\r\nimport { Table, Space, Popconfirm } from 'antd'\r\n// import {debounce} from '@/utils/index'\r\n\r\ninterface Columns {\r\n    actions?: any;\r\n    [key: string]: any;\r\n}\r\n\r\n// 分页查询参数\r\ninterface PagePrams {\r\n    current?: string | number // 当前页数\r\n    size?: string | number // 每页条数\r\n    [key: string]: any\r\n}\r\n\r\nexport interface BasicTableProps {\r\n    columns?: TableColumn\r\n    rowSelection?: any\r\n    rowKey?: any\r\n    queryParams?: object\r\n    pageOption?: any\r\n    searchParam?: any\r\n    getListFunc?: (val: any) => Promise<unknown> \r\n    refreshTable?: boolean\r\n    style?: React.CSSProperties\r\n    type?: any\r\n    onExpand?:(expanded:any, record:any) => void\r\n    callback?:(val:any) => void\r\n}\r\n\r\nexport interface MenuItemProps {\r\n    index?: string;\r\n    disabled?: boolean\r\n    className?: string\r\n    style?: React.CSSProperties\r\n}\r\n\r\nconst BasicTable = forwardRef<any, BasicTableProps>((props, ref) => {\r\n    const {columns, rowKey, rowSelection, queryParams, pageOption, searchParam, getListFunc, type, onExpand, callback} = props\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    // const [pageOptions, setPageOptions] = useState(pageOption)\r\n    const flag = columns.find((item:any) => (item.dataIndex || item.key) === 'action')\r\n    const actions = flag ? flag.actions : []\r\n    const _isCancelled = React.useRef(false)\r\n    // const [searchParam, setSearchParam] = useState({}) // 存储搜索记录，销毁时清除\r\n\r\n    // 获取表格数据\r\n    const refreshTableData =  (param?:any) => {\r\n        setLoading(true)\r\n        const params =  {\r\n            current:pageOption.current, \r\n            size:pageOption.pageSize, \r\n            ...queryParams, \r\n            ...searchParam,\r\n            ...param\r\n        }\r\n        getListFunc &&  getListFunc(params).then((result:any)=>{\r\n            if(result.code === 200){\r\n                if (!_isCancelled.current) { \r\n                const {records, current, size, total} = result.result\r\n                    // setPageOptions(Object.assign(pageOption, {current, pageSize:size, total}))\r\n                    callback && callback({\r\n                        searchParam: params,\r\n                        pageOption: {current, pageSize:size, total}\r\n                    })\r\n                    // 因为没有传回children字段，要自行添加，table tree 需要children\r\n                    if(type && type ==='table-tree'){\r\n                        records.forEach((item:any) => {\r\n                            item['children'] = []\r\n                        })\r\n                    }\r\n                    setData(records)\r\n                }\r\n            }\r\n        }).finally(() => {if(!_isCancelled.current){setLoading(false)} })\r\n        \r\n    }\r\n\r\n    // 操作事件\r\n    const actionEvent = (record:any, func:any) => func({record, props}, refreshTableData)\r\n\r\n    const genColumn = (column:any)=>{\r\n        let arr=[]\r\n        arr.push(...column.filter((item:any) => {\r\n           return item.dataIndex !== 'action'\r\n        }))\r\n        if(actions.length>0){\r\n            arr.push({\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text:any, record:any) => (\r\n                    <Space size=\"middle\">\r\n                    { actions.map((action:any, index:number) => (\r\n                         [ action.type==='popconfirm'? ( \r\n                            <Popconfirm key={index} title=\"您确定要删除吗？\" onConfirm={()=>actionEvent(record, action.func)}\r\n                    ><a>删除</a></Popconfirm>):'' ,\r\n                        action.type ===  'text'? (<a key={index} onClick={()=>actionEvent(record, action.func)}>{action.text}</a>):'']\r\n                    ))}\r\n                        \r\n                {/* //     <a>编辑</a>\r\n                //     <a>关联权限</a> */}\r\n                </Space>\r\n                ),\r\n            })\r\n        }\r\n        return arr\r\n    }\r\n\r\n    useEffect(()=>{\r\n        refreshTableData()\r\n        return () => {\r\n            // setSearchParam({})\r\n            _isCancelled.current = true\r\n        }\r\n    }, [])\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        refreshTable: (val:any) => {\r\n            // setSearchParam(val)\r\n            refreshTableData(val)\r\n        }\r\n    }))\r\n\r\n    // 分页改变\r\n    const paginationChange = (page:number, pageSize:number) => {\r\n        let params = {\r\n            size:pageSize?pageSize:pageOption.pageSize,\r\n            current: page\r\n        }\r\n        // setPageOptions({current: page, size:pageSize?pageSize:pageOption.pageSize })\r\n        callback && callback({\r\n            searchParam: searchParam,\r\n            pageOption: params\r\n        })\r\n        refreshTableData(params)\r\n    }\r\n\r\n\r\n    return (\r\n        <Table rowKey={rowKey}\r\n            rowSelection={rowSelection} \r\n            columns={genColumn(columns)} \r\n            dataSource={data} \r\n            loading={loading}\r\n            pagination={{...pageOption, \r\n                onChange:paginationChange, \r\n                pageSizeOptions: ['5', '10', '20', '50'],\r\n                showSizeChanger: true,\r\n            }}\r\n            onExpand={onExpand}\r\n        >\r\n            {/* {\r\n                columns.map((item:any) => (\r\n                <Column title={item.title} dataIndex={item.dataIndex} key={item.dataIndex}></Column>   \r\n                //   {item.dataIndex!=='action'?\r\n                //     <Column title={item.title} dataIndex={item.dataIndex} key={item.dataIndex} />\r\n                //     :''}\r\n                ))\r\n            } */}\r\n            {/* <Column title=\"roleName\" dataIndex=\"roleName\" key=\"roleName\" />\r\n        \r\n                actions.map((action:any, index:number) => (\r\n                    <div key={index}>88</div>\r\n                    {action.type == 'text'? <button>dddd</button>:''}  \r\n\r\n                ))\r\n            }\r\n            \r\n        <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\r\n        \r\n            <Column\r\n                title=\"Action\"\r\n                key=\"action\"\r\n                render={(text, record) => (\r\n                    <Space size=\"middle\">\r\n                        <a>Invite {record.lastName}</a>\r\n                        <a>Delete</a>\r\n                    </Space>\r\n                )}\r\n                />  */}\r\n        </Table>\r\n    )\r\n})\r\n\r\nBasicTable.defaultProps = {\r\n    pageOption:{\r\n        current:1, pageSize:10\r\n    },\r\n    refreshTable:false\r\n}\r\n\r\nexport default BasicTable\r\n","//检查号码是否符合规范，包括长度，类型\r\nexport const isCardNo = (card:string)=>{\r\n    //身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X\r\n    // const reg = /(^\\d{15}$)|(^\\d{17}(\\d|X)$)/\r\n    const reg = /^(^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$)|(^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d{4})|\\d{3}[Xx])$)$/\r\n    if(reg.test(card) === false){\r\n        return false\r\n    }\r\n    return true\r\n}","import React, {useState, useEffect, forwardRef, useContext, useRef, useImperativeHandle} from 'react'\r\nimport { NCustSchemaForm } from '@/components/form'\r\nimport {getOrganizationTtree, getDictionaryOption} from '@/api/system'\r\nimport { mapTree } from '@/utils/index'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport {Context} from '../allDetail'\r\nimport moment from 'moment'\r\nimport {isCardNo} from '@/utils/validate'\r\n\r\nconst BaseInfor = forwardRef<any>((props, ref) => {\r\n    const getContext = useContext(Context) // 接收创建的context\r\n    const { modalType, resData }:any = getContext\r\n    const formRef =  useRef<FormInstance>(null)\r\n\r\n    const addSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 12 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 12\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"tree-select\",\r\n                label: \"行政区域\",\r\n                field: \"organizationId\",\r\n                value: undefined,\r\n                loading: true,\r\n                props: {\r\n                    placeholder: \"请选择单位\",\r\n                    treeDefaultExpandAll: false,\r\n                },\r\n                asyncOptions: async (curValue:any, fields:any) => {\r\n                    const {result}:any = await getOrganizationTtree() \r\n                    let arr = mapTree(result[0])\r\n                    return arr? [arr]:[]\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"行政区域不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"名称\",\r\n                field: \"name\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入名称\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"名称不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"身份证号\",\r\n                field: \"idCardNo\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入身份证号\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"身份证号不能为空\"\r\n                    },\r\n                    {\r\n                        validator:(rule:any, value:any, callback:any)=>{\r\n                            return new Promise(async (resolve, reject) => {\r\n                                if(!isCardNo(value)){\r\n                                    await reject('请输入正确的身份证号')\r\n                                }else{\r\n                                    await resolve(value)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"民族\",\r\n                field: \"nation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入民族\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300029')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"民族不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"出生日期\",\r\n                field: \"birthDate\",\r\n                value: \"2020-12-29 09:23:14\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"出生日期不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"性别\",\r\n                field: \"sex\",\r\n                value: '',\r\n                options:[\r\n                    {value:'M', label:'男'},\r\n                    {value:'F', label:'女'}\r\n                ],\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"性别不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"联系电话\",\r\n                field: \"phone\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入联系电话\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"联系电话不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"婚姻状况\",\r\n                field: \"maritalStatus\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择婚姻状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300030')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"婚姻不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"伤残等级\",\r\n                field: \"disabilityLevel\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择伤残等级\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300003')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"伤残性质\",\r\n                field: \"disabilityNature\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择伤残等级\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300005')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"伤残属别\",\r\n                field: \"disabilityBelong\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择伤残等级\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300004')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"入伍时间\",\r\n                field: \"joinArmyDate\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\",\r\n                    onChange(date: any, dateString: string){\r\n                        (formRef as any).current.setFieldsValue({\r\n                            outArmyDate: null\r\n                        })\r\n                    },\r\n                }\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"退伍时间\",\r\n                field: \"outArmyDate\",\r\n                value: \"\", \r\n                props: {\r\n                    placeholder: \"请选择出生日期\",\r\n                    // disabled(){\r\n                    //     return  (formRef as any).current.getFieldValue('conscriptsStartDate')? false:true\r\n                    // },\r\n                    disabledDate(current:string){\r\n                        let startDate = (formRef as any).current.getFieldValue('joinArmyDate')\r\n                        return current && current < (moment(startDate).endOf('day')  as any)\r\n                    },\r\n                }\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"劳动能力\",\r\n                field: \"laborCapacity\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择伤残等级\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300006')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"生活能力\",\r\n                field: \"abilityLive\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择生活能力\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300007')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"就业情况\",\r\n                field: \"employmentSituation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择就业情况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300010')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口类型\",\r\n                field: \"householdType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口类型\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300031')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口簿上住址类别\",\r\n                field: \"householdAddressType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口簿住址类别\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300001')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"工作单位\",\r\n                field: \"workUnit\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入工作单位\"\r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"优抚对象状态\",\r\n                field: \"preferentialTreatmentType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择优抚对象状态\",\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300011')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"去世/迁出/取消日期\",\r\n                field: \"cancelTime\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择去世/迁出广东/取消日期\"\r\n                }\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否享受低保待遇\",\r\n                field: \"subsistenceAllowances\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择是否享受低保待遇\"\r\n                },\r\n                options:[\r\n                    {label:'是', value:'y'},\r\n                    {label:'否', value:'n'},\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"户口簿上地址\",\r\n                field: \"householdAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入户口簿上地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"实际居住地址\",\r\n                field: \"actualAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入实际居住地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"textArea\",\r\n                label: \"备注\",\r\n                field: \"remarks\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入备注\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n        ]\r\n    }\r\n\r\n    const [fields, setFields] = useState(null as any)\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [validateForm, setValidateForm] = useState(addSchema)\r\n\r\n    useEffect(()=>{\r\n       if(resData) setFields(resData.veteransBaseInfo)\r\n    }, [])\r\n\r\n  \r\n\r\n    useImperativeHandle(ref, () => ({\r\n        ...formRef.current,\r\n    }))\r\n\r\n    return (\r\n        <>\r\n            <NCustSchemaForm ref={formRef} fields={fields} dynamicValidateForm={validateForm} modalType={modalType} />\r\n        </>\r\n    )\r\n})\r\n\r\nexport default BaseInfor","import React, {useState, useEffect, forwardRef, useContext, useRef, useImperativeHandle} from 'react'\r\nimport { NCustSchemaForm } from '@/components/form'\r\nimport {getOrganizationTtree, getDictionaryOption} from '@/api/system'\r\nimport { mapTree } from '@/utils/index'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport {Context} from '../allDetail'\r\nimport moment from 'moment'\r\nimport {isCardNo} from '@/utils/validate'\r\n\r\nconst BaseInfor = forwardRef<any>((props, ref) => {\r\n    const getContext = useContext(Context) // 接收创建的context\r\n    const { modalType, resData }:any = getContext\r\n    const formRef =  useRef<FormInstance>(null)\r\n\r\n    const addSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 12 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 12\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"tree-select\",\r\n                label: \"行政区域\",\r\n                field: \"organizationId\",\r\n                value: undefined,\r\n                loading: true,\r\n                props: {\r\n                    placeholder: \"请选择单位\",\r\n                    treeDefaultExpandAll: false,\r\n                },\r\n                asyncOptions: async (curValue:any, fields:any) => {\r\n                    const {result}:any = await getOrganizationTtree() \r\n                    let arr = mapTree(result[0])\r\n                    return arr? [arr]:[]\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"行政区域不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"名称\",\r\n                field: \"name\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入名称\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"名称不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"身份证号\",\r\n                field: \"idCardNo\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入身份证号\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"身份证号不能为空\"\r\n                    },\r\n                    {\r\n                        validator:(rule:any, value:any, callback:any)=>{\r\n                            return new Promise(async (resolve, reject) => {\r\n                                if(!isCardNo(value)){\r\n                                    await reject('请输入正确的身份证号')\r\n                                }else{\r\n                                    await resolve(value)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"民族\",\r\n                field: \"nation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入民族\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300029')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"民族不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"出生日期\",\r\n                field: \"birthDate\",\r\n                value: \"2020-12-29 09:23:14\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"出生日期不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"性别\",\r\n                field: \"sex\",\r\n                value: '',\r\n                options:[\r\n                    {value:'M', label:'男'},\r\n                    {value:'F', label:'女'}\r\n                ],\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"性别不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"联系电话\",\r\n                field: \"phone\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入联系电话\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"联系电话不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"婚姻状况\",\r\n                field: \"maritalStatus\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择婚姻状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300030')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"婚姻不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"退役军人证件号\",\r\n                field: \"retireIdNumber\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入退役军人证件号\"\r\n                }\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"部队代码\",\r\n                field: \"militaryCode\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入部队代码\"\r\n                }\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"入伍时间\",\r\n                field: \"joinArmyDate\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\",\r\n                    onChange(date: any, dateString: string){\r\n                        (formRef as any).current.setFieldsValue({\r\n                            outArmyDate: null\r\n                        })\r\n                    },\r\n                    \r\n                }\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"退伍时间\",\r\n                field: \"outArmyDate\",\r\n                value: \"\", \r\n                props: {\r\n                    placeholder: \"请选择出生日期\",\r\n                    // disabled(){\r\n                    //     return  (formRef as any).current.getFieldValue('conscriptsStartDate')? false:true\r\n                    // },\r\n                    disabledDate(current:string){\r\n                        let startDate = (formRef as any).current.getFieldValue('joinArmyDate')\r\n                        return current && current < (moment(startDate).endOf('day')  as any)\r\n                    },\r\n                }\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"劳动能力\",\r\n                field: \"laborCapacity\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择伤残等级\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300006')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"生活状况\",\r\n                field: \"abilityState\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择生活状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300009')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"就业情况\",\r\n                field: \"employmentSituation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择就业情况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300010')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"身份认定依据\",\r\n                field: \"identificationBasis\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择身份认定依据\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300008')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口类型\",\r\n                field: \"householdType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口类型\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300031')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口簿上住址类别\",\r\n                field: \"householdAddressType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口簿住址类别\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300001')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"工作单位\",\r\n                field: \"workUnit\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入工作单位\"\r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"优抚对象状态\",\r\n                field: \"preferentialTreatmentType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择优抚对象状态\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300011')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"去世/迁出/取消日期\",\r\n                field: \"cancelTime\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择去世/迁出广东/取消日期\"\r\n                }\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否享受低保待遇\",\r\n                field: \"subsistenceAllowances\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择是否享受低保待遇\"\r\n                },\r\n                options:[\r\n                    {label:'是', value:'y'},\r\n                    {label:'否', value:'n'},\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"户口簿上地址\",\r\n                field: \"householdAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入户口簿上地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"实际居住地址\",\r\n                field: \"actualAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入实际居住地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"textArea\",\r\n                label: \"备注\",\r\n                field: \"remarks\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入备注\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n        ]\r\n    }\r\n\r\n    const [fields, setFields] = useState(null as any)\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [validateForm, setValidateForm] = useState(addSchema)\r\n\r\n    useEffect(()=>{\r\n       if(resData) setFields(resData.veteransBaseInfo)\r\n    }, [])\r\n\r\n  \r\n\r\n    useImperativeHandle(ref, () => ({\r\n        ...formRef.current,\r\n    }))\r\n\r\n    return (\r\n        <>\r\n            <NCustSchemaForm ref={formRef} fields={fields} dynamicValidateForm={validateForm} modalType={modalType} />\r\n        </>\r\n    )\r\n})\r\n\r\nexport default BaseInfor","import React, {useState, useEffect, forwardRef, useContext, useRef, useImperativeHandle} from 'react'\r\nimport { NCustSchemaForm } from '@/components/form'\r\nimport {getOrganizationTtree, getDictionaryOption} from '@/api/system'\r\nimport { mapTree } from '@/utils/index'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport {Context} from '../allDetail'\r\nimport moment from 'moment'\r\nimport {isCardNo} from '@/utils/validate'\r\n\r\nconst BaseInfor = forwardRef<any>((props, ref) => {\r\n    const getContext = useContext(Context) // 接收创建的context\r\n    const { modalType, resData }:any = getContext\r\n    const formRef =  useRef<FormInstance>(null)\r\n\r\n    const addSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 12 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 12\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"tree-select\",\r\n                label: \"行政区域\",\r\n                field: \"organizationId\",\r\n                value: undefined,\r\n                loading: true,\r\n                props: {\r\n                    placeholder: \"请选择单位\",\r\n                    treeDefaultExpandAll: false,\r\n                },\r\n                asyncOptions: async (curValue:any, fields:any) => {\r\n                    const {result}:any = await getOrganizationTtree() \r\n                    let arr = mapTree(result[0])\r\n                    return arr? [arr]:[]\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"行政区域不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"名称\",\r\n                field: \"name\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入名称\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"名称不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"身份证号\",\r\n                field: \"idCardNo\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入身份证号\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"身份证号不能为空\"\r\n                    },\r\n                    {\r\n                        validator:(rule:any, value:any, callback:any)=>{\r\n                            return new Promise(async (resolve, reject) => {\r\n                                if(!isCardNo(value)){\r\n                                    await reject('请输入正确的身份证号')\r\n                                }else{\r\n                                    await resolve(value)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"民族\",\r\n                field: \"nation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入民族\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300029')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"民族不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"出生日期\",\r\n                field: \"birthDate\",\r\n                value: \"2020-12-29 09:23:14\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"出生日期不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"性别\",\r\n                field: \"sex\",\r\n                value: '',\r\n                options:[\r\n                    {value:'M', label:'男'},\r\n                    {value:'F', label:'女'}\r\n                ],\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"性别不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"联系电话\",\r\n                field: \"phone\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入联系电话\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"联系电话不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"婚姻状况\",\r\n                field: \"maritalStatus\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择婚姻状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300030')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"婚姻不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"入伍时间\",\r\n                field: \"joinArmyDate\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\",\r\n                    onChange(date: any, dateString: string){\r\n                        (formRef as any).current.setFieldsValue({\r\n                            outArmyDate: null\r\n                        })\r\n                    },\r\n                    \r\n                }\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"退伍时间\",\r\n                field: \"outArmyDate\",\r\n                value: \"\", \r\n                props: {\r\n                    placeholder: \"请选择出生日期\",\r\n                    // disabled(){\r\n                    //     return  (formRef as any).current.getFieldValue('conscriptsStartDate')? false:true\r\n                    // },\r\n                    disabledDate(current:string){\r\n                        let startDate = (formRef as any).current.getFieldValue('joinArmyDate')\r\n                        return current && current < (moment(startDate).endOf('day')  as any)\r\n                    },\r\n                }\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"劳动能力\",\r\n                field: \"laborCapacity\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择伤残等级\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300006')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"生活状况\",\r\n                field: \"abilityState\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择生活状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300009')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"就业情况\",\r\n                field: \"employmentSituation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择就业情况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300010')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"申请类别\",\r\n                field: \"applyType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择申请类别\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300016')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口类型\",\r\n                field: \"householdType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口类型\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300031')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口簿上住址类别\",\r\n                field: \"householdAddressType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口簿住址类别\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300001')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"工作单位\",\r\n                field: \"workUnit\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入工作单位\"\r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"优抚对象状态\",\r\n                field: \"preferentialTreatmentType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择优抚对象状态\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300011')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"去世/迁出/取消日期\",\r\n                field: \"cancelTime\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择去世/迁出广东/取消日期\"\r\n                }\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否享受低保待遇\",\r\n                field: \"subsistenceAllowances\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择是否享受低保待遇\"\r\n                },\r\n                options:[\r\n                    {label:'是', value:'y'},\r\n                    {label:'否', value:'n'},\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"户口簿上地址\",\r\n                field: \"householdAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入户口簿上地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"实际居住地址\",\r\n                field: \"actualAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入实际居住地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"title\",\r\n                title: \"三属关系\"\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"烈士姓名\",\r\n                field: \"martyrName\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入烈士姓名\"\r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"牺牲时间\",\r\n                field: \"sacrificeDate\",\r\n                value: \"2020-12-29 09:23:14\",\r\n                props: {\r\n                    placeholder: \"请选择牺牲时间\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"持证人名称\",\r\n                field: \"holderName\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入持证人名称\"\r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"与烈士关系\",\r\n                field: \"relation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择与烈士关系\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300032')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"烈士证书编号\",\r\n                field: \"martyrCertificateNo\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入烈士证书编号\"\r\n                },\r\n            },\r\n            {\r\n                type: \"textArea\",\r\n                label: \"备注\",\r\n                field: \"remarks\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入备注\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n        ]\r\n    }\r\n\r\n    const [fields, setFields] = useState(null as any)\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [validateForm, setValidateForm] = useState(addSchema)\r\n\r\n    useEffect(()=>{\r\n       if(resData) setFields(resData.veteransBaseInfo)\r\n    }, [])\r\n\r\n  \r\n\r\n    useImperativeHandle(ref, () => ({\r\n        ...formRef.current,\r\n    }))\r\n\r\n    return (\r\n        <>\r\n            <NCustSchemaForm ref={formRef} fields={fields} dynamicValidateForm={validateForm} modalType={modalType} />\r\n        </>\r\n    )\r\n})\r\n\r\nexport default BaseInfor","import React, {useState, useEffect, forwardRef, useContext, useRef, useImperativeHandle} from 'react'\r\nimport { NCustSchemaForm } from '@/components/form'\r\nimport {getOrganizationTtree, getDictionaryOption} from '@/api/system'\r\nimport { mapTree } from '@/utils/index'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport {Context} from '../allDetail'\r\nimport moment from 'moment'\r\nimport {isCardNo} from '@/utils/validate'\r\n\r\nconst BaseInfor = forwardRef<any>((props, ref) => {\r\n    const getContext = useContext(Context) // 接收创建的context\r\n    const { modalType, resData }:any = getContext\r\n    const formRef =  useRef<FormInstance>(null)\r\n\r\n    const addSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 12 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 12\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"tree-select\",\r\n                label: \"行政区域\",\r\n                field: \"organizationId\",\r\n                value: undefined,\r\n                loading: true,\r\n                props: {\r\n                    placeholder: \"请选择单位\",\r\n                    treeDefaultExpandAll: false,\r\n                },\r\n                asyncOptions: async (curValue:any, fields:any) => {\r\n                    const {result}:any = await getOrganizationTtree() \r\n                    let arr = mapTree(result[0])\r\n                    return arr? [arr]:[]\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"行政区域不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"名称\",\r\n                field: \"name\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入名称\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"名称不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"身份证号\",\r\n                field: \"idCardNo\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入身份证号\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"身份证号不能为空\"\r\n                    },\r\n                    {\r\n                        validator:(rule:any, value:any, callback:any)=>{\r\n                            return new Promise(async (resolve, reject) => {\r\n                                if(!isCardNo(value)){\r\n                                    await reject('请输入正确的身份证号')\r\n                                }else{\r\n                                    await resolve(value)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"民族\",\r\n                field: \"nation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入民族\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300029')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"民族不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"出生日期\",\r\n                field: \"birthDate\",\r\n                value: \"2020-12-29 09:23:14\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"出生日期不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"性别\",\r\n                field: \"sex\",\r\n                value: '',\r\n                options:[\r\n                    {value:'M', label:'男'},\r\n                    {value:'F', label:'女'}\r\n                ],\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"性别不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"联系电话\",\r\n                field: \"phone\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入联系电话\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"联系电话不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"婚姻状况\",\r\n                field: \"maritalStatus\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择婚姻状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300030')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"婚姻不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"入伍时间\",\r\n                field: \"joinArmyDate\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\",\r\n                    onChange(date: any, dateString: string){\r\n                        (formRef as any).current.setFieldsValue({\r\n                            outArmyDate: null\r\n                        })\r\n                    },\r\n                    \r\n                }\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"退伍时间\",\r\n                field: \"outArmyDate\",\r\n                value: \"\", \r\n                props: {\r\n                    placeholder: \"请选择出生日期\",\r\n                    // disabled(){\r\n                    //     return  (formRef as any).current.getFieldValue('conscriptsStartDate')? false:true\r\n                    // },\r\n                    disabledDate(current:string){\r\n                        let startDate = (formRef as any).current.getFieldValue('joinArmyDate')\r\n                        return current && current < (moment(startDate).endOf('day')  as any)\r\n                    },\r\n                }\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"属于时期\",\r\n                field: \"belongPeriod\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择属于时期\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300012')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"劳动能力\",\r\n                field: \"laborCapacity\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择伤残等级\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300006')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"生活能力\",\r\n                field: \"abilityLive\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择生活能力\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300007')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"就业情况\",\r\n                field: \"employmentSituation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择就业情况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300010')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口类型\",\r\n                field: \"householdType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口类型\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300031')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口簿上住址类别\",\r\n                field: \"householdAddressType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口簿住址类别\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300001')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"工作单位\",\r\n                field: \"workUnit\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入工作单位\"\r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"优抚对象状态\",\r\n                field: \"preferentialTreatmentType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择优抚对象状态\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300011')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"去世/迁出/取消日期\",\r\n                field: \"cancelTime\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择去世/迁出广东/取消日期\"\r\n                }\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否享受低保待遇\",\r\n                field: \"subsistenceAllowances\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择是否享受低保待遇\"\r\n                },\r\n                options:[\r\n                    {label:'是', value:'y'},\r\n                    {label:'否', value:'n'},\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"户口簿上地址\",\r\n                field: \"householdAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入户口簿上地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"实际居住地址\",\r\n                field: \"actualAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入实际居住地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"textArea\",\r\n                label: \"备注\",\r\n                field: \"remarks\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入备注\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n        ]\r\n    }\r\n\r\n    const [fields, setFields] = useState(null as any)\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [validateForm, setValidateForm] = useState(addSchema)\r\n\r\n    useEffect(()=>{\r\n       if(resData) setFields(resData.veteransBaseInfo)\r\n    }, [])\r\n\r\n  \r\n\r\n    useImperativeHandle(ref, () => ({\r\n        ...formRef.current,\r\n    }))\r\n\r\n    return (\r\n        <>\r\n            <NCustSchemaForm ref={formRef} fields={fields} dynamicValidateForm={validateForm} modalType={modalType} />\r\n        </>\r\n    )\r\n})\r\n\r\nexport default BaseInfor","import React, {useState, useEffect, forwardRef, useContext, useRef, useImperativeHandle} from 'react'\r\nimport { NCustSchemaForm } from '@/components/form'\r\nimport {getOrganizationTtree, getDictionaryOption} from '@/api/system'\r\nimport { mapTree } from '@/utils/index'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport {Context} from '../allDetail'\r\nimport moment from 'moment'\r\nimport {isCardNo} from '@/utils/validate'\r\n\r\nconst BaseInfor = forwardRef<any>((props, ref) => {\r\n    const getContext = useContext(Context) // 接收创建的context\r\n    const { modalType, resData }:any = getContext\r\n    const formRef =  useRef<FormInstance>(null)\r\n\r\n    const addSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 12 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 12\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"tree-select\",\r\n                label: \"行政区域\",\r\n                field: \"organizationId\",\r\n                value: undefined,\r\n                loading: true,\r\n                props: {\r\n                    placeholder: \"请选择单位\",\r\n                    treeDefaultExpandAll: false,\r\n                },\r\n                asyncOptions: async (curValue:any, fields:any) => {\r\n                    const {result}:any = await getOrganizationTtree() \r\n                    let arr = mapTree(result[0])\r\n                    return arr? [arr]:[]\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"行政区域不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"名称\",\r\n                field: \"name\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入名称\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"名称不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"身份证号\",\r\n                field: \"idCardNo\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入身份证号\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"身份证号不能为空\"\r\n                    },\r\n                    {\r\n                        validator:(rule:any, value:any, callback:any)=>{\r\n                            return new Promise(async (resolve, reject) => {\r\n                                if(!isCardNo(value)){\r\n                                    await reject('请输入正确的身份证号')\r\n                                }else{\r\n                                    await resolve(value)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"民族\",\r\n                field: \"nation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入民族\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300029')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"民族不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"出生日期\",\r\n                field: \"birthDate\",\r\n                value: \"2020-12-29 09:23:14\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"出生日期不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"性别\",\r\n                field: \"sex\",\r\n                value: '',\r\n                options:[\r\n                    {value:'M', label:'男'},\r\n                    {value:'F', label:'女'}\r\n                ],\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"性别不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"联系电话\",\r\n                field: \"phone\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入联系电话\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"联系电话不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"婚姻状况\",\r\n                field: \"maritalStatus\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择婚姻状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300030')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"婚姻不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"入伍时间\",\r\n                field: \"joinArmyDate\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\",\r\n                    onChange(date: any, dateString: string){\r\n                        (formRef as any).current.setFieldsValue({\r\n                            outArmyDate: null\r\n                        })\r\n                    },\r\n                    \r\n                }\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"退伍时间\",\r\n                field: \"outArmyDate\",\r\n                value: \"\", \r\n                props: {\r\n                    placeholder: \"请选择出生日期\",\r\n                    // disabled(){\r\n                    //     return  (formRef as any).current.getFieldValue('conscriptsStartDate')? false:true\r\n                    // },\r\n                    disabledDate(current:string){\r\n                        let startDate = (formRef as any).current.getFieldValue('joinArmyDate')\r\n                        return current && current < (moment(startDate).endOf('day')  as any)\r\n                    },\r\n                }\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"入党时间\",\r\n                field: \"joinParty\",\r\n                value: \"2020-12-29 09:23:14\",\r\n                props: {\r\n                    placeholder: \"请选择入党时间\"\r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"劳动能力\",\r\n                field: \"laborCapacity\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择伤残等级\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300006')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"生活能力\",\r\n                field: \"abilityLive\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择生活能力\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300007')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"就业情况\",\r\n                field: \"employmentSituation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择就业情况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300010')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口类型\",\r\n                field: \"householdType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口类型\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300031')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口簿上住址类别\",\r\n                field: \"householdAddressType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口簿住址类别\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300001')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"工作单位\",\r\n                field: \"workUnit\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入工作单位\"\r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"优抚对象状态\",\r\n                field: \"preferentialTreatmentType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择优抚对象状态\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300011')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"去世/迁出/取消日期\",\r\n                field: \"cancelTime\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择去世/迁出广东/取消日期\"\r\n                }\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否享受低保待遇\",\r\n                field: \"subsistenceAllowances\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择是否享受低保待遇\"\r\n                },\r\n                options:[\r\n                    {label:'是', value:'y'},\r\n                    {label:'否', value:'n'},\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"户口簿上地址\",\r\n                field: \"householdAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入户口簿上地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"实际居住地址\",\r\n                field: \"actualAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入实际居住地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"textArea\",\r\n                label: \"备注\",\r\n                field: \"remarks\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入备注\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n        ]\r\n    }\r\n\r\n    const [fields, setFields] = useState(null as any)\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [validateForm, setValidateForm] = useState(addSchema)\r\n\r\n    useEffect(()=>{\r\n       if(resData) setFields(resData.veteransBaseInfo)\r\n    }, [])\r\n\r\n  \r\n\r\n    useImperativeHandle(ref, () => ({\r\n        ...formRef.current,\r\n    }))\r\n\r\n    return (\r\n        <>\r\n            <NCustSchemaForm ref={formRef} fields={fields} dynamicValidateForm={validateForm} modalType={modalType} />\r\n        </>\r\n    )\r\n})\r\n\r\nexport default BaseInfor","import React, {useState, useEffect, forwardRef, useContext, useRef, useImperativeHandle} from 'react'\r\nimport { NCustSchemaForm } from '@/components/form'\r\nimport {getOrganizationTtree, getDictionaryOption} from '@/api/system'\r\nimport { mapTree } from '@/utils/index'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport {Context} from '../allDetail'\r\nimport moment from 'moment'\r\nimport {isCardNo} from '@/utils/validate'\r\n\r\nconst BaseInfor = forwardRef<any>((props, ref) => {\r\n    const getContext = useContext(Context) // 接收创建的context\r\n    const { modalType, resData }:any = getContext\r\n    const formRef =  useRef<FormInstance>(null)\r\n\r\n    const addSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 12 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 12\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"tree-select\",\r\n                label: \"行政区域\",\r\n                field: \"organizationId\",\r\n                value: undefined,\r\n                loading: true,\r\n                props: {\r\n                    placeholder: \"请选择单位\",\r\n                    treeDefaultExpandAll: false,\r\n                },\r\n                asyncOptions: async (curValue:any, fields:any) => {\r\n                    const {result}:any = await getOrganizationTtree() \r\n                    let arr = mapTree(result[0])\r\n                    return arr? [arr]:[]\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"行政区域不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"名称\",\r\n                field: \"name\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入名称\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"名称不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"身份证号\",\r\n                field: \"idCardNo\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入身份证号\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"身份证号不能为空\"\r\n                    },\r\n                    {\r\n                        validator:(rule:any, value:any, callback:any)=>{\r\n                            return new Promise(async (resolve, reject) => {\r\n                                if(!isCardNo(value)){\r\n                                    await reject('请输入正确的身份证号')\r\n                                }else{\r\n                                    await resolve(value)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"民族\",\r\n                field: \"nation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入民族\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300029')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"民族不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"出生日期\",\r\n                field: \"birthDate\",\r\n                value: \"2020-12-29 09:23:14\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"出生日期不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"性别\",\r\n                field: \"sex\",\r\n                value: '',\r\n                options:[\r\n                    {value:'M', label:'男'},\r\n                    {value:'F', label:'女'}\r\n                ],\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"性别不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"联系电话\",\r\n                field: \"phone\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入联系电话\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"联系电话不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"婚姻状况\",\r\n                field: \"maritalStatus\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择婚姻状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300030')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"婚姻不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"入伍时间\",\r\n                field: \"joinArmyDate\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\",\r\n                    onChange(date: any, dateString: string){\r\n                        (formRef as any).current.setFieldsValue({\r\n                            outArmyDate: null\r\n                        })\r\n                    },\r\n                    \r\n                }\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"退伍时间\",\r\n                field: \"outArmyDate\",\r\n                value: \"\", \r\n                props: {\r\n                    placeholder: \"请选择出生日期\",\r\n                    // disabled(){\r\n                    //     return  (formRef as any).current.getFieldValue('conscriptsStartDate')? false:true\r\n                    // },\r\n                    disabledDate(current:string){\r\n                        let startDate = (formRef as any).current.getFieldValue('joinArmyDate')\r\n                        return current && current < (moment(startDate).endOf('day')  as any)\r\n                    },\r\n                }\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否精神病\",\r\n                field: \"mentalDisease\",\r\n                value: '',\r\n                options:[],\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300018')\r\n                    console.log('result', result)\r\n                    return result  \r\n                },\r\n                \r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"劳动能力\",\r\n                field: \"laborCapacity\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择伤残等级\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300006')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"生活能力\",\r\n                field: \"abilityLive\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择生活能力\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300007')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"就业情况\",\r\n                field: \"employmentSituation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择就业情况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300010')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口类型\",\r\n                field: \"householdType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口类型\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300031')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口簿上住址类别\",\r\n                field: \"householdAddressType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口簿住址类别\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300001')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"工作单位\",\r\n                field: \"workUnit\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入工作单位\"\r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"优抚对象状态\",\r\n                field: \"preferentialTreatmentType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择优抚对象状态\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300011')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"去世/迁出/取消日期\",\r\n                field: \"cancelTime\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择去世/迁出广东/取消日期\"\r\n                }\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否享受低保待遇\",\r\n                field: \"subsistenceAllowances\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择是否享受低保待遇\"\r\n                },\r\n                options:[\r\n                    {label:'是', value:'y'},\r\n                    {label:'否', value:'n'},\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"户口簿上地址\",\r\n                field: \"householdAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入户口簿上地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"实际居住地址\",\r\n                field: \"actualAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入实际居住地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"textArea\",\r\n                label: \"备注\",\r\n                field: \"remarks\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入备注\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n        ]\r\n    }\r\n\r\n    const [fields, setFields] = useState(null as any)\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [validateForm, setValidateForm] = useState(addSchema)\r\n\r\n    useEffect(()=>{\r\n       if(resData) setFields(resData.veteransBaseInfo)\r\n    }, [])\r\n\r\n  \r\n\r\n    useImperativeHandle(ref, () => ({\r\n        ...formRef.current,\r\n    }))\r\n\r\n    return (\r\n        <>\r\n            <NCustSchemaForm ref={formRef} fields={fields} dynamicValidateForm={validateForm} modalType={modalType} />\r\n        </>\r\n    )\r\n})\r\n\r\nexport default BaseInfor","import React, {useState, useEffect, forwardRef, useContext, useRef, useImperativeHandle} from 'react'\r\nimport { NCustSchemaForm } from '@/components/form'\r\nimport {getOrganizationTtree, getDictionaryOption} from '@/api/system'\r\nimport { mapTree } from '@/utils/index'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport {Context} from '../allDetail'\r\nimport moment from 'moment'\r\nimport {isCardNo} from '@/utils/validate'\r\n\r\nconst BaseInfor = forwardRef<any>((props, ref) => {\r\n    const getContext = useContext(Context) // 接收创建的context\r\n    const { modalType, resData }:any = getContext\r\n    const formRef =  useRef<FormInstance>(null)\r\n\r\n    const addSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 12 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 12\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"tree-select\",\r\n                label: \"行政区域\",\r\n                field: \"organizationId\",\r\n                value: undefined,\r\n                loading: true,\r\n                props: {\r\n                    placeholder: \"请选择单位\",\r\n                    treeDefaultExpandAll: false,\r\n                },\r\n                asyncOptions: async (curValue:any, fields:any) => {\r\n                    const {result}:any = await getOrganizationTtree() \r\n                    let arr = mapTree(result[0])\r\n                    return arr? [arr]:[]\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"行政区域不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"名称\",\r\n                field: \"name\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入名称\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"名称不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"身份证号\",\r\n                field: \"idCardNo\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入身份证号\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"身份证号不能为空\"\r\n                    },\r\n                    {\r\n                        validator:(rule:any, value:any, callback:any)=>{\r\n                            return new Promise(async (resolve, reject) => {\r\n                                if(!isCardNo(value)){\r\n                                    await reject('请输入正确的身份证号')\r\n                                }else{\r\n                                    await resolve(value)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"民族\",\r\n                field: \"nation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入民族\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300029')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"民族不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"出生日期\",\r\n                field: \"birthDate\",\r\n                value: \"2020-12-29 09:23:14\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"出生日期不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"性别\",\r\n                field: \"sex\",\r\n                value: '',\r\n                options:[\r\n                    {value:'M', label:'男'},\r\n                    {value:'F', label:'女'}\r\n                ],\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"性别不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"联系电话\",\r\n                field: \"phone\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入联系电话\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"联系电话不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"婚姻状况\",\r\n                field: \"maritalStatus\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择婚姻状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300030')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"婚姻不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"入伍时间\",\r\n                field: \"joinArmyDate\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择入伍时间\",\r\n                    onChange(date: any, dateString: string){\r\n                        (formRef as any).current.setFieldsValue({\r\n                            outArmyDate: null\r\n                        })\r\n                    },\r\n                    \r\n                }\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"退伍时间\",\r\n                field: \"outArmyDate\",\r\n                value: \"\", \r\n                props: {\r\n                    placeholder: \"请选择退伍时间\",\r\n                    // disabled(){\r\n                    //     return  (formRef as any).current.getFieldValue('conscriptsStartDate')? false:true\r\n                    // },\r\n                    disabledDate(current:string){\r\n                        let startDate = (formRef as any).current.getFieldValue('joinArmyDate')\r\n                        return current && current < (moment(startDate).endOf('day')  as any)\r\n                    },\r\n                }\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"服义务兵开始时间\",\r\n                field: \"conscriptsStartDate\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择开始日期\",\r\n                    onChange(date: any, dateString: string){\r\n                        (formRef as any).current.setFieldsValue({\r\n                            conscriptsEndDate: null\r\n                        })\r\n                    },\r\n                    \r\n                }\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"服义务兵结束时间\",\r\n                field: \"conscriptsEndDate\",\r\n                value: \"\", \r\n                props: {\r\n                    placeholder: \"请选择结束时间\",\r\n                    // disabled(){\r\n                    //     return  (formRef as any).current.getFieldValue('conscriptsStartDate')? false:true\r\n                    // },\r\n                    disabledDate(current:string){\r\n                        let startDate = (formRef as any).current.getFieldValue('conscriptsStartDate')\r\n                        return current && current < (moment(startDate).endOf('day')  as any)\r\n                    },\r\n                }\r\n            },\r\n            {\r\n                type: \"input-number\",\r\n                label: \"义务兵折算年限\",\r\n                field: \"conscriptsConvertDate\",\r\n                value: '',\r\n                options:[],\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"退役证件号\",\r\n                field: \"retireIdNumber\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入退役证件号\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"部队代号\",\r\n                field: \"militaryCode\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入部队代号\"\r\n                },\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否属于孤老\",\r\n                field: \"ionelyOldPeople\",\r\n                value: '',\r\n                options:[],\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300020')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"身份认定依据\",\r\n                field: \"identificationBasis\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择身份认定依据\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300008')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"劳动能力\",\r\n                field: \"laborCapacity\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择伤残等级\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300006')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"健康状况\",\r\n                field: \"health\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择健康状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300002')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"生活状况\",\r\n                field: \"abilityState\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择生活状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300009')\r\n                    return result  \r\n                },\r\n            },\r\n            \r\n            {\r\n                type: \"select\",\r\n                label: \"就业情况\",\r\n                field: \"employmentSituation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择就业情况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300010')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否享受五保待遇\",\r\n                field: \"fiveGuarantees\",\r\n                value: '',\r\n                options:[\r\n                    {label:'是', value:'1'},\r\n                    {label:'否', value:'0'},\r\n                ],\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否有其他优抚对象身份\",\r\n                field: \"otherPreferentialIdentity\",\r\n                value: '',\r\n                options:[\r\n                    {label:'是', value:'1'},\r\n                    {label:'否', value:'0'},\r\n                ],\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口类型\",\r\n                field: \"householdType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口类型\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300031')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口簿上住址类别\",\r\n                field: \"householdAddressType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口簿住址类别\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300001')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"工作单位\",\r\n                field: \"workUnit\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入工作单位\"\r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"优抚对象状态\",\r\n                field: \"preferentialTreatmentType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择优抚对象状态\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300011')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"去世/迁出/取消日期\",\r\n                field: \"cancelTime\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择去世/迁出广东/取消日期\"\r\n                }\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否享受低保待遇\",\r\n                field: \"subsistenceAllowances\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择是否享受低保待遇\"\r\n                },\r\n                options:[\r\n                    {label:'是', value:'y'},\r\n                    {label:'否', value:'n'},\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"户口簿上地址\",\r\n                field: \"householdAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入户口簿上地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"实际居住地址\",\r\n                field: \"actualAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入实际居住地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"textArea\",\r\n                label: \"备注\",\r\n                field: \"remarks\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入备注\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n        ]\r\n    }\r\n\r\n    const [fields, setFields] = useState(null as any)\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [validateForm, setValidateForm] = useState(addSchema)\r\n\r\n    useEffect(()=>{\r\n       if(resData) setFields(resData.veteransBaseInfo)\r\n    }, [])\r\n\r\n  \r\n\r\n    useImperativeHandle(ref, () => ({\r\n        ...formRef.current,\r\n    }))\r\n\r\n    return (\r\n        <>\r\n            <NCustSchemaForm ref={formRef} fields={fields} dynamicValidateForm={validateForm} modalType={modalType} />\r\n        </>\r\n    )\r\n})\r\n\r\nexport default BaseInfor","import React, {useState, useEffect, forwardRef, useContext, useRef, useImperativeHandle} from 'react'\r\nimport { NCustSchemaForm } from '@/components/form'\r\nimport {getOrganizationTtree, getDictionaryOption} from '@/api/system'\r\nimport { mapTree } from '@/utils/index'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport {Context} from '../allDetail'\r\nimport moment from 'moment'\r\nimport {isCardNo} from '@/utils/validate'\r\n\r\nconst BaseInfor = forwardRef<any>((props, ref) => {\r\n    const getContext = useContext(Context) // 接收创建的context\r\n    const { modalType, resData }:any = getContext\r\n    const formRef =  useRef<FormInstance>(null)\r\n\r\n    const addSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 12 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 12\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"tree-select\",\r\n                label: \"行政区域\",\r\n                field: \"organizationId\",\r\n                value: undefined,\r\n                loading: true,\r\n                props: {\r\n                    placeholder: \"请选择单位\",\r\n                    treeDefaultExpandAll: false,\r\n                },\r\n                asyncOptions: async (curValue:any, fields:any) => {\r\n                    const {result}:any = await getOrganizationTtree() \r\n                    let arr = mapTree(result[0])\r\n                    return arr? [arr]:[]\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"行政区域不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"名称\",\r\n                field: \"name\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入名称\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"名称不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"身份证号\",\r\n                field: \"idCardNo\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入身份证号\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"身份证号不能为空\"\r\n                    },\r\n                    {\r\n                        validator:(rule:any, value:any, callback:any)=>{\r\n                            return new Promise(async (resolve, reject) => {\r\n                                if(!isCardNo(value)){\r\n                                    await reject('请输入正确的身份证号')\r\n                                }else{\r\n                                    await resolve(value)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"民族\",\r\n                field: \"nation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入民族\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300029')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"民族不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"出生日期\",\r\n                field: \"birthDate\",\r\n                value: \"2020-12-29 09:23:14\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"出生日期不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"性别\",\r\n                field: \"sex\",\r\n                value: '',\r\n                options:[\r\n                    {value:'M', label:'男'},\r\n                    {value:'F', label:'女'}\r\n                ],\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"性别不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"联系电话\",\r\n                field: \"phone\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入联系电话\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"联系电话不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"婚姻状况\",\r\n                field: \"maritalStatus\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择婚姻状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300030')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"婚姻不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"入伍时间\",\r\n                field: \"joinArmyDate\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择入伍时间\",\r\n                    onChange(date: any, dateString: string){\r\n                        (formRef as any).current.setFieldsValue({\r\n                            outArmyDate: null\r\n                        })\r\n                    },\r\n                    \r\n                }\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"退伍时间\",\r\n                field: \"outArmyDate\",\r\n                value: \"\", \r\n                props: {\r\n                    placeholder: \"请选择退伍时间\",\r\n                    // disabled(){\r\n                    //     return  (formRef as any).current.getFieldValue('conscriptsStartDate')? false:true\r\n                    // },\r\n                    disabledDate(current:string){\r\n                        let startDate = (formRef as any).current.getFieldValue('joinArmyDate')\r\n                        return current && current < (moment(startDate).endOf('day')  as any)\r\n                    },\r\n                }\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"退役证件号\",\r\n                field: \"retireIdNumber\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入退役证件号\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"部队代号\",\r\n                field: \"militaryCode\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入部队代号\"\r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"身份认定依据\",\r\n                field: \"identificationBasis\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择身份认定依据\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300008')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"劳动能力\",\r\n                field: \"laborCapacity\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择伤残等级\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300006')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"健康状况\",\r\n                field: \"health\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择健康状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300002')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"生活状况\",\r\n                field: \"abilityState\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择生活状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300009')\r\n                    return result  \r\n                },\r\n            },\r\n            \r\n            {\r\n                type: \"select\",\r\n                label: \"就业情况\",\r\n                field: \"employmentSituation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择就业情况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300010')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否享受五保待遇\",\r\n                field: \"fiveGuarantees\",\r\n                value: '',\r\n                options:[\r\n                    {label:'是', value:'1'},\r\n                    {label:'否', value:'0'},\r\n                ],\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否有其他优抚对象身份\",\r\n                field: \"otherPreferentialIdentity\",\r\n                value: '',\r\n                options:[\r\n                    {label:'是', value:'1'},\r\n                    {label:'否', value:'0'},\r\n                ],\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口类型\",\r\n                field: \"householdType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口类型\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300031')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口簿上住址类别\",\r\n                field: \"householdAddressType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口簿住址类别\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300001')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"工作单位\",\r\n                field: \"workUnit\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入工作单位\"\r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"优抚对象状态\",\r\n                field: \"preferentialTreatmentType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择优抚对象状态\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300011')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"去世/迁出/取消日期\",\r\n                field: \"cancelTime\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择去世/迁出广东/取消日期\"\r\n                }\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否享受低保待遇\",\r\n                field: \"subsistenceAllowances\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择是否享受低保待遇\"\r\n                },\r\n                options:[\r\n                    {label:'是', value:'y'},\r\n                    {label:'否', value:'n'},\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"户口簿上地址\",\r\n                field: \"householdAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入户口簿上地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"实际居住地址\",\r\n                field: \"actualAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入实际居住地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"textArea\",\r\n                label: \"备注\",\r\n                field: \"remarks\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入备注\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n        ]\r\n    }\r\n\r\n    const [fields, setFields] = useState(null as any)\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [validateForm, setValidateForm] = useState(addSchema)\r\n\r\n    useEffect(()=>{\r\n       if(resData) setFields(resData.veteransBaseInfo)\r\n    }, [])\r\n\r\n  \r\n\r\n    useImperativeHandle(ref, () => ({\r\n        ...formRef.current,\r\n    }))\r\n\r\n    return (\r\n        <>\r\n            <NCustSchemaForm ref={formRef} fields={fields} dynamicValidateForm={validateForm} modalType={modalType} />\r\n        </>\r\n    )\r\n})\r\n\r\nexport default BaseInfor","import React, {useState, useEffect, forwardRef, useContext, useRef, useImperativeHandle} from 'react'\r\nimport { CustSchemaForm } from '@/components/form'\r\nimport {getOrganizationTtree, getDictionaryOption} from '@/api/system'\r\nimport { mapTree } from '@/utils/index'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport {Context} from '../allDetail'\r\nimport moment from 'moment'\r\nimport {isCardNo} from '@/utils/validate'\r\n\r\nconst BaseInfor = forwardRef<any>((props, ref) => {\r\n    const getContext = useContext(Context) // 接收创建的context\r\n    const { modalType, resData }:any = getContext\r\n    const formRef =  useRef<FormInstance>(null)\r\n\r\n    const addSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 12 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 12\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"tree-select\",\r\n                label: \"行政区域\",\r\n                field: \"organizationId\",\r\n                value: undefined,\r\n                loading: true,\r\n                props: {\r\n                    placeholder: \"请选择单位\",\r\n                    treeDefaultExpandAll: false,\r\n                },\r\n                asyncOptions: async (curValue:any, fields:any) => {\r\n                    const {result}:any = await getOrganizationTtree() \r\n                    let arr = mapTree(result[0])\r\n                    return arr? [arr]:[]\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"行政区域不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"烈士标识\",\r\n                field: \"martyrLogo\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入烈士标识\"\r\n                }\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"名称\",\r\n                field: \"name\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入名称\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"名称不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"曾用名\",\r\n                field: \"nameUsedBefore\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入曾用名\"\r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"出生日期\",\r\n                field: \"birthDate\",\r\n                value: \"2020-12-29 09:23:14\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"出生日期不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"性别\",\r\n                field: \"sex\",\r\n                value: '',\r\n                options:[\r\n                    {value:'M', label:'男'},\r\n                    {value:'F', label:'女'}\r\n                ],\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"性别不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"籍贯\",\r\n                field: \"householdAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入籍贯\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"牺牲时籍贯\",\r\n                field: \"sacrificeNativePlace\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入牺牲时籍贯\"\r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"参加革命时间\",\r\n                field: \"revolutionaryTime\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择参加革命时间\"\r\n                }\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"政治面貌\",\r\n                field: \"politicalIdentity\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择政治面貌\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('301004')\r\n                    return result  \r\n                }\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"生前单位\",\r\n                field: \"livingUnit\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入生前单位\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"曾任职务\",\r\n                field: \"previousPosition\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入曾任职务\"\r\n                },\r\n            },  \r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"牺牲时间\",\r\n                field: \"sacrificeDate\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择牺牲时间\"\r\n                }\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"牺牲地点\",\r\n                field: \"sacrificePlace\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入牺牲地点\"\r\n                },\r\n            },  \r\n            {\r\n                type: \"select\",\r\n                label: \"安葬地类型\",\r\n                field: \"burialPlaceType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择安葬地类型\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300033')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"安葬地点\",\r\n                field: \"burialPlace\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入牺牲地点\"\r\n                },\r\n            },\r\n            {\r\n                type: \"textArea\",\r\n                label: \"烈士简要事迹\",\r\n                field: \"martyrsDeeds\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入烈士简要事迹\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"textArea\",\r\n                label: \"备注\",\r\n                field: \"remarks\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入备注\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n        ]\r\n    }\r\n\r\n    const [fields, setFields] = useState(null as any)\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [validateForm, setValidateForm] = useState(addSchema)\r\n\r\n    useEffect(()=>{\r\n       if(resData) setFields(resData.veteransBaseInfo)\r\n    }, [])\r\n\r\n  \r\n\r\n    useImperativeHandle(ref, () => ({\r\n        ...formRef.current,\r\n    }))\r\n\r\n    return (\r\n        <>\r\n            <CustSchemaForm ref={formRef} fields={fields} dynamicValidateForm={validateForm} modalType={modalType} />\r\n        </>\r\n    )\r\n})\r\n\r\nexport default BaseInfor","import React, {useState, useEffect, forwardRef, useContext, useRef, useImperativeHandle} from 'react'\r\nimport { NCustSchemaForm } from '@/components/form'\r\nimport {getOrganizationTtree, getDictionaryOption} from '@/api/system'\r\nimport { mapTree } from '@/utils/index'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport {Context} from '../allDetail'\r\nimport moment from 'moment'\r\nimport {isCardNo} from '@/utils/validate'\r\n\r\nconst BaseInfor = forwardRef<any>((props, ref) => {\r\n    const getContext = useContext(Context) // 接收创建的context\r\n    const { modalType, resData }:any = getContext\r\n    const formRef =  useRef<FormInstance>(null)\r\n\r\n    const addSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 12 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 12\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"tree-select\",\r\n                label: \"行政区域\",\r\n                field: \"organizationId\",\r\n                value: undefined,\r\n                loading: true,\r\n                props: {\r\n                    placeholder: \"请选择单位\",\r\n                    treeDefaultExpandAll: false,\r\n                },\r\n                asyncOptions: async (curValue:any, fields:any) => {\r\n                    const {result}:any = await getOrganizationTtree() \r\n                    let arr = mapTree(result[0])\r\n                    return arr? [arr]:[]\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"行政区域不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"名称\",\r\n                field: \"name\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入名称\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"名称不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"身份证号\",\r\n                field: \"idCardNo\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入身份证号\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"身份证号不能为空\"\r\n                    },\r\n                    {\r\n                        validator:(rule:any, value:any, callback:any)=>{\r\n                            return new Promise(async (resolve, reject) => {\r\n                                if(!isCardNo(value)){\r\n                                    await reject('请输入正确的身份证号')\r\n                                }else{\r\n                                    await resolve(value)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"民族\",\r\n                field: \"nation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入民族\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300029')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"民族不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"出生日期\",\r\n                field: \"birthDate\",\r\n                value: \"2020-12-29 09:23:14\",\r\n                props: {\r\n                    placeholder: \"请选择出生日期\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"出生日期不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"性别\",\r\n                field: \"sex\",\r\n                value: '',\r\n                options:[\r\n                    {value:'M', label:'男'},\r\n                    {value:'F', label:'女'}\r\n                ],\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"性别不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"联系电话\",\r\n                field: \"phone\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入联系电话\"\r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"联系电话不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"婚姻状况\",\r\n                field: \"maritalStatus\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择婚姻状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300030')\r\n                    return result  \r\n                },\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"婚姻不能为空\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"牺牲者姓名\",\r\n                field: \"martyrName\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入牺牲者姓名\"\r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"牺牲时间\",\r\n                field: \"sacrificeDate\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择牺牲时间\"\r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"批准烈士时间\",\r\n                field: \"approvalMartyrsTime\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择批准时间\"\r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"与烈士关系\",\r\n                field: \"relation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择与烈士关系\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300032')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"劳动能力\",\r\n                field: \"laborCapacity\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择伤残等级\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300006')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"健康状况\",\r\n                field: \"health\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择健康状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300002')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"生活能力\",\r\n                field: \"abilityLive\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择生活能力\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300007')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"就业情况\",\r\n                field: \"employmentSituation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择就业情况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300010')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口类型\",\r\n                field: \"householdType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口类型\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300031')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"户口簿上住址类别\",\r\n                field: \"householdAddressType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择户口簿住址类别\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300001')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"工作单位\",\r\n                field: \"workUnit\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入工作单位\"\r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"优抚对象状态\",\r\n                field: \"preferentialTreatmentType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择优抚对象状态\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300011')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"date-pcker\",\r\n                label: \"去世/迁出/取消日期\",\r\n                field: \"cancelTime\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择去世/迁出广东/取消日期\"\r\n                }\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否享受低保待遇\",\r\n                field: \"subsistenceAllowances\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择是否享受低保待遇\"\r\n                },\r\n                options:[\r\n                    {label:'是', value:'y'},\r\n                    {label:'否', value:'n'},\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"户口簿上地址\",\r\n                field: \"householdAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入户口簿上地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"实际居住地址\",\r\n                field: \"actualAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入实际居住地址\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n            {\r\n                type: \"textArea\",\r\n                label: \"备注\",\r\n                field: \"remarks\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入备注\"\r\n                },\r\n                grid: {\r\n                    rowGutter: 0,\r\n                    colSpan: 24\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 4 },\r\n                    wrapperCol: { span: 18 },\r\n                }, \r\n            },\r\n        ]\r\n    }\r\n\r\n    const [fields, setFields] = useState(null as any)\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [validateForm, setValidateForm] = useState(addSchema)\r\n\r\n    useEffect(()=>{\r\n       if(resData) setFields(resData.veteransBaseInfo)\r\n    }, [])\r\n\r\n  \r\n\r\n    useImperativeHandle(ref, () => ({\r\n        ...formRef.current,\r\n    }))\r\n\r\n    return (\r\n        <>\r\n            <NCustSchemaForm ref={formRef} fields={fields} dynamicValidateForm={validateForm} modalType={modalType} />\r\n        </>\r\n    )\r\n})\r\n\r\nexport default BaseInfor","import React, {useState, useEffect, forwardRef, useContext} from 'react'\r\nimport { CustSchemaForm } from '@/components/form'\r\nimport {getDictionaryOption} from '@/api/system'\r\nimport {Context} from './allDetail'\r\n\r\nconst TypeInfor = forwardRef<any>((props, ref) => {\r\n    const getContext = useContext(Context)\r\n    const { modalType, resData } = getContext\r\n\r\n    const addSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 12 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 12\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"select\",\r\n                label: \"申请类别\",\r\n                field: \"applyType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择申请类别\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300015')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否精神病\",\r\n                field: \"joinParty\",\r\n                value: '',\r\n                options:[\r\n                    {value:'y', label:'是'},\r\n                    {value:'n', label:'否'}\r\n                ]\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否属于孤儿\",\r\n                field: \"isOrphan\",\r\n                value: '',\r\n                options:[\r\n                    {value:'y', label:'是'},\r\n                    {value:'n', label:'否'}\r\n                ]\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"是否属于孤老\",\r\n                field: \"ionelyOldPeople\",\r\n                value: '',\r\n                options:[\r\n                    {value:'y', label:'是'},\r\n                    {value:'n', label:'否'}\r\n                ]\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"涉核情况\",\r\n                field: \"nuclearRelatedSituation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择涉核情况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300021')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"伤残时期\",\r\n                field: \"disabilityPeriod\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择伤残时期\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300022')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"伤残情形\",\r\n                field: \"disabilitySituation\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请选择伤残情形\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300023')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"情形描述\",\r\n                field: \"situationRemark\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入情形描述\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"等级调整描述\",\r\n                field: \"levelAdjustment\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入等级调整描述\"\r\n                },\r\n            },\r\n        ]\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [validateForm, setValidateForm] = useState(addSchema)\r\n    const [fields, setFields] = useState(null as any)\r\n    \r\n    useEffect(()=>{\r\n        if(resData) setFields(resData.veteransTypeInfo)\r\n    }, [])\r\n    \r\n    return (\r\n        <CustSchemaForm ref={ref} fields={fields} dynamicValidateForm={validateForm} modalType={modalType}/>\r\n    )\r\n})\r\n\r\nexport default TypeInfor","import React, {useState, useEffect, forwardRef, useContext} from 'react'\r\nimport { CustSchemaForm } from '@/components/form'\r\nimport {Context} from './allDetail'\r\n\r\nconst Lifenfor = forwardRef<any>((props, ref) => {\r\n    const getContext = useContext(Context)\r\n    const { modalType, resData } = getContext\r\n\r\n    const addSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 12 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 12\r\n        },\r\n        formItem: [\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"生活费合计\",\r\n            //     field: \"iivingExpenses\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入生活费合计（元/年）\"\r\n            //     },\r\n            //     // rules: [\r\n            //     //     {\r\n            //     //         required: true,\r\n            //     //         message: \"请输入生活费合计（元）\"\r\n            //     //     }\r\n            //     // ]\r\n            // },\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"伤残抚恤金\",\r\n            //     field: \"disabilityPension\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入伤残抚恤金金额（元/年）\"\r\n            //     },\r\n            //     // rules: [\r\n            //     //     {\r\n            //     //         required: true,\r\n            //     //         message: \"请输入伤残抚恤金金额（元）\"\r\n            //     //     }\r\n            //     // ]\r\n            // },\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"伤残人员生活补助金\",\r\n            //     field: \"disabilityBenefits\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入伤残人员生活补助金（元/年）\"\r\n            //     },\r\n            // },\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"护理费\",\r\n            //     field: \"nursingExpenses\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入护理费（元/年）\"\r\n            //     },\r\n            // },\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"优待金\",\r\n            //     field: \"preferentialBenefits\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入优待金（元/年）\"\r\n            //     },\r\n            // },\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"最低生活保障金\",\r\n            //     field: \"minimumLivingAllowance\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入最低生活保障金（元/年）\"\r\n            //     },\r\n            // },\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"工资/养老金/离退休费\",\r\n            //     field: \"pension\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入工资/养老金/离退休费（元/年）\"\r\n            //     },\r\n            // },\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"一次性抚恤金\",\r\n            //     field: \"lumpSumPension\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入一次性抚恤金（元/年）\"\r\n            //     },\r\n            // },\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"特别抚恤金\",\r\n            //     field: \"specialPension\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入特别抚恤金（元）\"\r\n            //     },\r\n            // },\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"其它\",\r\n            //     field: \"other\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入其它（元）\"\r\n            //     },\r\n            // },\r\n            // {\r\n            //     type:\"title\",\r\n            //     title:\"账户信息\"\r\n            // },\r\n            {\r\n                type: \"input\",\r\n                label: \"开户银行帐户\",\r\n                field: \"bankAccount\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入开户银行帐户\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"开户银行帐号\",\r\n                field: \"bankAccountNo\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入开户银行帐号\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"开户银行名称\",\r\n                field: \"bankName\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入开户银行名称\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"开户银行地址\",\r\n                field: \"bankAddress\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入开户银行地址\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"开户人\",\r\n                field: \"bankAccountHolder\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入开户人\"\r\n                },\r\n            }\r\n        ]\r\n    }\r\n\r\n    const [fields, setFields] = useState(null as any)\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [validateForm, setValidateForm] = useState(addSchema)\r\n\r\n    useEffect(()=>{\r\n        if(resData) setFields(resData.veteransBankInfo)\r\n    }, [])\r\n\r\n    return (\r\n        <CustSchemaForm ref={ref} fields={fields} dynamicValidateForm={validateForm} modalType={modalType}/>\r\n    )\r\n})\r\n\r\nexport default Lifenfor","import React, {useState, useEffect, forwardRef, useContext} from 'react'\r\nimport { CustSchemaForm } from '@/components/form'\r\nimport {Context} from './allDetail'\r\n\r\nconst MedicalInfor = forwardRef<any>((props, ref) => {\r\n    const getContext = useContext(Context)\r\n    const { modalType, resData } = getContext\r\n\r\n    const addSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 12 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 12\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"checkbox\",\r\n                label: \"医疗保险\",\r\n                field: \"medicalInsurance\",\r\n                value: \"\",\r\n                options:[\r\n                    { label: '城镇职工基本医疗保险', value: '1' },\r\n                    { label: '城镇居民基本医疗保险', value: '2' },\r\n                    { label: '新型农村合作医疗', value: '3' },\r\n                    { label: '商业保障', value: '4' }\r\n                ]\r\n            },\r\n            {\r\n                type: \"checkbox\",\r\n                label: \"其它保障方式\",\r\n                field: \"otherSafeguards\",\r\n                value: \"\",\r\n                options:[\r\n                    { label: '城乡医疗救助', value: '1' },\r\n                    { label: '优抚对象医疗救助', value: '2' },\r\n                    { label: '医疗机构减免', value: '3' }\r\n                ]\r\n            },\r\n            {\r\n                type: \"checkbox\",\r\n                label: \"养老保障方式\",\r\n                field: \"pensionSecurityType\",  \r\n                value: \"\",\r\n                options:[\r\n                    { label: '新型农村养老保险', value: '1' },\r\n                    { label: '城镇居民养老保险', value: '2' },\r\n                    { label: '城镇职工基本养老保险', value: '3' },\r\n                    { label: '商业保险', value: '4' },\r\n                    { label: '无', value: '5' }\r\n                ]\r\n            },\r\n            // {\r\n            //     type:\"title\",\r\n            //     title:\"医疗保障标准和供养信息\"\r\n            // },\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"医疗保障体系报销\",  \r\n            //     field: \"medicalReimbursement\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入医疗保障体系报销（元/年）\"\r\n            //     },\r\n            // },\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"城乡医疗救助\",\r\n            //     field: \"urbanMedicalHelp\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入城乡医疗救助（元/年）\"\r\n            //     },\r\n            // },\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"优抚对象医疗补助\",\r\n            //     field: \"comfortMedicaid\",  \r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入优抚对象医疗补助（元/年）\"\r\n            //     },\r\n            // },\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"医疗机构减免\",\r\n            //     field: \"medicalInstitutionRelief\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入医疗机构减免（元/年）\"\r\n            //     },\r\n            // },   \r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"个人负担\",\r\n            //     field: \"personalPayment\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入个人负担（元/年）\"\r\n            //     },\r\n            // },\r\n            // {\r\n            //     type: \"input\",\r\n            //     label: \"医疗费合计\",\r\n            //     field: \"medicalFee\", \r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入医疗费合计（元）\"\r\n            //     },\r\n            // },\r\n            // {\r\n            //     type: \"select\",\r\n            //     label: \"供养方式\",\r\n            //     field: \"supportType\",\r\n            //     value: \"\",\r\n            //     props: {\r\n            //         placeholder: \"请输入供养方式\"\r\n            //     },\r\n            //     options:[\r\n            //         {label:'无', value:'1'}\r\n            //     ]\r\n            // },\r\n        ]\r\n    }\r\n\r\n    const [fields, setFields] = useState(null as any)\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [validateForm, setValidateForm] = useState(addSchema)\r\n\r\n    useEffect(()=>{\r\n        if(resData) setFields({\r\n            'medicalInsurance': resData.medicalInsurance,\r\n            'otherSafeguards':resData.otherSafeguards,\r\n            'pensionSecurityType':  resData.pensionSecurityType,\r\n            'medicalReimbursement': resData.medicalReimbursement,\r\n            'urbanMedicalHelp':resData.urbanMedicalHelp,\r\n            'comfortMedicaid':resData.comfortMedicaid,\r\n            'medicalInstitutionRelief':resData.medicalInstitutionRelief,\r\n            'personalPayment':resData.personalPayment,\r\n            'medicalFee':resData.medicalFee,\r\n            'supportType':resData.supportType\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <CustSchemaForm ref={ref} fields={fields} dynamicValidateForm={validateForm} modalType={modalType}/>\r\n    )\r\n})\r\n\r\nexport default MedicalInfor","import React, {forwardRef, useContext} from 'react'\r\nimport {SingleUpload} from '@/components/upload'\r\nimport {Context} from './allDetail'\r\n\r\ninterface FilesInforProps{\r\n  fileList?:any\r\n}\r\n\r\nconst FilesInfor = forwardRef<any, FilesInforProps>((props, ref) => {\r\n    const getContext = useContext(Context)\r\n    const { modalType, resData, fileList } = getContext\r\n\r\n    return (\r\n      <>\r\n       <SingleUpload ref={ref} ownerId={resData?resData.veteransId:''}  fileList={fileList}  disable={modalType === 'detail'? true:false}/>\r\n       </>\r\n    )\r\n})\r\n\r\nexport default FilesInfor","import React, {useState, useEffect, forwardRef, useContext} from 'react'\r\nimport { CustSchemaForm } from '@/components/form'\r\nimport {getDictionaryOption} from '@/api/system'\r\nimport {Context} from './allDetail'\r\n\r\nconst OtherInfor = forwardRef<any>((props, ref) => {\r\n    const getContext = useContext(Context)\r\n    const { modalType, resData } = getContext\r\n\r\n    const addSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 12 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 12\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"select\",\r\n                label: \"房屋性质\",\r\n                field: \"houseType\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入房屋性质\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300025')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"select\",\r\n                label: \"房屋状况\",\r\n                field: \"houseStatus\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入房屋状况\"\r\n                },\r\n                asyncOptions: async () => {\r\n                    const result = await getDictionaryOption('300026')\r\n                    return result  \r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"房屋面积（平方米）\",\r\n                field: \"houseArea\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入房屋面积（平方米）\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"房屋间数\",\r\n                field: \"roomsNumber\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入房屋间数\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"家庭总人口（人数）\",\r\n                field: \"familySize\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入家庭总人口（人数）\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"其中18岁（含）以下人口\",\r\n                field: \"underAgeSize\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入其中18岁（含）以下人口\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"60岁（含）以上人口\",\r\n                field: \"agedSize\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入60岁（含）以上人口\"\r\n                },\r\n            },\r\n        ]\r\n    }\r\n\r\n    const [fields, setFields] = useState(null as any)\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [validateForm, setValidateForm] = useState(addSchema)\r\n\r\n    useEffect(()=>{\r\n        if(resData) setFields(resData.veteransHouseInfo)\r\n    }, [])\r\n\r\n    return (\r\n        <CustSchemaForm ref={ref} fields={fields} dynamicValidateForm={validateForm} modalType={modalType}/>\r\n    )\r\n})\r\n\r\nexport default OtherInfor","import React,{forwardRef, useState, useRef, useImperativeHandle} from 'react'\r\nimport { getVeteransPage } from '@/api/preferential'\r\nimport {BasicTable} from '@/components/table'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport { CustSchemaForm } from '@/components/form'\r\nimport { Modal } from 'antd'\r\n\r\ninterface soldierModalProps{\r\n    callback?:(id:string)=>void\r\n}\r\n\r\nconst SoldierModal = forwardRef<any, soldierModalProps>((props, ref) => {\r\n    const {callback} = props\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const tableRef = useRef(null)\r\n    const searchFormRef = useRef<FormInstance>(null)\r\n    const [selectedKeys, setSelectedRowKeys] = useState(null)\r\n    const [veteransId, setveteransId] = useState([''])\r\n\r\n    const searchSchema = {\r\n        layout : {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 18 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 5\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"input\",\r\n                label: \"用户名\",\r\n                field: \"name\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入用户姓名\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"身份证\",\r\n                field: \"idCardNo\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入身份证号\"\r\n                },\r\n            },\r\n        ]\r\n    }     \r\n\r\n    const columns=[ \r\n        {\r\n            title: '姓名',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: '性别',\r\n            dataIndex: 'sex',\r\n            key: 'sex',\r\n            render: (text:any) => text === 'M' ? '男':'女'\r\n        },\r\n        {\r\n            title: '身份证号',\r\n            dataIndex: 'idCardNo',\r\n            key: 'idCardNo',\r\n        },\r\n        {\r\n            title: '手机号',\r\n            dataIndex: 'phone',\r\n            key: 'phone',\r\n        },\r\n        {\r\n            title: '行政区域',\r\n            dataIndex: 'orgName',\r\n            key: 'orgName',\r\n        },\r\n        // {\r\n        //     title: '操作',\r\n        //     dataIndex: 'action',\r\n        //     actions: [\r\n        //         {\r\n        //             type: 'popconfirm', // 控制类型，默认为a,可选： select | button | text\r\n        //             key: 'fileid', // 删除的依据，如果需要根据多个字段删除，则字段之间以英文逗号分隔开，例如： id, name\r\n        //             text: '删除',\r\n        //             permission: { // 权限\r\n        //                 action: 'delete',\r\n        //                 effect: 'disabled'\r\n        //             },\r\n        //             props: {\r\n        //                 type: 'danger'\r\n        //             },\r\n        //             func: async ({record}:any, callback:any) => {\r\n                      \r\n        //             },\r\n        //         },\r\n        //         {\r\n        //             type: 'text', // 控制类型，默认为a,可选： select | button | text\r\n        //             key: 'fileid', // 删除的依据，如果需要根据多个字段删除，则字段之间以英文逗号分隔开，例如： id, name\r\n        //             text: '编辑',\r\n        //             props: {\r\n        //                 type: 'warning'\r\n        //             },\r\n        //             func: async({record}:any, callback:any) => {\r\n                        \r\n        //             }\r\n        //         },\r\n        //     ]\r\n        // }\r\n    ]\r\n\r\n    const onCancel = () =>{\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    const onOk = () =>{\r\n        console.log('selectedKeys', selectedKeys)\r\n        callback && callback(selectedKeys as any)\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    const showModal = async(veteransId: string) =>{\r\n        setIsModalVisible(true)\r\n        setveteransId([veteransId])\r\n    }\r\n\r\n    const handleClick=(val:any)=> (tableRef as any).current.refreshTable(val)\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        showModal\r\n        // ...formRef.current,\r\n        // getfileIds(){\r\n        //     return (uploadRef as any).current.getfileIds()\r\n        // }\r\n    }))\r\n\r\n    const onChange = (selectedRowKeys: React.Key[], selectedRows: any[]) => {\r\n        setveteransId(selectedRowKeys as any)\r\n        setSelectedRowKeys(selectedRowKeys[0] as any)\r\n        console.log('selectedRowKeys', selectedRowKeys)\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal title=\"军人列表\" visible={isModalVisible} onOk={onOk} onCancel={onCancel} width={1000}>\r\n                <CustSchemaForm ref={searchFormRef} dynamicValidateForm={searchSchema} callback={handleClick} showBtn />\r\n                <BasicTable \r\n                    ref={tableRef}\r\n                    columns={columns} \r\n                    getListFunc={getVeteransPage} \r\n                    rowKey=\"veteransId\"  \r\n                    // rowSelection={{\r\n                    //     selectedRowKeys,\r\n                    //     onChange: onSelectChange,\r\n                    // }} \r\n                    // refreshTable={refreshTable}\r\n                    rowSelection={{\r\n                        type: 'radio',\r\n                        selectedRowKeys: veteransId,\r\n                        onChange,\r\n                    }}\r\n                />\r\n            </Modal>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default SoldierModal","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./soldierManage.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","/* eslint-disable no-unreachable */\r\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle} from 'react'\r\nimport {  Tabs, Button, message as Message, Space } from 'antd'\r\nimport { BIPreferential, BIJoinBattle, BIThreeGenera, \r\n  BIInCountryside, BISeniorStaff, BIIllness, BISenior,\r\n  BIUraniumMining, BIMartyr, BIMartyrFamily} from './baseInfo'\r\nimport { TypeInfor, Lifenfor, MedicalInfor, FilesInfor, OtherInfor} from '.'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport {savePreferential, getPreferential, getSoldierInfo} from '@/api/preferential'\r\nimport {formatToDateTime} from '@/utils/dateUtil'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '@/store/types'\r\nimport { setPanes } from '@/store/actions'\r\nimport { matchPath } from 'react-router'\r\nimport moment from 'moment'\r\nimport { AvatarUpload } from '@/components/upload'\r\nimport { Spin } from 'antd'\r\nimport SoldierModal from './soldierModal'\r\nimport '@/assets/style/soldierManage.scss'\r\n\r\nconst { TabPane } = Tabs\r\n\r\ninterface DetailProps {\r\n  modalType?:string // 新增 编辑 详情 审核\r\n  preType?:string // 优抚类型\r\n}\r\n\r\n// 创建一个context，默认值是edit\r\nexport const Context = React.createContext({modalType:'edit'} as any)\r\n\r\nconst DetailPage = forwardRef<any, DetailProps>((props, ref) => {\r\n  const {modalType, preType} = props\r\n    const history = useHistory()\r\n    // const dispatch = useDispatch()\r\n    const location = useLocation()\r\n    const {pathname, state} = location\r\n    const _isCancelled = useRef(false)\r\n\r\n    const panes = useSelector((state:RootState) => state.layoutReducer.panes)\r\n    const dispatch = useDispatch()\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [detailType, setType]= useState(modalType)\r\n    const [resData, setResult] = useState({} as any)\r\n    const [fileList, setFileList] =useState([])\r\n    const [isLoading, setLoading] =useState(false)\r\n\r\n    const formRef1 = useRef<FormInstance>(null)\r\n    const formRef2 = useRef<FormInstance>(null)\r\n    const formRef3 = useRef<FormInstance>(null)\r\n    const formRef4 = useRef<FormInstance>(null)\r\n    const formRef5 = useRef<FormInstance>(null)\r\n    const formRef6 = useRef<FormInstance>(null)\r\n\r\n    const uploadRef = useRef<any>(null)\r\n    const soldieRef = useRef<any>(null)\r\n\r\n    \r\n    const [index, setIndex] = useState('0')\r\n\r\n    const deletePane=(url:string)=>{\r\n      const index = panes.findIndex((item:any)=> {\r\n          return item.menuPath === url\r\n      })\r\n      if(index > 0){\r\n          const arr = panes\r\n          arr.splice(index, 1)\r\n          dispatch(setPanes([...arr]))\r\n      }\r\n    }\r\n\r\n    const getDetail=async(preferentialId:string)=>{\r\n        setLoading(true)\r\n        const {result, code}:any = await getPreferential(preferentialId)\r\n        if(code === 200 && !_isCancelled.current){\r\n            // dispatch(SetData(result))\r\n            setResult(result)\r\n          const {joinArmyDate, outArmyDate, conscriptsStartDate, conscriptsEndDate,\r\n            fileList, veteransBaseInfo, veteransMartyrFamily,\r\n            retireIdNumber, militaryCode, abilityState, identificationBasis, applyType,\r\n          belongPeriod,\r\n          joinParty,\r\n          conscriptsConvertDate,\r\n          mentalDisease, fiveGuarantees, otherPreferentialIdentity, ionelyOldPeople,\r\n          cancelTime } = result\r\n          const {birthDate} = veteransBaseInfo\r\n\r\n           let threeGeneraObj = {}\r\n          //  if(preType === '300027002'){\r\n            threeGeneraObj={\r\n                ...veteransMartyrFamily,\r\n                sacrificeDate: veteransMartyrFamily.sacrificeDate ? moment(veteransMartyrFamily.sacrificeDate) : null,\r\n                approvalMartyrsTime: veteransMartyrFamily.approvalMartyrsTime ? moment(veteransMartyrFamily.approvalMartyrsTime) : null,\r\n                revolutionaryTime: veteransMartyrFamily.revolutionaryTime ? moment(veteransMartyrFamily.revolutionaryTime) : null\r\n              }\r\n          //  }\r\n\r\n          let joinBattleObj = {\r\n            retireIdNumber,\r\n            militaryCode,\r\n            abilityState,\r\n            identificationBasis\r\n          }\r\n\r\n          formRef1.current && formRef1.current!.setFieldsValue({\r\n            ...result.veteransBaseInfo,\r\n            applyType,\r\n            birthDate:  birthDate ? moment(birthDate) : null,\r\n            joinArmyDate: joinArmyDate? moment(joinArmyDate) : null,\r\n            outArmyDate: outArmyDate? moment(outArmyDate) : null,\r\n            conscriptsStartDate: conscriptsStartDate ? moment(conscriptsStartDate) : null,\r\n            conscriptsEndDate: conscriptsEndDate ? moment(conscriptsEndDate) : null,\r\n            abilityLive: result.abilityLive,\r\n            disabilityBelong: result.disabilityBelong,\r\n            disabilityLevel: result.disabilityLevel,\r\n            disabilityNature: result.disabilityNature,\r\n            laborCapacity: result.laborCapacity,\r\n            employmentSituation: result.employmentSituation,\r\n            workUnit: result.workUnit,\r\n            preferentialTreatmentType: result.preferentialTreatmentType,\r\n            subsistenceAllowances: result.subsistenceAllowances,\r\n            ...threeGeneraObj,  // 三属\r\n            ...joinBattleObj, // 参战涉核\r\n            belongPeriod,\r\n            joinParty: joinParty ? moment(joinParty) : null,\r\n            mentalDisease,\r\n            fiveGuarantees, otherPreferentialIdentity, ionelyOldPeople,conscriptsConvertDate,\r\n            cancelTime: cancelTime ? moment(cancelTime) : null,\r\n          })\r\n          // console.log('result.veteransTypeInfo', result.veteransTypeInfo)\r\n          formRef2.current && formRef2.current!.setFieldsValue({...result.veteransTypeInfo})\r\n          formRef3.current && formRef3.current!.setFieldsValue({\r\n            bankAccount:result.veteransBankInfo.bankAccount,\r\n            bankAccountNo:result.veteransBankInfo.bankAccountNo,\r\n            bankName:result.veteransBankInfo.bankName,\r\n            bankAddress:result.veteransBankInfo.bankAddress\r\n          })\r\n\r\n          formRef4.current && formRef4.current!.setFieldsValue({\r\n            medicalInsurance:result.medicalInsurance,\r\n            otherSafeguards:result.otherSafeguards,\r\n            pensionSecurityType:result.pensionSecurityType\r\n          })\r\n\r\n\r\n          formRef6.current && formRef6.current!.setFieldsValue({\r\n            houseType:result.veteransHouseInfo.houseType,\r\n            houseStatus:result.veteransHouseInfo.houseStatus,\r\n            houseArea:result.veteransHouseInfo.houseArea,\r\n            roomsNumber:result.veteransHouseInfo.roomsNumber,\r\n            familySize:result.veteransFamilyInfo.familySize,\r\n            underAgeSize:result.veteransFamilyInfo.underAgeSize,\r\n            agedSize:result.veteransFamilyInfo.agedSize,\r\n          })\r\n\r\n          // const res:any = await getAttachFileByOwner({\"ownerId\": result.veteransId})\r\n          // if(res.code == '200' && !_isCancelled.current){\r\n          setFileList(fileList)\r\n          // }\r\n\r\n        }\r\n        \r\n        setLoading(false)\r\n    }\r\n\r\n    const checkUrls = () =>{\r\n      let url = location.pathname.split('/').slice(0,4).join('/')\r\n      let aUrl = matchPath(location.pathname, {path: `${url}/:id`, exact: true})\r\n      return aUrl\r\n    }\r\n\r\n    const getDatas=()=>{\r\n      const a:any = checkUrls()\r\n      if(a && a.params!.id){\r\n        setIndex('0')\r\n        getDetail(a.params!.id)\r\n      }\r\n    }\r\n\r\n    useEffect(()=>{\r\n      return ()=>{\r\n        _isCancelled.current = true\r\n      }\r\n    }, [])\r\n\r\n    // useEffect(()=>{\r\n    //   if(state && (state as any).refresh){\r\n    //     getDatas() \r\n    //     console.log('sssssss', pathname)\r\n    //   }\r\n    // }, [state])\r\n\r\n    const handleClose=()=>{\r\n      deletePane(location.pathname)\r\n      let url = location.pathname.split('/').slice(0,3).join('/')\r\n      history.push({\r\n        pathname: url,\r\n        state:{\r\n          refresh: true\r\n        }\r\n      })\r\n    }\r\n\r\n    const hasTypeInfo=()=>{\r\n      const white = ['300027001', '300027008', '300027002']\r\n      return white.indexOf(preType as string) > -1 ? true : false\r\n    }\r\n\r\n    const isMartyr = () =>{\r\n      console.log('aaa', preType === '300027009', preType)\r\n      return preType === '300027009'\r\n    }\r\n  \r\n    const handleSubmit= async(state:string)=>{\r\n      try {\r\n        const data1 =  formRef1.current && await formRef1.current!.validateFields() \r\n        const data2 =  hasTypeInfo() && formRef2.current && await formRef2.current!.validateFields() \r\n        const data3 =  formRef3.current && await formRef3.current!.validateFields() \r\n        const data4 =  formRef4.current && await formRef4.current!.validateFields() \r\n        // const data5 =  formRef5.current && await formRef5.current!.validateFields() \r\n        const data6 =  formRef6.current && await formRef6.current!.validateFields() \r\n\r\n      const veteransBankInfo={\r\n        ...data3\r\n      }\r\n      const veteransBaseInfo={\r\n        ...data1,\r\n        birthDate: data1.birthDate ? formatToDateTime(data1.birthDate) : null,\r\n        updateTime: formatToDateTime(new Date()),\r\n        idPhoto: (uploadRef as any).current.getfileIds()\r\n      }\r\n      const veteransFamilyInfo={\r\n        ...data6\r\n      }\r\n      const veteransHouseInfo={\r\n        ...data6\r\n      }\r\n      \r\n      const veteransTypeInfo={\r\n        ...data2\r\n      }\r\n\r\n\r\n      const {joinArmyDate, outArmyDate, abilityLive, conscriptsEndDate, conscriptsStartDate, disabilityBelong, disabilityLevel, disabilityNature,\r\n        employmentSituation, laborCapacity, remarks, subsistenceAllowances, workUnit, preferentialTreatmentType,\r\n        abilityState, retireIdNumber, militaryCode, identificationBasis,\r\n        holderName, martyrCertificateNo, martyrName, relation, sacrificeDate, applyType, approvalMartyrsTime, \r\n        sacrificeNativePlace, revolutionaryTime, livingUnit, previousPosition, sacrificePlace, burialPlaceType, burialPlace, martyrsDeeds, martyrLogo,\r\n        belongPeriod,\r\n        joinParty,\r\n        mentalDisease,\r\n        conscriptsConvertDate, fiveGuarantees, otherPreferentialIdentity,\r\n        cancelTime\r\n       } = data1\r\n      const {medicalInsurance, otherSafeguards, pensionSecurityType} = data4\r\n\r\n      const veteransMartyrFamily={ // 三属烈士信息\r\n        preferentialId: detailType === 'edit'? (resData as any).preferentialId : null,\r\n        familyId: detailType === 'edit'? (resData as any).veteransMartyrFamily.familyId : null,\r\n        holderName, martyrCertificateNo, martyrName, relation, remarks,\r\n        sacrificeNativePlace, livingUnit, previousPosition, sacrificePlace, martyrLogo,\r\n        burialPlaceType, burialPlace, martyrsDeeds, \r\n        revolutionaryTime: revolutionaryTime?formatToDateTime(revolutionaryTime):null,\r\n        sacrificeDate: sacrificeDate?formatToDateTime(sacrificeDate):null,\r\n        approvalMartyrsTime: approvalMartyrsTime?formatToDateTime(approvalMartyrsTime):null,\r\n      }\r\n\r\n      const params = {\r\n        \"preferentialId\": detailType === 'edit'? (resData as any).preferentialId : null,\r\n        \"veteransId\":  detailType === 'edit'? (resData as any).veteransId : null,\r\n        \"version\":detailType === 'edit'?  (resData as any).version : null,\r\n        fileIds:(formRef5 as any).current.getfileIds(),\r\n        abilityLive,\r\n        applyType,\r\n        conscriptsConvertDate,\r\n        joinArmyDate: joinArmyDate?formatToDateTime(joinArmyDate):null,\r\n        outArmyDate: outArmyDate?formatToDateTime(outArmyDate):null,\r\n        \"conscriptsEndDate\": conscriptsEndDate?formatToDateTime(conscriptsEndDate):null,\r\n        \"conscriptsStartDate\": conscriptsStartDate?formatToDateTime(conscriptsStartDate):null,\r\n        \"disabilityBelong\": disabilityBelong,\r\n        \"disabilityLevel\": disabilityLevel,\r\n        \"disabilityNature\": disabilityNature,\r\n        \"employmentSituation\": employmentSituation,\r\n        fiveGuarantees,\r\n        ionelyOldPeople: hasTypeInfo() ? data2.ionelyOldPeople: data1.ionelyOldPeople,\r\n        \"laborCapacity\": laborCapacity,\r\n        \"medicalInsurance\": medicalInsurance && medicalInsurance.toString(),\r\n        otherPreferentialIdentity,\r\n        \"otherSafeguards\": otherSafeguards && otherSafeguards.toString(),\r\n        \"pensionSecurityType\":  pensionSecurityType && pensionSecurityType.toString(),\r\n        \"preferentialTreatmentType\": preferentialTreatmentType ,\r\n        remarks,\r\n        \"state\": state,\r\n        \"subsistenceAllowances\": subsistenceAllowances,\r\n        \"type\": preType,\r\n        \"veteransBankInfo\": detailType === 'edit'? Object.assign((resData as any).veteransBankInfo, veteransBankInfo) : veteransBankInfo,\r\n        \"veteransBaseInfoAddReq\": detailType === 'edit' ? Object.assign((resData as any).veteransBaseInfo, veteransBaseInfo) : veteransBaseInfo,\r\n        \"veteransFamilyInfo\":  detailType === 'edit' ? Object.assign((resData as any).veteransFamilyInfo, veteransFamilyInfo) : veteransFamilyInfo,\r\n        \"veteransHouseInfo\":  detailType === 'edit' ? Object.assign((resData as any).veteransHouseInfo, veteransHouseInfo) : veteransHouseInfo,\r\n        \"veteransMartyrFamily\": detailType === 'edit' ? Object.assign({}, (resData as any).veteransMartyrFamily, veteransMartyrFamily) : veteransMartyrFamily,\r\n        \"veteransTypeInfo\": detailType === 'edit'? Object.assign({}, (resData as any).veteransTypeInfo, veteransTypeInfo) : veteransTypeInfo,\r\n        \"workUnit\": workUnit,\r\n        abilityState,\r\n        retireIdNumber, // 参战--退役军人证件号\r\n        militaryCode,  // 参战--部队代码\r\n        identificationBasis,\r\n        belongPeriod, // 在乡复原\r\n        joinParty: joinParty?formatToDateTime(joinParty):null, // 入党时间\r\n        mentalDisease, // 带病回乡 是否精神病\r\n        cancelTime: cancelTime?formatToDateTime(cancelTime):null,\r\n      }\r\n\r\n      const {code}:any = await savePreferential(params) \r\n      if( code===200 ){\r\n        Message.success('操作成功')\r\n        handleClose()\r\n      }\r\n\r\n      } catch(err) {\r\n        console.log(err)\r\n        // console.log(Message.error(err.errorFields[0].errors[0]))\r\n      }  \r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      resData:resData?resData:{},\r\n      close:handleClose,\r\n      forceUpdate:getDatas\r\n    }))\r\n  \r\n    const onTabClick=(key: string, event: MouseEvent|any)=>{\r\n      setIndex(key)\r\n    }\r\n\r\n    const handleChoose=()=>{\r\n      (soldieRef as any).current.showModal(resData.veteransId?resData.veteransId:'')\r\n    }\r\n\r\n    const getSoldierInfoData= async(veteransId:string)=>{\r\n      setLoading(true)\r\n        const {result, code}:any = await getSoldierInfo(veteransId)\r\n        if(code === 200 && !_isCancelled.current){\r\n          const {veteransBankInfo, veteransFamilyInfo, veteransHouseInfo, fileList, idPhoto, ...rest} = result\r\n          const {birthDate, veteransId, version} = rest\r\n          formRef1.current && formRef1.current!.setFieldsValue({\r\n            ...rest,\r\n            birthDate:  birthDate ? moment(birthDate) : null\r\n          })\r\n          formRef3.current && formRef3.current!.setFieldsValue({\r\n            bankAccount: veteransBankInfo ? veteransBankInfo.bankAccount:null,\r\n            bankAccountNo: veteransBankInfo ?veteransBankInfo.bankAccountNo:null,\r\n            bankName: veteransBankInfo ?veteransBankInfo.bankName:null,\r\n            bankAddress: veteransBankInfo ?veteransBankInfo.bankAddress:null\r\n          })\r\n          formRef6.current && formRef6.current!.setFieldsValue({\r\n            houseType:veteransHouseInfo ?veteransHouseInfo.houseType:null,\r\n            houseStatus:veteransHouseInfo ?veteransHouseInfo.houseStatus:null,\r\n            houseArea:veteransHouseInfo ?veteransHouseInfo.houseArea:null,\r\n            roomsNumber:veteransHouseInfo ?veteransHouseInfo.roomsNumber:null,\r\n            familySize:veteransFamilyInfo ?veteransFamilyInfo.familySize:null,\r\n            underAgeSize:veteransFamilyInfo ?veteransFamilyInfo.underAgeSize:null,\r\n            agedSize:veteransFamilyInfo ?veteransFamilyInfo.agedSize:null,\r\n          })\r\n\r\n          setFileList(fileList)\r\n              \r\n          setResult({\r\n            ...resData, \r\n            fileList,\r\n            veteransId, \r\n            veteransHouseInfo: {...resData.veteransHouseInfo, veteransId},\r\n            veteransFamilyInfo: {...resData.veteransFamilyInfo, veteransId},\r\n            veteransBaseInfo: {...resData.veteransBaseInfo, veteransId, version, idPhoto},\r\n            veteransBankInfo: {...resData.veteransBankInfo, veteransId},\r\n          });\r\n          // (uploadRef as any).current.setfileList(resData.veteransBaseInfo.idPhoto)\r\n        }\r\n        setLoading(false)\r\n        \r\n    }\r\n\r\n    const renderBaseInfo=(preType:string)=>{\r\n      switch(preType){\r\n        case \"300027001\": return <BIPreferential ref={formRef1} />; break;     // 伤残                     \r\n        case \"300027008\": return <BIJoinBattle ref={formRef1} />; break;   // 参战涉核\r\n        case \"300027002\": return <BIThreeGenera ref={formRef1} />; break;   // 三属\r\n        case \"300027003\": return <BIInCountryside ref={formRef1} />; break;   // 在乡复原军人\r\n        case \"300027007\": return <BISeniorStaff ref={formRef1} />; break;   // 五老人员\r\n        case \"300027004\": return <BIIllness ref={formRef1} />; break;   // 带病回乡\r\n        case \"300027005\": return <BISenior ref={formRef1} />; break;   // 60岁以上\r\n        case \"300027006\": return <BIUraniumMining ref={formRef1} />; break;   // 铀矿开采\r\n        case \"300027009\": return <BIMartyr ref={formRef1} />; break;   // 烈士\r\n        case \"300027010\": return <BIMartyrFamily ref={formRef1} />; break;   // 烈士子女\r\n        default: return null;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Context.Provider value={{modalType: detailType, resData: resData, fileList:fileList}} >\r\n        <div className=\"preferential-detail\">\r\n        <Spin spinning={isLoading}>\r\n          <div className=\"rightInfor\">\r\n            <AvatarUpload ref={uploadRef} ownerId={resData.veteransId?resData.veteransId:''} fileId={resData.veteransBaseInfo?resData.veteransBaseInfo.idPhoto:''} className=\"avatar\"/> \r\n            <SoldierModal ref={soldieRef} callback={getSoldierInfoData}/>\r\n           {(detailType==='add'|| detailType === 'edit')?<Button onClick={handleChoose}>选择已有军人</Button>:''} \r\n          </div>\r\n          <div className=\"leftInfor\">\r\n            <Tabs defaultActiveKey='0' activeKey={index} type=\"card\" onTabClick={onTabClick}>\r\n              <TabPane tab='基本信息' key={0}>\r\n                {renderBaseInfo(preType as string)}\r\n              </TabPane>\r\n              {\r\n                hasTypeInfo() ? <TabPane tab='类别信息' key={1} forceRender={true}>\r\n                <TypeInfor ref={formRef2} />\r\n              </TabPane> :''\r\n              }{\r\n                !isMartyr() ? <>\r\n                <TabPane tab='开户银行信息' key={2} forceRender={true}>\r\n                  <Lifenfor ref={formRef3} />\r\n                </TabPane>\r\n                <TabPane tab='医疗养老' key={3} forceRender={true}>\r\n                  <MedicalInfor ref={formRef4} />\r\n                </TabPane>\r\n                <TabPane tab='户口簿退伍等档案' key={4} forceRender={true}>\r\n                  <FilesInfor ref={formRef5} />\r\n                </TabPane>\r\n                <TabPane tab='其它信息' key={5} forceRender={true}>\r\n                  <OtherInfor ref={formRef6} />\r\n                </TabPane>\r\n                </> : ''\r\n              }\r\n            </Tabs>\r\n            {detailType!=='detail'?\r\n              <div className=\"form-footer center\">\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={()=>handleSubmit('0')}>\r\n                    保存\r\n                  </Button>\r\n                  <Button type=\"primary\" onClick={()=>handleSubmit('1')}>\r\n                    提交\r\n                  </Button>\r\n                  <Button onClick={handleClose}>\r\n                    关闭\r\n                  </Button>\r\n                </Space>\r\n              </div>:''\r\n            }\r\n        </div>\r\n        </Spin>\r\n      </div>\r\n    </Context.Provider>\r\n  )\r\n})\r\n\r\nexport default DetailPage","export { default as BasicTable } from './BasicTable'\r\nexport * from './tableColumn.d'","import { request } from '@/utils/api.request'\r\n\r\n/***==============优抚信息================= */\r\n\r\n// 删除优抚信息\r\nexport const deletePreferential = (id:string) => request.get('/veteransPreferential/deletePreferential', {id})\r\n\r\n// 批量删除优抚信息\r\nexport const deletePreferentialList = (ids:string) => request.get('/veteransPreferential/deletePreferentialList', {ids})\r\n\r\n// 根据优抚id查询优抚信息\r\nexport const getPreferential = (id:string) => request.get('/veteransPreferential/getPreferential', {id})\r\n\r\n/* 查询优抚信息列表\r\n{\r\n  \"current\": 1,\r\n  \"name\": \"\",\r\n  \"organizationId\": \"\",\r\n  \"sex\": \"string\",\r\n  \"size\": 5,\r\n  \"state\": \"\",\r\n  \"type\": \"sc\"\r\n}\r\n*/\r\nexport const getPreferentialPage = (data:any) => request.post('/veteransPreferential/getPreferentialPage', data)\r\n\r\n/* 新增/修改优抚信息\r\n{\r\n    \"abilityLive\": \"string\",\r\n    \"applyType\": \"string\",\r\n    \"belongPeriod\": \"string\",\r\n    \"conscriptsConvertDate\": \"string\",\r\n    \"conscriptsEndDate\": \"2020-12-25T09:50:38.421Z\",\r\n    \"conscriptsStartDate\": \"2020-12-25T09:50:38.421Z\",\r\n    \"disabilityBelong\": \"string\",\r\n    \"disabilityLevel\": \"string\",\r\n    \"disabilityNature\": \"string\",\r\n    \"employmentSituation\": \"string\",\r\n    \"fiveGuarantees\": \"string\",\r\n    \"identificationBasis\": \"string\",\r\n    \"ionelyOldPeople\": \"string\",\r\n    \"joinArmyDate\": \"2020-12-25T09:50:38.421Z\",\r\n    \"joinParty\": \"2020-12-25T09:50:38.421Z\",\r\n    \"laborCapacity\": \"string\",\r\n    \"medicalInsurance\": \"string\",\r\n    \"mentalDisease\": \"string\",\r\n    \"militaryCode\": \"string\",\r\n    \"otherPreferentialIdentity\": \"string\",\r\n    \"otherSafeguards\": \"string\",\r\n    \"outArmyDate\": \"2020-12-25T09:50:38.421Z\",\r\n    \"pensionSecurityType\": \"string\",\r\n    \"preferentialId\": \"string\",\r\n    \"preferentialTreatmentType\": \"string\",\r\n    \"remarks\": \"string\",\r\n    \"retireIdNumber\": \"string\",\r\n    \"state\": \"string\",\r\n    \"subsistenceAllowances\": \"string\",\r\n    \"type\": \"string\",\r\n    \"version\": 0,\r\n    \"veteransBankInfo\": {\r\n      \"bankAccount\": \"string\",\r\n      \"bankAccountNo\": \"string\",\r\n      \"bankAddress\": \"string\",\r\n      \"bankName\": \"string\",\r\n      \"id\": \"string\",\r\n      \"preferentialId\": \"string\",\r\n      \"remarks\": \"string\"\r\n    },\r\n    \"veteransBaseInfoAddReq\": {\r\n      \"actualAddress\": \"string\",\r\n      \"birthDate\": \"2020-12-25T09:50:38.421Z\",\r\n      \"domicile\": \"string\",\r\n      \"educationDegree\": \"string\",\r\n      \"fixedTelephone\": \"string\",\r\n      \"health\": \"string\",\r\n      \"householdAddress\": \"string\",\r\n      \"householdAddressType\": \"string\",\r\n      \"householdType\": \"string\",\r\n      \"idCardNo\": \"string\",\r\n      \"idPhoto\": \"string\",\r\n      \"maritalStatus\": \"string\",\r\n      \"name\": \"string\",\r\n      \"nameUsedBefore\": \"string\",\r\n      \"nation\": \"string\",\r\n      \"organizationId\": \"string\",\r\n      \"phone\": \"string\",\r\n      \"politicalIdentity\": \"string\",\r\n      \"remarks\": \"string\",\r\n      \"sex\": \"string\",\r\n      \"signingIssuingOrganization\": \"string\",\r\n      \"termValidityEnd\": \"2020-12-25T09:50:38.421Z\",\r\n      \"termValidityStart\": \"2020-12-25T09:50:38.421Z\",\r\n      \"version\": 0,\r\n      \"veteransId\": \"string\",\r\n      \"wechatQq\": \"string\",\r\n      \"whetherHk\": \"string\"\r\n    },\r\n    \"veteransFamilyInfo\": {\r\n      \"agedSize\": 0,\r\n      \"familySize\": 0,\r\n      \"id\": \"string\",\r\n      \"preferentialId\": \"string\",\r\n      \"remarks\": \"string\",\r\n      \"underAgeSize\": 0\r\n    },\r\n    \"veteransHouseInfo\": {\r\n      \"houseArea\": 0,\r\n      \"houseStatus\": \"string\",\r\n      \"houseType\": \"string\",\r\n      \"id\": \"string\",\r\n      \"preferentialId\": \"string\",\r\n      \"remarks\": \"string\",\r\n      \"roomsNumber\": 0\r\n    },\r\n    \"veteransId\": \"string\",\r\n    \"veteransMartyrFamily\": {\r\n      \"familyId\": \"string\",\r\n      \"holderName\": \"string\",\r\n      \"martyrCertificateNo\": \"string\",\r\n      \"martyrName\": \"string\",\r\n      \"preferentialId\": \"string\",\r\n      \"relation\": \"string\",\r\n      \"remarks\": \"string\",\r\n      \"sacrificeDate\": \"2020-12-25T09:50:38.421Z\"\r\n    },\r\n    \"veteransTypeInfo\": {\r\n      \"applyType\": \"string\",\r\n      \"disabilityPeriod\": \"string\",\r\n      \"disabilitySituation\": \"string\",\r\n      \"id\": \"string\",\r\n      \"ionelyOldPeople\": \"string\",\r\n      \"isOrphan\": \"string\",\r\n      \"joinParty\": \"string\",\r\n      \"levelAdjustment\": \"string\",\r\n      \"nuclearRelatedSituation\": \"string\",\r\n      \"preferentialId\": \"string\",\r\n      \"remarks\": \"string\",\r\n      \"situationRemark\": \"string\"\r\n    },\r\n    \"workUnit\": \"string\"\r\n  }*/\r\nexport const savePreferential = (data:any) => request.post('/veteransPreferential/savePreferential', data)\r\n\r\n// 审批操作相关接口\r\nexport const saveAudit = (data:any) => request.post('/auditRecords/saveAudit', data)\r\n\r\n// 根据军人id查询军人信息\r\nexport const getSoldierInfo = (id:any) => request.get('/veteransBaseInfo/getPreferential', {id})\r\n\r\n// 查询军人信息列表\r\nexport const getVeteransPage = (data:any) => request.post('/veteransBaseInfo/getVeteransPage', data)\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import { isObject, isString } from './is'\nimport moment from 'moment';\n\nconst DATE_TIME_FORMAT = 'YYYY-MM-DD HH:mm:ss';\nconst DATE_FORMAT = 'YYYY-MM-DD';\n\nexport function formatToDateTime(date: moment.MomentInput = null): string {\n  return moment(date).format(DATE_TIME_FORMAT);\n}\n\nexport function formatToDate(date: moment.MomentInput = null): string {\n  return moment(date).format(DATE_FORMAT);\n}\n\nexport const formatAgo = (str: string | number) => {\n  if (!str) return '';\n  const date = new Date(Number(str));\n  const time = new Date().getTime() - date.getTime(); // 现在的时间-传入的时间 = 相差的时间（单位 = 毫秒）\n  if (time < 0) {\n    return '';\n  } else if (time / 1000 < 30) {\n    return '刚刚';\n  } else if (time / 1000 < 60) {\n    return parseInt(String(time / 1000)) + '秒前';\n  } else if (time / 60000 < 60) {\n    return parseInt(String(time / 60000)) + '分钟前';\n  } else if (time / 3600000 < 24) {\n    return parseInt(String(time / 3600000)) + '小时前';\n  } else if (time / 86400000 < 31) {\n    return parseInt(String(time / 86400000)) + '天前';\n  } else if (time / 2592000000 < 12) {\n    return parseInt(String(time / 2592000000)) + '月前';\n  } else {\n    return parseInt(String(time / 31536000000)) + '年前';\n  }\n};\n/**\n * @description: 格式化请求参数时间\n */\nexport function formatRequestDate(params: any) {\n  for (const key in params) {\n    if (params[key] && params[key]._isAMomentObject) {\n      params[key] = params[key].format(DATE_TIME_FORMAT);\n    }\n    if (isString(key)) {\n      const value = params[key];\n      if (value) {\n        try {\n          params[key] = isString(value) ? value.trim() : value;\n        } catch (error) {\n          throw new Error(error);\n        }\n      }\n    }\n    if (isObject(params[key])) {\n      formatRequestDate(params[key]);\n    }\n  }\n}\n\nexport const dateUtil = moment;\n","import { request } from '@/utils/api.request'\r\n\r\n/**-------------------------------附件相关------------------------------- */\r\n/* 文件上传 \r\nfile:file\r\nfileType: 附件类型编码，字典code\r\ncontent type:\r\n*/\r\nexport const uploadAttachFile = (data:object) => request.post('/attachFile/upload', data)\r\n\r\n// 删除附件\r\nexport const deleteAttachFile = (id:string) => request.get(`/attachFile/delete/${id}`)\r\n\r\n// 文件下载\r\nexport const getAttachFile = (id:string) => request.get(`/attachFile/get/${id}`, {}, {'Content-Type': 'application/octet-stream'}, 'arraybuffer')\r\n\r\n// 根据owner获取附件列表\r\nexport const getAttachFileByOwner = (data:object) => request.post('/attachFile/listByOwner', data)\r\n\r\n\r\n","const now = +new Date();\r\nlet index = 0;\r\n\r\nexport const getUid=()=> {\r\n  // eslint-disable-next-line no-plusplus\r\n  return `upload-${now}-${++index}`;\r\n}\r\n\r\nexport function getFileItem(file:any, fileList: any[]) {\r\n  const matchKey = file.uid !== undefined ? 'uid' : 'name';\r\n  return fileList.filter(item => item[matchKey] === file[matchKey])[0];\r\n}","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./index.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { useEffect,forwardRef, useImperativeHandle, useState} from 'react'\r\n// import { UploadProps, UploadProgressEvent, UploadRequestError, RcFile, Action } from './interface'\r\nimport {uploadAttachFile, getAttachFile, deleteAttachFile} from '@/api/file'\r\n// import RcUpload  from 'rc-upload'\r\n// import { FormInstance } from 'antd/lib/form'\r\n;import{ PlusOutlined } from '@ant-design/icons'\r\nimport { Button, Spin, message as Message, Modal } from 'antd'\r\nimport { getUid } from './utils'\r\nimport './index.scss'\r\n// import axios from 'axios'\r\n\r\nexport type UploadFileStatus = 'error' | 'success' | 'done' | 'uploading' | 'removed'\r\n\r\nexport interface UploadFile<T = any> {\r\n    uid?: string;\r\n    size?: number;\r\n    name?: string;\r\n    fileName?: string;\r\n    lastModified?: number;\r\n    lastModifiedDate?: Date;\r\n    filePath?: string;\r\n    status?:  string;\r\n    percent?: number;\r\n    fileThumPath?: string;\r\n    originFileObj?: File | Blob;\r\n    response?: T;\r\n    error?: any;\r\n    linkProps?: any;\r\n    type?: string;\r\n    xhr?: T;\r\n    preview?: string;\r\n}\r\n\r\ninterface SingleUploadProps<T = any>{\r\n    children?:any\r\n    accept?:any\r\n    multiple?:boolean\r\n    fileList?: UploadFile<T>[]\r\n    // type: string\r\n    // color?: string\r\n    // size?: number|string\r\n    // callback?:()=>void\r\n    // callback?:(val:any)=>void\r\n    ownerId?:string\r\n    // ref?:any\r\n    disable?: boolean\r\n    className?: string\r\n}\r\n\r\nfunction getBase64(img:any, callback:(val:any)=>void) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img)\r\n}\r\n\r\nconst SingleUpload= forwardRef<any, SingleUploadProps>((props, ref) => {\r\n    const {accept, multiple, fileList, ownerId, disable}:any = props\r\n    const [state, setState] = useState({\r\n        fileList: [] as any ,\r\n        loading: false,\r\n    })\r\n    const [ids, setIds] = useState([] as any)\r\n    const [imgUrl, setImgUrl] = useState(new Map() as any)\r\n\r\n    const [showImg, setShowImg] = useState({\r\n        previewVisible:false,\r\n        previewTitle:'',\r\n        previewImage: ''\r\n    })\r\n\r\n    const getImg=async(id:string)=>{\r\n        let res:any = await getAttachFile(id)\r\n        let b = new Blob([res])\r\n        let url = URL.createObjectURL(b) // 创建指向参数b的URL\r\n        setImgUrl(imgUrl.set(id, url))\r\n        return url\r\n    }\r\n\r\n    const getAsyncData = (fileList:any) => {\r\n        // console.log('fileList', fileList)\r\n        fileList &&  fileList.forEach(async(item:any)=>{\r\n            // await getImg(item.id)\r\n            item['imageUrl'] = await getImg(item.id)\r\n            item['fileType'] = 'ddddd'\r\n        })\r\n        setTimeout(()=>{\r\n            setState({\r\n                fileList: fileList && [...fileList],\r\n                loading: false\r\n            })\r\n        }, 500)\r\n      }\r\n\r\n    useEffect(()=>{\r\n        getAsyncData(fileList)\r\n    }, [fileList])\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { files }:any = e.target\r\n        if(files.length !==0){\r\n            const nextFileList = state.fileList\r\n            files[0]['uid'] = getUid()\r\n            files[0]['status'] = 'uploading'\r\n            \r\n            // 生成base64缩略图\r\n            getBase64(files[0], imageUrl => {\r\n                const fileIndex = nextFileList.findIndex((uid:string) => uid === files[0].uid)\r\n                if (fileIndex === -1) {\r\n                    nextFileList.push({ uid:files[0].uid, imageUrl, id:'', fileName: files[0].name, status: 'uploading'});\r\n                }\r\n                setState({\r\n                    fileList: [...nextFileList],\r\n                    loading: true\r\n                })\r\n                // 提交\r\n                const formData = new FormData() // FormData 对象\r\n                formData.append('file', files[0]) // 文件对象\r\n                formData.append('fileType', '') // 附件类型编码，字典code\r\n                formData.append('ownerId', ownerId) // 文件对象\r\n                uploadAttachFile(formData).then((val)=>{\r\n                    const {code, result}:any = val\r\n                    if(code===200){\r\n                        const targetItem = nextFileList.filter((item:any) => item['uid'] === files[0].uid)[0]\r\n                        targetItem['id'] = result.id\r\n                        targetItem['status'] = 'done'\r\n                        // setTimeout(()=>{\r\n                            setState({  \r\n                                fileList: [...nextFileList],\r\n                                loading: false\r\n                            })\r\n                            setIds(\r\n                                [...ids, result.id] \r\n                            )\r\n                            // callback&&callback([...ids, result.id] )\r\n                        // }, 200)\r\n                    }else{\r\n                        const targetItem = nextFileList.filter((item:any) => item['fileName'] === result.fileName)[0]\r\n                        targetItem['id'] = result.id\r\n                        targetItem['status'] = 'error'\r\n                        setState({\r\n                            fileList: [...state.fileList],\r\n                            loading: false\r\n                        })\r\n                    }\r\n                })\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleDownload=(item:any)=>{\r\n        const {id, fileName } = item\r\n        // console.log('id1', id)\r\n        getAttachFile(id)\r\n        //  axios.get(`http://192.168.7.221:8080/attachFile/get/${id}`, {\r\n        // // axios.get(`http://localhost:3001/attachFile/get/2db5e4a034311ea772efd6f7db4b28ae`, {\r\n        //     headers: {\r\n        //       'Content-Type': 'application/octet-stream',\r\n        //       'token':'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmdhbml6YXRpb25JZCI6IjAwMSIsInJvbGVJZCI6IjEsMiIsInVzZXJOYW1lIjoiYWRtaW4iLCJleHAiOjE2MDk3OTcyNjAsInVzZXJJZCI6IjEiLCJhY2NvdW50IjoiYWRtaW4ifQ.vdEJKDqwRB1xOoypxbK8GOelu-M8R_6oqkCeUGqttpw'\r\n        //     },\r\n        //     responseType: 'arraybuffer',})\r\n        .then((res:any) => {\r\n            var b = new Blob([res])\r\n            var url = URL.createObjectURL(b) // 创建指向参数b的URL\r\n            var link = document.createElement('a')\r\n            // 设置导出的文件名\r\n            link.download = fileName\r\n            link.href = url\r\n            // 点击获取文件\r\n            link.click();\r\n        })\r\n    }\r\n\r\n    const handleDelete=(id:any)=>{\r\n        console.log('id2', id)\r\n        setState({  \r\n            fileList: [...state.fileList],\r\n            loading: false\r\n        })\r\n        deleteAttachFile(id).then(res=>{\r\n            const {code, message}:any = res\r\n            if(code === 200){\r\n                var idIndex = state.fileList.findIndex((item:any, index:number) => {\r\n                    return item.id === id\r\n                })\r\n                const arrs= state.fileList\r\n                arrs.splice(idIndex, 1)\r\n                setState({\r\n                    fileList: arrs,\r\n                    loading: false\r\n                })\r\n\r\n                var i = ids.findIndex((item:any, index:number) => {\r\n                    return item === id\r\n                })\r\n                const nIds = ids\r\n                nIds.splice(i, 1)\r\n                setIds(\r\n                    [...nIds] \r\n                )\r\n                // callback&&callback([...nIds])\r\n                Message.success(message)\r\n            }else{\r\n                Message.error(message)\r\n            }\r\n        })\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        getfileIds: () => {\r\n            let arr:string[] = []\r\n           state.fileList.map((item:any)=>(\r\n                arr.push(item.id)\r\n            ))\r\n           return arr\r\n        },\r\n        setfileList:(fileList:any[])=> getAsyncData(fileList)\r\n    }))\r\n\r\n    const onCancel=()=>{\r\n        setShowImg({\r\n            previewVisible: false,\r\n            previewTitle:'',\r\n            previewImage: ''\r\n        })\r\n    }\r\n\r\n    const onPreview=(imgUrl:string)=>{\r\n        setShowImg({\r\n            previewVisible: true,\r\n            previewTitle:'',\r\n            previewImage: imgUrl\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"upload-list\" ref={ref}>\r\n          {\r\n            state.fileList && state.fileList.length>0 && state.fileList.map((item:any,index:number)=>\r\n                  <div key={index} className=\"upload-list-item\">\r\n                      <Spin tip=\"Loading...\" spinning={item.status === 'uploading'}>\r\n                        <div className=\"upload-list-item-info\" onClick={()=> onPreview(item.imageUrl)}>\r\n                            <img src={item.imageUrl} alt=\"avatar\" style={{ width: '100%' }} />\r\n                            \r\n                        </div>\r\n                        {!disable? <div className=\"upload-list-item-actions\">\r\n                            <Button type=\"link\" size=\"small\" onClick={()=>handleDownload(item)}>下载</Button>\r\n                            <Button type=\"link\" size=\"small\" onClick={()=>handleDelete(item.id)}>删除</Button>\r\n                        </div>:''}\r\n                      </Spin>\r\n                  </div>\r\n              )\r\n          }\r\n          {\r\n            (!state.loading && !disable)?  <div className=\"upload-list-item-info upload-select\">\r\n              <span tabIndex={0} className=\"upload\" role=\"button\">\r\n                  {/* <input type=\"file\" ref={ref} onChange={onChange} className=\"upload-input\"   accept={accept} multiple={multiple}\r\n                  style={{display: \"none\"}}\r\n                   onClick={e => e.stopPropagation()}/> */}\r\n                   <input type=\"file\" onChange={onChange} multiple={multiple} accept={accept}></input>\r\n                  <div>\r\n                      <PlusOutlined />\r\n                      <div style={{marginTop: '8px'}}>上传</div>\r\n                  </div>\r\n              </span>\r\n          </div> :''\r\n          }\r\n        </div>\r\n\r\n        <Modal\r\n          visible={showImg.previewVisible}\r\n          title={showImg.previewTitle}\r\n          footer={null}\r\n          onCancel={onCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={showImg.previewImage} />\r\n        </Modal>\r\n        </>\r\n    )\r\n})\r\n\r\nSingleUpload.defaultProps = {\r\n    multiple: false,\r\n    disable: false\r\n}\r\n\r\nexport default SingleUpload\r\n","import React, { useEffect, forwardRef, useImperativeHandle, useState} from 'react'\r\n// import { UploadProps, UploadProgressEvent, UploadRequestError, RcFile, Action } from './interface'\r\nimport {uploadAttachFile, getAttachFile} from '@/api/file'\r\nimport classNames from 'classnames'\r\n// import RcUpload  from 'rc-upload'\r\n// import { FormInstance } from 'antd/lib/form'\r\n;import{ PlusOutlined } from '@ant-design/icons'\r\nimport { Spin } from 'antd'\r\n// import { getUid, getFileItem } from './utils'\r\nimport './index.scss'\r\n// import axios from 'axios'\r\n\r\nexport type UploadFileStatus = 'error' | 'success' | 'done' | 'uploading' | 'removed'\r\n\r\nexport interface UploadFile<T = any> {\r\n    uid?: string;\r\n    size?: number;\r\n    name?: string;\r\n    fileName?: string;\r\n    lastModified?: number;\r\n    lastModifiedDate?: Date;\r\n    filePath?: string;\r\n    status?:  string;\r\n    percent?: number;\r\n    fileThumPath?: string;\r\n    originFileObj?: File | Blob;\r\n    response?: T;\r\n    error?: any;\r\n    linkProps?: any;\r\n    type?: string;\r\n    xhr?: T;\r\n    preview?: string;\r\n}\r\n\r\ninterface SingleUploadProps<T = any>{\r\n    children?:any\r\n    accept?:any\r\n    multiple?:boolean\r\n    fileId?: string\r\n    // type: string\r\n    // color?: string\r\n    // size?: number|string\r\n    // callback?:()=>void\r\n    // callback?:(val:any)=>void\r\n    ownerId?:string\r\n    // ref?:any\r\n    disable?: boolean\r\n    className?: string\r\n}\r\n\r\n\r\nfunction getBase64(img:any, callback:(val:any)=>void) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img)\r\n}\r\n\r\nconst SingleUpload= forwardRef<any, SingleUploadProps>((props, ref) => {\r\n    const {accept, multiple, fileId, ownerId, className}:any = props\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [nextFileList, setNextFileList] = useState([] as any[])\r\n    const [state, setState] = useState({\r\n        imageUrl:'', \r\n        id:'', \r\n        fileName: '', \r\n        status: 'done'\r\n    })\r\n    const [imgUrl, setImgUrl] = useState(new Map() as any)\r\n\r\n    const getImg=async(id:string)=>{\r\n        let res:any = await getAttachFile(id)\r\n        let b = new Blob([res])\r\n        let url = URL.createObjectURL(b) // 创建指向参数b的URL\r\n        setImgUrl(imgUrl.set(id, url))\r\n        return url\r\n    }\r\n\r\n    const getAsyncData = async(id:string) => {\r\n        console.log('getAsyncDatassss', fileId)\r\n        let imageUrl = await getImg(id)\r\n        setState({\r\n            imageUrl, \r\n            id, \r\n            fileName: '', \r\n            status: 'done'\r\n        })\r\n      }\r\n\r\n    useEffect(()=>{\r\n        console.log('fileId', fileId)\r\n        getAsyncData(fileId)\r\n    }, [fileId])\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { files }:any = e.target\r\n        if(files.length !==0){\r\n            // setState({  \r\n            //     imageUrl:'', \r\n            //     id:'', \r\n            //     fileName: files[0].name, \r\n            //     status: 'uploading'\r\n            // })\r\n            // 生成base64缩略图\r\n            getBase64(files[0], imageUrl => {\r\n                nextFileList.push({ imageUrl, id:'', fileName: files[0].name, status: 'uploading'});\r\n                setState({\r\n                    imageUrl, \r\n                    id:'', \r\n                    fileName: files[0].name, \r\n                    status: 'uploading'\r\n                })\r\n                // 提交\r\n                const formData = new FormData() // FormData 对象\r\n                formData.append('file', files[0]) // 文件对象\r\n                formData.append('fileType', '') // 附件类型编码，字典code\r\n                formData.append('ownerId', ownerId) // 文件对象\r\n                uploadAttachFile(formData).then((val)=>{\r\n                    const {code, result}:any = val\r\n                    if(code===200){\r\n                            setState({  \r\n                                imageUrl, \r\n                                id: result.id, \r\n                                fileName: files[0].name, \r\n                                status: 'done'\r\n                            })\r\n                    }else{\r\n                        setState({  \r\n                            imageUrl, \r\n                            id: result.id, \r\n                            fileName: files[0].name, \r\n                            status: 'error'\r\n                        })\r\n                    }\r\n                })\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        getfileIds: () => {\r\n           console.log('arr', state.id)\r\n           return state.id\r\n        },\r\n        setfileList:(fileId:string)=> getAsyncData(fileId)\r\n    }))\r\n\r\n    const classes = classNames('upload-list avatar-upload', className)\r\n\r\n    const uploadClasses = classNames('upload-list-item-info upload-select', {\r\n        'avatar-upload-select': state.imageUrl\r\n    })\r\n    \r\n\r\n    return (\r\n        <>\r\n        <div className={classes} ref={ref}>\r\n          {\r\n            state.imageUrl && \r\n                <div className=\"upload-list-item\">\r\n                    <Spin tip=\"Loading...\" spinning={state.status === 'uploading'}>\r\n                    <div className=\"upload-list-item-info\" >\r\n                        <img src={state.imageUrl} alt=\"avatar\" style={{ width: '100%' }} />\r\n                    </div>\r\n                    </Spin>\r\n                </div>\r\n           \r\n          }\r\n          {\r\n            <div className={uploadClasses} >\r\n              <span tabIndex={0} className=\"upload\" role=\"button\">\r\n                  {/* <input type=\"file\" ref={ref} onChange={onChange} className=\"upload-input\"   accept={accept} multiple={multiple}\r\n                  style={{display: \"none\"}}\r\n                   onClick={e => e.stopPropagation()}/> */}\r\n                   <input type=\"file\" onChange={onChange} multiple={multiple} accept={accept}></input>\r\n                  <div>\r\n                      <PlusOutlined />\r\n                      <div style={{marginTop: '8px'}}>上传证件照</div>\r\n                  </div>\r\n              </span>\r\n          </div>\r\n          }\r\n        </div>\r\n\r\n        </>\r\n    )\r\n})\r\n\r\nSingleUpload.defaultProps = {\r\n    multiple: false,\r\n    disable: false\r\n}\r\n\r\nexport default SingleUpload\r\n","export { default as SingleUpload } from './SingleUpload'\r\nexport { default as AvatarUpload } from './AvatarUpload'\r\n\r\n\r\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".singleUpload {\\n  width: 128px;\\n  height: 128px;\\n  margin-right: 8px;\\n  margin-bottom: 8px;\\n  text-align: center;\\n  vertical-align: top;\\n  background-color: #fafafa;\\n  border: 1px dashed #d9d9d9;\\n  border-radius: 2px;\\n  cursor: pointer;\\n  -webkit-transition: border-color .3s;\\n  transition: border-color .3s; }\\n\\n.upload-select {\\n  width: 104px;\\n  height: 104px;\\n  margin-right: 8px;\\n  margin-bottom: 8px;\\n  text-align: center;\\n  vertical-align: top;\\n  background-color: #fafafa;\\n  border: 1px dashed #d9d9d9;\\n  border-radius: 2px;\\n  -webkit-transition: border-color .3s;\\n  transition: border-color .3s;\\n  cursor: pointer; }\\n\\n.upload-list {\\n  -webkit-box-sizing: border-box;\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n  color: rgba(0, 0, 0, 0.85);\\n  font-size: 14px;\\n  font-variant: tabular-nums;\\n  list-style: none;\\n  -webkit-font-feature-settings: \\\"tnum\\\";\\n  font-feature-settings: \\\"tnum\\\";\\n  line-height: 1.5715; }\\n\\n.upload-list-item {\\n  display: inline-block;\\n  width: 104px;\\n  height: 134px;\\n  margin: 0 8px 8px 0;\\n  vertical-align: top; }\\n  .upload-list-item-info {\\n    display: inline-block;\\n    width: 104px;\\n    height: 104px;\\n    overflow: hidden;\\n    border: 1px solid #c9c9c9; }\\n    .upload-list-item-info img {\\n      width: 100%;\\n      height: 100%;\\n      -o-object-fit: scale-down;\\n      object-fit: scale-down; }\\n  .upload-list-item-actions {\\n    text-align: center; }\\n\\n.upload {\\n  overflow: hidden;\\n  position: relative;\\n  outline: 0;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n  -webkit-box-pack: center;\\n  -ms-flex-pack: center;\\n  justify-content: center;\\n  height: 100%;\\n  text-align: center; }\\n  .upload input {\\n    position: absolute;\\n    top: -29px;\\n    left: -10px;\\n    width: 120%;\\n    height: 150%;\\n    overflow: hidden;\\n    cursor: pointer;\\n    opacity: 0; }\\n\\n.avatar-upload {\\n  position: relative;\\n  width: 150px;\\n  height: 200px;\\n  border-radius: 10px;\\n  overflow: hidden; }\\n  .avatar-upload .upload-list-item {\\n    width: 150px;\\n    height: 200px; }\\n  .avatar-upload .upload-list-item-info {\\n    display: inline-block;\\n    width: 150px;\\n    height: 200px;\\n    overflow: hidden;\\n    border: none;\\n    background: #e9e9e9; }\\n  .avatar-upload .avatar-upload-select {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    opacity: 0; }\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".preferential .avatar {\\n  float: right;\\n  margin-right: 40px; }\\n\\n.preferential-detail {\\n  margin: 20px; }\\n  .preferential-detail .leftInfor {\\n    width: 74%;\\n    padding: 20px;\\n    background: #fff; }\\n  .preferential-detail .rightInfor {\\n    float: right;\\n    width: 25%;\\n    height: 600px;\\n    padding: 40px 0 20px 0;\\n    background: #fff;\\n    text-align: center; }\\n    .preferential-detail .rightInfor .avatar {\\n      margin: 0 auto; }\\n    .preferential-detail .rightInfor .ant-btn {\\n      margin-top: 20px; }\\n\", \"\"]);\n\n"],"sourceRoot":""}