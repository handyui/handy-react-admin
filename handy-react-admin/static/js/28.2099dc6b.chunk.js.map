{"version":3,"sources":["pages/soldierManage/components/page/audit.tsx","pages/soldierManage/illness/audit.tsx"],"names":["EditPage","props","urlName","preType","formRef","useRef","detailRef","location","useLocation","pathname","state","useEffect","index","lastIndexOf","path","substring","refresh","current","forceUpdate","addSchema","formItem","type","label","field","value","options","placeholder","modalType","ref","className","onClick","Modal","confirm","title","icon","content","dynamicValidateForm","onOk","close","validateFields","then","values","a","resData","preferentialId","version","params","belongingId","isOk","remarks","saveAudit","code","message","Message","success","catch","err","console","log"],"mappings":"2OAsGeA,IAzFoB,SAACC,GAAU,IACnCC,EAAoBD,EAApBC,QAASC,EAAWF,EAAXE,QACVC,EAAUC,iBAAqB,MAC/BC,EAAYD,iBAAO,MACnBE,EAAeC,cACdC,EAAmBF,EAAnBE,SAAUC,EAASH,EAATG,MAEjBC,oBAAU,WACR,IAAMC,EAAQH,EAASI,YAAY,KAC7BC,EAAOL,EAASM,UAAU,EAAGH,GAChCF,GAAUA,EAAcM,SAAWF,IAAI,yBAAuBZ,EAAvB,WACvCI,EAAkBW,QAAQC,eAG5B,CAACR,IAEJ,IAAMS,EAAY,CAChBC,SAAU,CACR,CACIC,KAAM,QACNC,MAAO,2BACPC,MAAO,OACPC,MAAO,GACPC,QAAQ,CACN,CAACD,MAAM,IAAKF,MAAM,gBAClB,CAACE,MAAM,IAAKF,MAAM,wBASxB,CACID,KAAM,WACNC,MAAO,eACPC,MAAO,UACPC,MAAO,GACPvB,MAAO,CACHyB,YAAa,oEA8BzB,OACE,oCACE,kBAAC,IAAD,CAAYC,UAAU,SAASxB,QAASA,EAASyB,IAAKtB,IACtD,yBAAKuB,UAAU,sBACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQR,KAAK,UAAUS,QA7BhB,WACjBC,IAAMC,QAAQ,CACVC,MAAO,2BACPC,KAAM,GACNC,QAAS,kBAAC,IAAD,CAAYP,IAAKxB,EAASgC,oBAAqBjB,IACxDkB,KAAM,SAACC,GACHlC,EAAQa,QAASsB,iBAAiBC,KAAlC,sCAAuC,WAAMC,GAAN,6BAAAC,EAAA,8DACIpC,EAAkBW,QAAQ0B,QAA5DC,EAD8B,EAC9BA,eAAgBvB,EADc,EACdA,KAAMwB,EADQ,EACRA,QACvBC,EAAS,CACbC,YAAaH,EACbI,KAAMP,EAAOO,KACbC,QAASR,EAAOQ,QAChB5B,OACAwB,WAPmC,SASHK,YAAUJ,GATP,gBAS9BK,EAT8B,EAS9BA,KAAMC,EATwB,EASxBA,QACD,MAATD,IACDE,IAAQC,QAAR,UAAmBF,GAAU,IAAI,kBAAId,MACpChC,EAAkBW,QAAQqB,SAZQ,yCAAvC,uDAcGiB,MAAM,SAACC,GAAD,OAAaC,QAAQC,IAAIF,UAShC,gBAGA,kBAAC,IAAD,CAAQ1B,QAAS,WACZxB,EAAkBW,QAAQqB,UAD/B,qB,kCC3FhB,qCASetC,UANK,SAACC,GACjB,OACE,kBAAC,IAAD,CAAaC,QAAQ,UAAUC,QAAQ","file":"static/js/28.2099dc6b.chunk.js","sourcesContent":["import React, { FC, useRef, useEffect} from 'react'\r\nimport {  Modal, Button, message as Message, Space } from 'antd'\r\nimport DetailPage from '../allDetail'\r\nimport { SchemaForm } from '@/components/form'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport {saveAudit} from '@/api/preferential'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\ninterface editPageProps{\r\n  urlName?:string\r\n  preType?:string\r\n}\r\n\r\nconst EditPage:FC<editPageProps> = (props) =>{\r\n    const {urlName, preType} = props\r\n    const formRef = useRef<FormInstance>(null)\r\n    const detailRef = useRef(null)\r\n    const location:any = useLocation()\r\n    const {pathname, state} = location\r\n    \r\n    useEffect(()=>{\r\n      const index = pathname.lastIndexOf(\"/\")\r\n      const path = pathname.substring(0, index)\r\n      if(state && (state as any).refresh && path === `/soldierManage/${urlName}/audit`){\r\n        (detailRef as any).current.forceUpdate()\r\n      }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [state])\r\n\r\n    const addSchema = {\r\n      formItem: [\r\n        {\r\n            type: \"radio\",\r\n            label: \"是否通过\",\r\n            field: \"isOk\",\r\n            value: '',\r\n            options:[\r\n              {value:'1', label:'通过'},\r\n              {value:'0', label:'不通过'}\r\n            ],\r\n            // rules: [\r\n            //     {\r\n            //         required: true,\r\n            //         message: \"性别不能为空\"\r\n            //     }\r\n            // ]\r\n        },\r\n        {\r\n            type: \"textarea\",\r\n            label: \"备注\",\r\n            field: \"remarks\",\r\n            value: '',\r\n            props: {\r\n                placeholder: \"请输入通过/不通过原因\"\r\n            },\r\n        },\r\n      ]\r\n    }\r\n\r\n    const handleAudit =()=>{\r\n      Modal.confirm({\r\n          title: '审核优抚',\r\n          icon: '',\r\n          content: <SchemaForm ref={formRef} dynamicValidateForm={addSchema} />,\r\n          onOk: (close) => { \r\n              formRef.current!.validateFields().then(async(values:any)=>{\r\n                const {preferentialId, type, version} = (detailRef as any).current.resData\r\n                const params = {\r\n                  belongingId: preferentialId,\r\n                  isOk: values.isOk,\r\n                  remarks: values.remarks,\r\n                  type,\r\n                  version\r\n                }\r\n                const {code, message}:any = await saveAudit(params)\r\n                if(code === 200){\r\n                  Message.success(`${message}`,1.5,()=>close());\r\n                  (detailRef as any).current.close()\r\n                }\r\n              }).catch((err:any) => console.log(err))\r\n          }\r\n      })\r\n  }\r\n    return (\r\n      <>\r\n        <DetailPage modalType='detail' preType={preType} ref={detailRef}/>\r\n        <div className=\"form-footer center\">\r\n              <Space>\r\n                <Button type=\"primary\" onClick={handleAudit}>\r\n                  审核\r\n                </Button>\r\n                <Button onClick={()=>{\r\n                    (detailRef as any).current.close()\r\n                }}>\r\n                  关闭\r\n                </Button>\r\n              </Space>\r\n            </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default EditPage","import React, { FC } from 'react'\r\nimport DetailPage from '../components/page/audit'\r\n\r\nconst EditPage:FC = (props) =>{\r\n    return (\r\n      <DetailPage  urlName='illness' preType='300027004' />\r\n  )\r\n}\r\n\r\nexport default EditPage"],"sourceRoot":""}