{"version":3,"sources":["components/table/BasicTable.tsx","components/table/index.ts","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/FolderOpenOutlined.js","../node_modules/@ant-design/icons/es/icons/FolderOpenOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/FolderOutlined.js","../node_modules/@ant-design/icons/es/icons/FolderOutlined.js","../node_modules/antd/es/tree/utils/dictUtil.js","../node_modules/antd/es/tree/DirectoryTree.js","../node_modules/antd/es/tree/utils/dropIndicator.js","../node_modules/antd/es/tree/Tree.js","../node_modules/antd/es/tree/index.js","pages/system/role/access-tree.tsx","pages/system/role/index.tsx"],"names":["BasicTable","forwardRef","props","ref","columns","rowKey","rowSelection","queryParams","pageOption","searchParam","getListFunc","type","onExpand","callback","useState","data","setData","loading","setLoading","flag","find","item","dataIndex","key","actions","_isCancelled","React","useRef","refreshTableData","param","params","current","size","pageSize","then","result","code","records","total","forEach","finally","actionEvent","record","func","useEffect","useImperativeHandle","refreshTable","val","column","arr","push","filter","length","title","render","text","map","action","index","onConfirm","onClick","genColumn","dataSource","pagination","onChange","page","pageSizeOptions","showSizeChanger","defaultProps","AntdIcon","Object","assign","icon","displayName","Record","traverseNodesKey","treeData","dataNode","children","calcRangeKeys","_ref","expandedKeys","startKey","endKey","keys","None","End","matchKey","Start","indexOf","convertDirectoryKeysToNodes","restKeys","nodes","node","splice","__rest","s","e","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","propertyIsEnumerable","getIcon","isLeaf","expanded","FileOutlined","_a","defaultExpandAll","defaultExpandParent","defaultExpandedKeys","lastSelectedKey","cachedSelectedKeys","treeRef","_React$useState","selectedKeys","defaultSelectedKeys","_React$useState2","setSelectedKeys","_React$useState3","keyEntities","getInitExpandedKeys","_React$useState4","setExpandedKeys","onDebounceExpand","event","shiftKey","metaKey","ctrlKey","onNodeExpand","leading","_React$useContext","getPrefixCls","direction","customizePrefixCls","prefixCls","className","otherProps","connectClassName","concat","blockNode","onSelect","newSelectedKeys","multiple","nativeEvent","_node$key","newEvent","selected","ctrlPick","shiftPick","selectedNodes","Array","from","Set","expandAction","onDoubleClick","info","ForwardDirectoryTree","showIcon","offset","dropIndicatorRender","_style","dropPosition","dropLevelOffset","indent","_props$direction","startPosition","endPosition","style","top","bottom","createElement","Tree","_classNames","virtual","showLine","_switcherIcon","switcherIcon","checkable","selectable","newProps","Boolean","itemHeight","nodeProps","TreeNode","DirectoryTree","motion","motionAppear","AccessTree","fields","isLoading","setIsLoading","setTreeData","setDefaultSelectedKeys","checkedKeys","setCheckedKeys","list2tree","items","parent","parentId","menuId","getTreeData","a","getMenulist","getData","roleId","getRoleAccess","console","log","spinning","autoExpandParent","onCheck","RolePage","selectedRowKeys","setSelectedRowKeys","formRef","searchFormRef","tableRef","dispatch","useDispatch","location","useLocation","pathname","state","resData","setResData","validateForm","modalType","formItem","label","field","value","placeholder","rules","required","message","handleDetail","res","Modal","content","dynamicValidateForm","onOk","close","okText","permission","effect","deleteRole","confirm","version","validateFields","values","updateRole","Message","success","error","catch","Promise","resolve","reject","menuIds","resetRoleMenu","SetUserInfor","handleClick","refresh","layout","labelCol","span","wrapperCol","grid","rowGutter","colSpan","tailLayout","showBtn","ghost","PlusOutlined","saveRole","danger","DeleteOutlined","deleteRoles","toString","getRolePage"],"mappings":"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","file":"static/js/26.e150a6bf.chunk.js","sourcesContent":["import React, { useEffect, useState, forwardRef, useImperativeHandle } from 'react'\r\nimport {TableColumn} from \"./tableColumn.d\"\r\nimport { Table, Space, Popconfirm } from 'antd'\r\n// import {debounce} from '@/utils/index'\r\n\r\ninterface Columns {\r\n    actions?: any;\r\n    [key: string]: any;\r\n}\r\n\r\n// 分页查询参数\r\ninterface PagePrams {\r\n    current?: string | number // 当前页数\r\n    size?: string | number // 每页条数\r\n    [key: string]: any\r\n}\r\n\r\nexport interface BasicTableProps {\r\n    columns?: TableColumn\r\n    rowSelection?: any\r\n    rowKey?: any\r\n    queryParams?: object\r\n    pageOption?: any\r\n    searchParam?: any\r\n    getListFunc?: (val: any) => Promise<unknown> \r\n    refreshTable?: boolean\r\n    style?: React.CSSProperties\r\n    type?: any\r\n    onExpand?:(expanded:any, record:any) => void\r\n    callback?:(val:any) => void\r\n}\r\n\r\nexport interface MenuItemProps {\r\n    index?: string;\r\n    disabled?: boolean\r\n    className?: string\r\n    style?: React.CSSProperties\r\n}\r\n\r\nconst BasicTable = forwardRef<any, BasicTableProps>((props, ref) => {\r\n    const {columns, rowKey, rowSelection, queryParams, pageOption, searchParam, getListFunc, type, onExpand, callback} = props\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    // const [pageOptions, setPageOptions] = useState(pageOption)\r\n    const flag = columns.find((item:any) => (item.dataIndex || item.key) === 'action')\r\n    const actions = flag ? flag.actions : []\r\n    const _isCancelled = React.useRef(false)\r\n    // const [searchParam, setSearchParam] = useState({}) // 存储搜索记录，销毁时清除\r\n\r\n    // 获取表格数据\r\n    const refreshTableData =  (param?:any) => {\r\n        setLoading(true)\r\n        const params =  {\r\n            current:pageOption.current, \r\n            size:pageOption.pageSize, \r\n            ...queryParams, \r\n            ...searchParam,\r\n            ...param\r\n        }\r\n        getListFunc &&  getListFunc(params).then((result:any)=>{\r\n            if(result.code === 200){\r\n                if (!_isCancelled.current) { \r\n                const {records, current, size, total} = result.result\r\n                    // setPageOptions(Object.assign(pageOption, {current, pageSize:size, total}))\r\n                    callback && callback({\r\n                        searchParam: params,\r\n                        pageOption: {current, pageSize:size, total}\r\n                    })\r\n                    // 因为没有传回children字段，要自行添加，table tree 需要children\r\n                    if(type && type ==='table-tree'){\r\n                        records.forEach((item:any) => {\r\n                            item['children'] = []\r\n                        })\r\n                    }\r\n                    setData(records)\r\n                }\r\n            }\r\n        }).finally(() => {if(!_isCancelled.current){setLoading(false)} })\r\n        \r\n    }\r\n\r\n    // 操作事件\r\n    const actionEvent = (record:any, func:any) => func({record, props}, refreshTableData)\r\n\r\n    const genColumn = (column:any)=>{\r\n        let arr=[]\r\n        arr.push(...column.filter((item:any) => {\r\n           return item.dataIndex !== 'action'\r\n        }))\r\n        if(actions.length>0){\r\n            arr.push({\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text:any, record:any) => (\r\n                    <Space size=\"middle\">\r\n                    { actions.map((action:any, index:number) => (\r\n                         [ action.type==='popconfirm'? ( \r\n                            <Popconfirm key={index} title=\"您确定要删除吗？\" onConfirm={()=>actionEvent(record, action.func)}\r\n                    ><a>删除</a></Popconfirm>):'' ,\r\n                        action.type ===  'text'? (<a key={index} onClick={()=>actionEvent(record, action.func)}>{action.text}</a>):'']\r\n                    ))}\r\n                        \r\n                {/* //     <a>编辑</a>\r\n                //     <a>关联权限</a> */}\r\n                </Space>\r\n                ),\r\n            })\r\n        }\r\n        return arr\r\n    }\r\n\r\n    useEffect(()=>{\r\n        refreshTableData()\r\n        return () => {\r\n            // setSearchParam({})\r\n            _isCancelled.current = true\r\n        }\r\n    }, [])\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        refreshTable: (val:any) => {\r\n            // setSearchParam(val)\r\n            refreshTableData(val)\r\n        }\r\n    }))\r\n\r\n    // 分页改变\r\n    const paginationChange = (page:number, pageSize:number) => {\r\n        let params = {\r\n            size:pageSize?pageSize:pageOption.pageSize,\r\n            current: page\r\n        }\r\n        // setPageOptions({current: page, size:pageSize?pageSize:pageOption.pageSize })\r\n        callback && callback({\r\n            searchParam: searchParam,\r\n            pageOption: params\r\n        })\r\n        refreshTableData(params)\r\n    }\r\n\r\n\r\n    return (\r\n        <Table rowKey={rowKey}\r\n            rowSelection={rowSelection} \r\n            columns={genColumn(columns)} \r\n            dataSource={data} \r\n            loading={loading}\r\n            pagination={{...pageOption, \r\n                onChange:paginationChange, \r\n                pageSizeOptions: ['5', '10', '20', '50'],\r\n                showSizeChanger: true,\r\n            }}\r\n            onExpand={onExpand}\r\n        >\r\n            {/* {\r\n                columns.map((item:any) => (\r\n                <Column title={item.title} dataIndex={item.dataIndex} key={item.dataIndex}></Column>   \r\n                //   {item.dataIndex!=='action'?\r\n                //     <Column title={item.title} dataIndex={item.dataIndex} key={item.dataIndex} />\r\n                //     :''}\r\n                ))\r\n            } */}\r\n            {/* <Column title=\"roleName\" dataIndex=\"roleName\" key=\"roleName\" />\r\n        \r\n                actions.map((action:any, index:number) => (\r\n                    <div key={index}>88</div>\r\n                    {action.type == 'text'? <button>dddd</button>:''}  \r\n\r\n                ))\r\n            }\r\n            \r\n        <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\r\n        \r\n            <Column\r\n                title=\"Action\"\r\n                key=\"action\"\r\n                render={(text, record) => (\r\n                    <Space size=\"middle\">\r\n                        <a>Invite {record.lastName}</a>\r\n                        <a>Delete</a>\r\n                    </Space>\r\n                )}\r\n                />  */}\r\n        </Table>\r\n    )\r\n})\r\n\r\nBasicTable.defaultProps = {\r\n    pageOption:{\r\n        current:1, pageSize:10\r\n    },\r\n    refreshTable:false\r\n}\r\n\r\nexport default BasicTable\r\n","export { default as BasicTable } from './BasicTable'\r\nexport * from './tableColumn.d'","// This icon file is generated automatically.\nvar DeleteOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\"\n      }\n    }]\n  },\n  \"name\": \"delete\",\n  \"theme\": \"outlined\"\n};\nexport default DeleteOutlined;","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return (\n    /*#__PURE__*/\n    React.createElement(AntdIcon, Object.assign({}, props, {\n      ref: ref,\n      icon: DeleteOutlinedSvg\n    }))\n  );\n};\n\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default\n/*#__PURE__*/\nReact.forwardRef(DeleteOutlined);","// This icon file is generated automatically.\nvar FolderOpenOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2a8.15 8.15 0 00-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32zM136 256h188.5l119.6 114.4H748V444H238c-13 0-24.8 7.9-29.7 20L136 643.2V256zm635.3 512H159l103.3-256h612.4L771.3 768z\"\n      }\n    }]\n  },\n  \"name\": \"folder-open\",\n  \"theme\": \"outlined\"\n};\nexport default FolderOpenOutlined;","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FolderOpenOutlinedSvg from \"@ant-design/icons-svg/es/asn/FolderOpenOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar FolderOpenOutlined = function FolderOpenOutlined(props, ref) {\n  return (\n    /*#__PURE__*/\n    React.createElement(AntdIcon, Object.assign({}, props, {\n      ref: ref,\n      icon: FolderOpenOutlinedSvg\n    }))\n  );\n};\n\nFolderOpenOutlined.displayName = 'FolderOpenOutlined';\nexport default\n/*#__PURE__*/\nReact.forwardRef(FolderOpenOutlined);","// This icon file is generated automatically.\nvar FolderOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M880 298.4H521L403.7 186.2a8.15 8.15 0 00-5.5-2.2H144c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V330.4c0-17.7-14.3-32-32-32zM840 768H184V256h188.5l119.6 114.4H840V768z\"\n      }\n    }]\n  },\n  \"name\": \"folder\",\n  \"theme\": \"outlined\"\n};\nexport default FolderOutlined;","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FolderOutlinedSvg from \"@ant-design/icons-svg/es/asn/FolderOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar FolderOutlined = function FolderOutlined(props, ref) {\n  return (\n    /*#__PURE__*/\n    React.createElement(AntdIcon, Object.assign({}, props, {\n      ref: ref,\n      icon: FolderOutlinedSvg\n    }))\n  );\n};\n\nFolderOutlined.displayName = 'FolderOutlined';\nexport default\n/*#__PURE__*/\nReact.forwardRef(FolderOutlined);","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar Record;\n\n(function (Record) {\n  Record[Record[\"None\"] = 0] = \"None\";\n  Record[Record[\"Start\"] = 1] = \"Start\";\n  Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {}));\n\nfunction traverseNodesKey(treeData, callback) {\n  function processNode(dataNode) {\n    var key = dataNode.key,\n        children = dataNode.children;\n\n    if (callback(key, dataNode) !== false) {\n      traverseNodesKey(children || [], callback);\n    }\n  }\n\n  treeData.forEach(processNode);\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\n\n\nexport function calcRangeKeys(_ref) {\n  var treeData = _ref.treeData,\n      expandedKeys = _ref.expandedKeys,\n      startKey = _ref.startKey,\n      endKey = _ref.endKey;\n  var keys = [];\n  var record = Record.None;\n\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n\n  if (!startKey || !endKey) {\n    return [];\n  }\n\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n\n  traverseNodesKey(treeData, function (key) {\n    if (record === Record.End) {\n      return false;\n    }\n\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n\n    if (expandedKeys.indexOf(key) === -1) {\n      return false;\n    }\n\n    return true;\n  });\n  return keys;\n}\nexport function convertDirectoryKeysToNodes(treeData, keys) {\n  var restKeys = _toConsumableArray(keys);\n\n  var nodes = [];\n  traverseNodesKey(treeData, function (key, node) {\n    var index = restKeys.indexOf(key);\n\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n\n    return !!restKeys.length;\n  });\n  return nodes;\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport { conductExpandParent } from \"rc-tree/es/util\";\nimport { convertDataToEntities, convertTreeToData } from \"rc-tree/es/utils/treeUtil\";\nimport FileOutlined from \"@ant-design/icons/es/icons/FileOutlined\";\nimport FolderOpenOutlined from \"@ant-design/icons/es/icons/FolderOpenOutlined\";\nimport FolderOutlined from \"@ant-design/icons/es/icons/FolderOutlined\";\nimport { ConfigContext } from '../config-provider';\nimport Tree from './Tree';\nimport { calcRangeKeys, convertDirectoryKeysToNodes } from './utils/dictUtil';\n\nfunction getIcon(props) {\n  var isLeaf = props.isLeaf,\n      expanded = props.expanded;\n\n  if (isLeaf) {\n    return (\n      /*#__PURE__*/\n      React.createElement(FileOutlined, null)\n    );\n  }\n\n  return expanded ?\n  /*#__PURE__*/\n  React.createElement(FolderOpenOutlined, null) :\n  /*#__PURE__*/\n  React.createElement(FolderOutlined, null);\n}\n\nfunction getTreeData(_ref) {\n  var treeData = _ref.treeData,\n      children = _ref.children;\n  return treeData || convertTreeToData(children);\n}\n\nvar DirectoryTree = function DirectoryTree(_a, ref) {\n  var defaultExpandAll = _a.defaultExpandAll,\n      defaultExpandParent = _a.defaultExpandParent,\n      defaultExpandedKeys = _a.defaultExpandedKeys,\n      props = __rest(_a, [\"defaultExpandAll\", \"defaultExpandParent\", \"defaultExpandedKeys\"]); // Shift click usage\n\n\n  var lastSelectedKey = React.useRef();\n  var cachedSelectedKeys = React.useRef();\n  var treeRef =\n  /*#__PURE__*/\n  React.createRef();\n  React.useImperativeHandle(ref, function () {\n    return treeRef.current;\n  });\n\n  var getInitExpandedKeys = function getInitExpandedKeys() {\n    var _convertDataToEntitie = convertDataToEntities(getTreeData(props)),\n        keyEntities = _convertDataToEntitie.keyEntities;\n\n    var initExpandedKeys; // Expanded keys\n\n    if (defaultExpandAll) {\n      initExpandedKeys = Object.keys(keyEntities);\n    } else if (defaultExpandParent) {\n      initExpandedKeys = conductExpandParent(props.expandedKeys || defaultExpandedKeys, keyEntities);\n    } else {\n      initExpandedKeys = props.expandedKeys || defaultExpandedKeys;\n    }\n\n    return initExpandedKeys;\n  };\n\n  var _React$useState = React.useState(props.selectedKeys || props.defaultSelectedKeys || []),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedKeys = _React$useState2[0],\n      setSelectedKeys = _React$useState2[1];\n\n  var _React$useState3 = React.useState(getInitExpandedKeys()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      expandedKeys = _React$useState4[0],\n      setExpandedKeys = _React$useState4[1];\n\n  React.useEffect(function () {\n    if ('selectedKeys' in props) {\n      setSelectedKeys(props.selectedKeys);\n    }\n  }, [props.selectedKeys]);\n  React.useEffect(function () {\n    if ('expandedKeys' in props) {\n      setExpandedKeys(props.expandedKeys);\n    }\n  }, [props.expandedKeys]);\n\n  var expandFolderNode = function expandFolderNode(event, node) {\n    var isLeaf = node.isLeaf;\n\n    if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n      return;\n    } // Call internal rc-tree expand function\n    // https://github.com/ant-design/ant-design/issues/12567\n\n\n    treeRef.current.onNodeExpand(event, node);\n  };\n\n  var onDebounceExpand = debounce(expandFolderNode, 200, {\n    leading: true\n  });\n\n  var onExpand = function onExpand(keys, info) {\n    if (!('expandedKeys' in props)) {\n      setExpandedKeys(keys);\n    } // Call origin function\n\n\n    if (props.onExpand) {\n      return props.onExpand(keys, info);\n    }\n\n    return undefined;\n  };\n\n  var onClick = function onClick(event, node) {\n    var expandAction = props.expandAction; // Expand the tree\n\n    if (expandAction === 'click') {\n      onDebounceExpand(event, node);\n    }\n\n    if (props.onClick) {\n      props.onClick(event, node);\n    }\n  };\n\n  var onDoubleClick = function onDoubleClick(event, node) {\n    var expandAction = props.expandAction; // Expand the tree\n\n    if (expandAction === 'doubleClick') {\n      onDebounceExpand(event, node);\n    }\n\n    if (props.onDoubleClick) {\n      props.onDoubleClick(event, node);\n    }\n  };\n\n  var onSelect = function onSelect(keys, event) {\n    var multiple = props.multiple;\n    var node = event.node,\n        nativeEvent = event.nativeEvent;\n    var _node$key = node.key,\n        key = _node$key === void 0 ? '' : _node$key;\n    var treeData = getTreeData(props); // const newState: DirectoryTreeState = {};\n    // We need wrap this event since some value is not same\n\n    var newEvent = _extends(_extends({}, event), {\n      selected: true\n    }); // Windows / Mac single pick\n\n\n    var ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;\n    var shiftPick = nativeEvent.shiftKey; // Generate new selected keys\n\n    var newSelectedKeys;\n\n    if (multiple && ctrlPick) {\n      // Control click\n      newSelectedKeys = keys;\n      lastSelectedKey.current = key;\n      cachedSelectedKeys.current = newSelectedKeys;\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    } else if (multiple && shiftPick) {\n      // Shift click\n      newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(cachedSelectedKeys.current || []), _toConsumableArray(calcRangeKeys({\n        treeData: treeData,\n        expandedKeys: expandedKeys,\n        startKey: key,\n        endKey: lastSelectedKey.current\n      })))));\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    } else {\n      // Single click\n      newSelectedKeys = [key];\n      lastSelectedKey.current = key;\n      cachedSelectedKeys.current = newSelectedKeys;\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    }\n\n    if (props.onSelect) {\n      props.onSelect(newSelectedKeys, newEvent);\n    }\n\n    if (!('selectedKeys' in props)) {\n      setSelectedKeys(newSelectedKeys);\n    }\n  };\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      otherProps = __rest(props, [\"prefixCls\", \"className\"]);\n\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n  var connectClassName = classNames(\"\".concat(prefixCls, \"-directory\"), _defineProperty({}, \"\".concat(prefixCls, \"-directory-rtl\"), direction === 'rtl'), className);\n  return (\n    /*#__PURE__*/\n    React.createElement(Tree, _extends({\n      icon: getIcon,\n      ref: treeRef,\n      blockNode: true\n    }, otherProps, {\n      prefixCls: prefixCls,\n      className: connectClassName,\n      expandedKeys: expandedKeys,\n      selectedKeys: selectedKeys,\n      onSelect: onSelect,\n      onClick: onClick,\n      onDoubleClick: onDoubleClick,\n      onExpand: onExpand\n    }))\n  );\n};\n\nvar ForwardDirectoryTree =\n/*#__PURE__*/\nReact.forwardRef(DirectoryTree);\nForwardDirectoryTree.displayName = 'DirectoryTree';\nForwardDirectoryTree.defaultProps = {\n  showIcon: true,\n  expandAction: 'click'\n};\nexport default ForwardDirectoryTree;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nexport var offset = 4;\nexport default function dropIndicatorRender(props) {\n  var _style;\n\n  var dropPosition = props.dropPosition,\n      dropLevelOffset = props.dropLevelOffset,\n      prefixCls = props.prefixCls,\n      indent = props.indent,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'ltr' : _props$direction;\n  var startPosition = direction === 'ltr' ? 'left' : 'right';\n  var endPosition = direction === 'ltr' ? 'right' : 'left';\n  var style = (_style = {}, _defineProperty(_style, startPosition, -dropLevelOffset * indent + offset), _defineProperty(_style, endPosition, 0), _style);\n\n  switch (dropPosition) {\n    case -1:\n      style.top = -3;\n      break;\n\n    case 1:\n      style.bottom = -3;\n      break;\n\n    default:\n      // dropPosition === 0\n      style.bottom = -3;\n      style[startPosition] = indent + offset;\n      break;\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      style: style,\n      className: \"\".concat(prefixCls, \"-drop-indicator\")\n    })\n  );\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport classNames from 'classnames';\nimport DirectoryTree from './DirectoryTree';\nimport { ConfigContext } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nimport renderSwitcherIcon from './utils/iconUtil';\nimport dropIndicatorRender from './utils/dropIndicator';\nvar Tree =\n/*#__PURE__*/\nReact.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction,\n      virtual = _React$useContext.virtual;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      showIcon = props.showIcon,\n      showLine = props.showLine,\n      _switcherIcon = props.switcherIcon,\n      blockNode = props.blockNode,\n      children = props.children,\n      checkable = props.checkable,\n      selectable = props.selectable;\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n\n  var newProps = _extends(_extends({}, props), {\n    showLine: Boolean(showLine),\n    dropIndicatorRender: dropIndicatorRender\n  });\n\n  return (\n    /*#__PURE__*/\n    React.createElement(RcTree, _extends({\n      itemHeight: 20,\n      ref: ref,\n      virtual: virtual\n    }, newProps, {\n      prefixCls: prefixCls,\n      className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-hide\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-block-node\"), blockNode), _defineProperty(_classNames, \"\".concat(prefixCls, \"-unselectable\"), !selectable), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className),\n      direction: direction,\n      checkable: checkable ?\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-checkbox-inner\")\n      }) : checkable,\n      selectable: selectable,\n      switcherIcon: function switcherIcon(nodeProps) {\n        return renderSwitcherIcon(prefixCls, _switcherIcon, showLine, nodeProps);\n      }\n    }), children)\n  );\n});\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n  checkable: false,\n  selectable: true,\n  showIcon: false,\n  motion: _extends(_extends({}, collapseMotion), {\n    motionAppear: false\n  }),\n  blockNode: false\n};\nexport default Tree;","import Tree from './Tree';\nexport default Tree;","import React, { useState, useEffect, forwardRef, useImperativeHandle } from 'react'\r\nimport { Tree, Spin } from 'antd'\r\nimport { getMenulist, getRoleAccess } from '@/api/system'\r\n\r\ninterface AccessTreePorps{\r\n    fields:any[]\r\n}\r\n\r\nconst AccessTree = forwardRef<any, AccessTreePorps>((props, ref) => {\r\n    const {fields} = props\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [treeData, setTreeData] = useState([])\r\n    const [defaultSelectedKeys, setDefaultSelectedKeys] = useState<string[]>([]);\r\n    const [checkedKeys, setCheckedKeys] = useState<string[]>([]);\r\n\r\n    // 列表转树\r\n    const list2tree = (items:any, parent = 0) => {\r\n    return items.filter((item:any) => item.parentId === parent).map((item:any) => ({\r\n        // ...item,\r\n        title: item.title,\r\n        key: item.menuId,\r\n        children: list2tree(items, item.menuId) \r\n    }))\r\n    }\r\n\r\n    const getTreeData = async ()=> {\r\n        setIsLoading(true)\r\n        const {result}:any = await getMenulist().finally(() => setIsLoading(false))\r\n        setTreeData(list2tree(result))\r\n    }\r\n\r\n    const getData = async ()=> {\r\n        const params = {\r\n            \"exceptMenuType\": null,\r\n            \"roleIds\": [(fields as any).roleId]\r\n        }\r\n        // 获取角色列表\r\n        const {result}:any = await getRoleAccess(params)\r\n        setCheckedKeys(result.map((item:any)=> item.menuId))\r\n        // 设置默认选中时，过滤掉parentId为一级的\r\n        setDefaultSelectedKeys(result.filter((item:any) =>item.parentId !==0).map((item:any)=> item.menuId))\r\n    }\r\n\r\n    useEffect(()=> {\r\n        getTreeData()\r\n        getData()\r\n        // setCheckedKeys(fields)\r\n        // console.log('fields', fields)\r\n        // callback(checkedKeys)\r\n        \r\n    },[])\r\n\r\n    const onCheck = (checkedKeys:any) => {\r\n        console.log('checkedKeys222===>', checkedKeys)\r\n      setCheckedKeys(checkedKeys)\r\n    //   callback(checkedKeys)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        checkedKeys: () => {\r\n            // treeRef.current.focus()\r\n            console.log('checkedKeys333', checkedKeys)\r\n            return checkedKeys\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <Spin spinning={isLoading}>\r\n            <Tree\r\n                ref={ref}\r\n                checkable\r\n                // onExpand={onExpand}\r\n                // expandedKeys={expandedKeys}\r\n                defaultSelectedKeys={defaultSelectedKeys}\r\n                autoExpandParent={true}\r\n                onCheck={onCheck}\r\n                checkedKeys={checkedKeys}\r\n                // onSelect={onSelect}\r\n                // selectedKeys={selectedKeys}\r\n                treeData={treeData}\r\n            />\r\n        </Spin>\r\n    )\r\n})\r\n\r\nexport default AccessTree","\r\nimport React, { FC, useState, useRef, useEffect} from 'react'\r\nimport {BasicTable} from '@/components/table'\r\nimport {deleteRoles, getRolePage, deleteRole, saveRole, updateRole, resetRoleMenu} from '@/api/system'\r\nimport { Modal, message as Message, Button } from 'antd'\r\nimport { PlusOutlined, DeleteOutlined} from '@ant-design/icons'\r\nimport { SchemaForm } from '@/components/form'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport AccessTree from './access-tree'\r\nimport { CustSchemaForm } from '@/components/form'\r\nimport { useDispatch } from 'react-redux'\r\nimport { SetUserInfor } from '@/store/actions'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst RolePage: FC = () => {\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n    const formRef = useRef<FormInstance>(null)\r\n    const searchFormRef = useRef<FormInstance>(null)\r\n    const tableRef = useRef(null)\r\n    const dispatch = useDispatch()\r\n    const location = useLocation()\r\n    const {pathname, state} = location\r\n    const [resData, setResData] = useState({\r\n        pageOption: {},\r\n        searchParam: {}\r\n    })\r\n\r\n    const searchSchema = {\r\n        layout : {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 18 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 5\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"input\",\r\n                label: \"角色名\",\r\n                field: \"roleName\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入角色名\"\r\n                },\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"角色编码\",\r\n                field: \"roleCode\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入角色编码\"\r\n                },\r\n                tailLayout:{\r\n                    labelCol: { span: 8 },\r\n                    wrapperCol: { span: 16 },\r\n                }, \r\n            }\r\n        ]\r\n    }\r\n\r\n\r\n    const validateForm=(modalType:string)=>{\r\n    // const addSchema = {\r\n        return {\r\n            formItem: [\r\n                {\r\n                    type: \"input\",\r\n                    label: \"角色名称\",\r\n                    field: \"roleName\",\r\n                    value: \"6666\",\r\n                    props: {\r\n                        placeholder: \"请输入角色名称\"\r\n                    },\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: \"角色名称不能为空\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    type: \"input\",\r\n                    label: \"角色编码\",\r\n                    field: \"roleCode\",\r\n                    value: \"\",\r\n                    props: {\r\n                        placeholder: \"角色编码\"\r\n                    },\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: \"角色编码不能为空\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    type: \"input-number\",\r\n                    label: \"排序\",\r\n                    field: \"sort\",\r\n                    value: \"\",\r\n                    props: {\r\n                        placeholder: \"0\",\r\n                        // defaultValue: \"0\"\r\n                        // min:\"0\",\r\n                        // max:\"10\"\r\n                    },\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: \"角色排序不能为空\"\r\n                        }\r\n                    ]\r\n                },\r\n            ],\r\n            modalType\r\n        }\r\n    }\r\n    // const [validateForm, setValidateForm] = useState(addSchema)\r\n    const treeRef = useRef(null)\r\n\r\n    const handleDetail=(res?:any)=>{\r\n        Modal.info({\r\n            title: '',\r\n            icon: '',\r\n            content: <SchemaForm ref={formRef} fields={res} dynamicValidateForm={validateForm('detail')} />,\r\n            onOk: (close) => {\r\n                close()\r\n            },\r\n            okText:\"关闭\"\r\n        })\r\n    }\r\n\r\n    const columns=[ \r\n            {\r\n                title: '角色名',\r\n                dataIndex: 'roleName',\r\n                key: 'roleName',\r\n                render: (text:any, ...[record, index]:any) => {\r\n                    return  <a type=\"text\" onClick={()=>handleDetail(record)}>\r\n                    {text}\r\n                  </a>\r\n                }\r\n            },\r\n            {\r\n                title: '角色编码',\r\n                dataIndex: 'roleCode',\r\n                key: 'roleCode',\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'createTime',\r\n                key: 'createTime',\r\n            },\r\n            // {\r\n            //     title: '创建者',\r\n            //     dataIndex: 'createUser',\r\n            //     key: 'createUser',\r\n            // },\r\n            {\r\n                title: '操作',\r\n                dataIndex: 'action',\r\n                actions: [\r\n                    {\r\n                        type: 'popconfirm', // 控制类型，默认为a,可选： select | button | text\r\n                        key: 'fileid', // 删除的依据，如果需要根据多个字段删除，则字段之间以英文逗号分隔开，例如： id, name\r\n                        text: '删除',\r\n                        permission: { // 权限\r\n                            action: 'delete',\r\n                            effect: 'disabled'\r\n                        },\r\n                        props: {\r\n                            type: 'danger'\r\n                        },\r\n                        func: async ({record}:any, callback:any) => {\r\n                            await deleteRole(record.roleId)\r\n                            callback()\r\n                        },\r\n                    },\r\n                    {\r\n                        type: 'text', // 控制类型，默认为a,可选： select | button | text\r\n                        key: 'fileid', // 删除的依据，如果需要根据多个字段删除，则字段之间以英文逗号分隔开，例如： id, name\r\n                        text: '编辑',\r\n                        // permission: { // 权限\r\n                        //     action: 'update',\r\n                        //     effect: 'disabled'\r\n                        // },\r\n                        props: {\r\n                            type: 'warning'\r\n                        },\r\n                        func: ({record}:any, callback:any) => {\r\n                            Modal.confirm({\r\n                                title: '编辑角色',\r\n                                icon: '',\r\n                                content: <SchemaForm ref={formRef} fields={record} dynamicValidateForm={validateForm('edit')} />,\r\n                                onOk: (close) => {\r\n                                    const {roleId, version} = record\r\n                                    // return new Promise((resolve, reject) => {\r\n                                        formRef.current!.validateFields().then(async(values:any)=>{\r\n                                            const params={\r\n                                                roleId,\r\n                                                version,\r\n                                                ...values\r\n                                            }\r\n                                            console.log('params', params)\r\n\r\n                                            const {code, message}:any = await updateRole(params)\r\n                                            if(code === 200){\r\n                                                Message.success(`${message}`,1.5,()=>close());\r\n                                                (tableRef as any).current.refreshTable()\r\n                                            }else{\r\n                                                Message.error(`${message}`)\r\n                                            }\r\n                                        }).catch(() => console.log('出错!'))\r\n                                    // }).catch(()=>{})\r\n                                },\r\n\r\n                            })\r\n                      }\r\n                    },\r\n                    {\r\n                        type: 'text', // 控制类型，默认为a,可选： select | button | text\r\n                        key: 'fileid', // 删除的依据，如果需要根据多个字段删除，则字段之间以英文逗号分隔开，例如： id, name\r\n                        text: '关联权限',\r\n                        // permission: { // 权限\r\n                        //     action: 'update',\r\n                        //     effect: 'disabled'\r\n                        // },\r\n                        props: {\r\n                            type: 'warning'\r\n                        },\r\n                        func: ({record}:any, callback:any) => {\r\n                            console.log('record', record)\r\n                            Modal.confirm({\r\n                                title: '关联权限',\r\n                                icon: '',\r\n                                content: <AccessTree ref={treeRef} fields={record} />,\r\n                                onOk: (close) => {\r\n                                    return new Promise(async(resolve, reject) => {\r\n                                        const params={\r\n                                            roleId: record.roleId,\r\n                                            menuIds: (treeRef as any).current.checkedKeys()\r\n                                        }\r\n                                        const {code, message}:any = await resetRoleMenu(params)\r\n                                        if(code === 200){\r\n                                            Message.success(`${message}`,1.5,()=>close())\r\n                                            resolve(null);\r\n                                            (tableRef as any).current.refreshTable()\r\n                                            dispatch(SetUserInfor())\r\n                                        }else{\r\n                                            Message.error(`${message}`)\r\n                                            reject()\r\n                                        }\r\n                                    }).catch(()=>{})\r\n                                },\r\n                            })\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n\r\n    const onSelectChange = (keys:any) => {\r\n        setSelectedRowKeys(keys)\r\n    }\r\n\r\n    const deleteItems=()=>{\r\n        Modal.confirm({\r\n            title: '提示',\r\n            icon: '',\r\n            content: '您确定要删除所有选中吗？',\r\n            onOk: async () => {\r\n                await deleteRoles(selectedRowKeys.toString());\r\n                (tableRef as any).current.refreshTable()\r\n                setSelectedRowKeys([])\r\n            },\r\n        })\r\n    }\r\n\r\n    const addItem =()=>{\r\n        Modal.confirm({\r\n            title: '新增角色',\r\n            icon: '',\r\n            content: <SchemaForm ref={formRef} dynamicValidateForm={validateForm('add')} />,\r\n            onOk: (close) => { \r\n                // return new Promise((resolve, reject) => {\r\n                    formRef.current!.validateFields().then(async(values:any)=>{\r\n                        const {code, message}:any = await saveRole(values)\r\n                        if(code === 200){\r\n                            Message.success(`${message}`,1.5,()=>close());\r\n                            (tableRef as any).current.refreshTable()\r\n                        }else{\r\n                            Message.error(`${message}`)\r\n                        }\r\n                    }).catch(() => console.log('出错!'))\r\n                // }).catch(()=>{})\r\n            },\r\n        })\r\n    }\r\n\r\n    const handleClick=(val:any)=> {\r\n        setResData({\r\n            pageOption: resData.pageOption,\r\n            searchParam:val\r\n        });\r\n        (tableRef as any).current.refreshTable(val)\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(state && (state as any).refresh && pathname === '/system/role'){\r\n            console.log('resData', resData)\r\n            handleClick(resData.searchParam)\r\n        }\r\n    }, [state])\r\n\r\n    const callback=(val:any)=> setResData(val)\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <CustSchemaForm ref={searchFormRef} dynamicValidateForm={searchSchema} callback={handleClick} showBtn>\r\n                <Button type=\"primary\" ghost icon={<PlusOutlined />}  onClick={addItem}> 添加 </Button>\r\n                <Button danger icon={<DeleteOutlined />}  onClick={deleteItems}> 删除 </Button>\r\n            </CustSchemaForm>\r\n            <BasicTable \r\n                ref={tableRef}\r\n                columns={columns} \r\n                getListFunc={getRolePage} \r\n                rowKey=\"roleId\"  \r\n                rowSelection={{\r\n                    selectedRowKeys,\r\n                    onChange: onSelectChange,\r\n                }} \r\n                pageOption={resData.pageOption}\r\n                searchParam={resData.searchParam}\r\n                callback={callback}\r\n            />\r\n  \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default RolePage"],"sourceRoot":""}