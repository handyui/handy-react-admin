{"version":3,"sources":["components/table/BasicTable.tsx","components/table/index.ts","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","pages/system/access/index.tsx"],"names":["BasicTable","forwardRef","props","ref","columns","rowKey","rowSelection","queryParams","pageOption","searchParam","getListFunc","type","onExpand","callback","useState","data","setData","loading","setLoading","flag","find","item","dataIndex","key","actions","_isCancelled","React","useRef","refreshTableData","param","params","current","size","pageSize","then","result","code","records","total","forEach","finally","actionEvent","record","func","useEffect","useImperativeHandle","refreshTable","val","column","arr","push","filter","length","title","render","text","map","action","index","onConfirm","onClick","genColumn","dataSource","pagination","onChange","page","pageSizeOptions","showSizeChanger","defaultProps","AntdIcon","Object","assign","icon","displayName","list2tree","items","parent","parentId","menuId","children","value","AccessPage","selectedRowKeys","setSelectedRowKeys","updateState","forceUpdate","useCallback","formRef","searchFormRef","tableRef","dispatch","useDispatch","location","useLocation","pathname","state","resData","setResData","searchSchema","layout","labelCol","span","wrapperCol","grid","rowGutter","colSpan","formItem","label","field","undefined","placeholder","options","addSchema","treeDefaultExpandAll","asyncOptions","curValue","formInstance","a","getMenulist","menuList","rules","required","message","asyncValue","currentValue","fields","permission","effect","deleteMenu","Modal","confirm","content","dynamicValidateForm","onOk","close","validateFields","values","updateMenu","Message","success","SetUserInfor","error","catch","console","log","expanded","queryMenuList","menuType","handleClick","refresh","className","showBtn","ghost","addMenu","okText","cancelText","danger","deleteMenus","toString","queryCatalogList","keys"],"mappings":"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","file":"static/js/22.244b1f22.chunk.js","sourcesContent":["import React, { useEffect, useState, forwardRef, useImperativeHandle } from 'react'\r\nimport {TableColumn} from \"./tableColumn.d\"\r\nimport { Table, Space, Popconfirm } from 'antd'\r\n// import {debounce} from '@/utils/index'\r\n\r\ninterface Columns {\r\n    actions?: any;\r\n    [key: string]: any;\r\n}\r\n\r\n// 分页查询参数\r\ninterface PagePrams {\r\n    current?: string | number // 当前页数\r\n    size?: string | number // 每页条数\r\n    [key: string]: any\r\n}\r\n\r\nexport interface BasicTableProps {\r\n    columns?: TableColumn\r\n    rowSelection?: any\r\n    rowKey?: any\r\n    queryParams?: object\r\n    pageOption?: any\r\n    searchParam?: any\r\n    getListFunc?: (val: any) => Promise<unknown> \r\n    refreshTable?: boolean\r\n    style?: React.CSSProperties\r\n    type?: any\r\n    onExpand?:(expanded:any, record:any) => void\r\n    callback?:(val:any) => void\r\n}\r\n\r\nexport interface MenuItemProps {\r\n    index?: string;\r\n    disabled?: boolean\r\n    className?: string\r\n    style?: React.CSSProperties\r\n}\r\n\r\nconst BasicTable = forwardRef<any, BasicTableProps>((props, ref) => {\r\n    const {columns, rowKey, rowSelection, queryParams, pageOption, searchParam, getListFunc, type, onExpand, callback} = props\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    // const [pageOptions, setPageOptions] = useState(pageOption)\r\n    const flag = columns.find((item:any) => (item.dataIndex || item.key) === 'action')\r\n    const actions = flag ? flag.actions : []\r\n    const _isCancelled = React.useRef(false)\r\n    // const [searchParam, setSearchParam] = useState({}) // 存储搜索记录，销毁时清除\r\n\r\n    // 获取表格数据\r\n    const refreshTableData =  (param?:any) => {\r\n        setLoading(true)\r\n        const params =  {\r\n            current:pageOption.current, \r\n            size:pageOption.pageSize, \r\n            ...queryParams, \r\n            ...searchParam,\r\n            ...param\r\n        }\r\n        getListFunc &&  getListFunc(params).then((result:any)=>{\r\n            if(result.code === 200){\r\n                if (!_isCancelled.current) { \r\n                const {records, current, size, total} = result.result\r\n                    // setPageOptions(Object.assign(pageOption, {current, pageSize:size, total}))\r\n                    callback && callback({\r\n                        searchParam: params,\r\n                        pageOption: {current, pageSize:size, total}\r\n                    })\r\n                    // 因为没有传回children字段，要自行添加，table tree 需要children\r\n                    if(type && type ==='table-tree'){\r\n                        records.forEach((item:any) => {\r\n                            item['children'] = []\r\n                        })\r\n                    }\r\n                    setData(records)\r\n                }\r\n            }\r\n        }).finally(() => {if(!_isCancelled.current){setLoading(false)} })\r\n        \r\n    }\r\n\r\n    // 操作事件\r\n    const actionEvent = (record:any, func:any) => func({record, props}, refreshTableData)\r\n\r\n    const genColumn = (column:any)=>{\r\n        let arr=[]\r\n        arr.push(...column.filter((item:any) => {\r\n           return item.dataIndex !== 'action'\r\n        }))\r\n        if(actions.length>0){\r\n            arr.push({\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text:any, record:any) => (\r\n                    <Space size=\"middle\">\r\n                    { actions.map((action:any, index:number) => (\r\n                         [ action.type==='popconfirm'? ( \r\n                            <Popconfirm key={index} title=\"您确定要删除吗？\" onConfirm={()=>actionEvent(record, action.func)}\r\n                    ><a>删除</a></Popconfirm>):'' ,\r\n                        action.type ===  'text'? (<a key={index} onClick={()=>actionEvent(record, action.func)}>{action.text}</a>):'']\r\n                    ))}\r\n                        \r\n                {/* //     <a>编辑</a>\r\n                //     <a>关联权限</a> */}\r\n                </Space>\r\n                ),\r\n            })\r\n        }\r\n        return arr\r\n    }\r\n\r\n    useEffect(()=>{\r\n        refreshTableData()\r\n        return () => {\r\n            // setSearchParam({})\r\n            _isCancelled.current = true\r\n        }\r\n    }, [])\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        refreshTable: (val:any) => {\r\n            // setSearchParam(val)\r\n            refreshTableData(val)\r\n        }\r\n    }))\r\n\r\n    // 分页改变\r\n    const paginationChange = (page:number, pageSize:number) => {\r\n        let params = {\r\n            size:pageSize?pageSize:pageOption.pageSize,\r\n            current: page\r\n        }\r\n        // setPageOptions({current: page, size:pageSize?pageSize:pageOption.pageSize })\r\n        callback && callback({\r\n            searchParam: searchParam,\r\n            pageOption: params\r\n        })\r\n        refreshTableData(params)\r\n    }\r\n\r\n\r\n    return (\r\n        <Table rowKey={rowKey}\r\n            rowSelection={rowSelection} \r\n            columns={genColumn(columns)} \r\n            dataSource={data} \r\n            loading={loading}\r\n            pagination={{...pageOption, \r\n                onChange:paginationChange, \r\n                pageSizeOptions: ['5', '10', '20', '50'],\r\n                showSizeChanger: true,\r\n            }}\r\n            onExpand={onExpand}\r\n        >\r\n            {/* {\r\n                columns.map((item:any) => (\r\n                <Column title={item.title} dataIndex={item.dataIndex} key={item.dataIndex}></Column>   \r\n                //   {item.dataIndex!=='action'?\r\n                //     <Column title={item.title} dataIndex={item.dataIndex} key={item.dataIndex} />\r\n                //     :''}\r\n                ))\r\n            } */}\r\n            {/* <Column title=\"roleName\" dataIndex=\"roleName\" key=\"roleName\" />\r\n        \r\n                actions.map((action:any, index:number) => (\r\n                    <div key={index}>88</div>\r\n                    {action.type == 'text'? <button>dddd</button>:''}  \r\n\r\n                ))\r\n            }\r\n            \r\n        <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\r\n        \r\n            <Column\r\n                title=\"Action\"\r\n                key=\"action\"\r\n                render={(text, record) => (\r\n                    <Space size=\"middle\">\r\n                        <a>Invite {record.lastName}</a>\r\n                        <a>Delete</a>\r\n                    </Space>\r\n                )}\r\n                />  */}\r\n        </Table>\r\n    )\r\n})\r\n\r\nBasicTable.defaultProps = {\r\n    pageOption:{\r\n        current:1, pageSize:10\r\n    },\r\n    refreshTable:false\r\n}\r\n\r\nexport default BasicTable\r\n","export { default as BasicTable } from './BasicTable'\r\nexport * from './tableColumn.d'","// This icon file is generated automatically.\nvar DeleteOutlined = {\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\"\n      }\n    }]\n  },\n  \"name\": \"delete\",\n  \"theme\": \"outlined\"\n};\nexport default DeleteOutlined;","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return (\n    /*#__PURE__*/\n    React.createElement(AntdIcon, Object.assign({}, props, {\n      ref: ref,\n      icon: DeleteOutlinedSvg\n    }))\n  );\n};\n\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default\n/*#__PURE__*/\nReact.forwardRef(DeleteOutlined);","\r\nimport React, { FC, useState, useRef, useEffect} from 'react'\r\nimport {BasicTable} from '@/components/table'\r\nimport {deleteMenus, deleteMenu, getMenulist, queryMenuList, queryCatalogList, updateMenu, addMenu} from '@/api/system'\r\nimport { Modal, message as Message, Button } from 'antd'\r\nimport { PlusOutlined, DeleteOutlined} from '@ant-design/icons'\r\nimport { SchemaForm } from '@/components/form'\r\nimport { FormInstance } from 'antd/lib/form'\r\nimport { CustSchemaForm } from '@/components/form'\r\nimport { useDispatch } from 'react-redux'\r\nimport { SetUserInfor } from '@/store/actions'\r\nimport { useLocation} from 'react-router-dom'\r\n\r\nconst list2tree = (items:any, parent = 0) => {\r\n  return items.filter((item:any) => item.parentId === parent).map((item:any) => ({\r\n    title: item.title,\r\n    key: item.menuId,\r\n    children: list2tree(items, item.menuId),\r\n    value: item.menuId\r\n  }))\r\n}\r\n\r\nconst AccessPage: FC = () => {\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n    const [refreshTable, setRefresh] = useState(false)\r\n    const [, updateState] = React.useState();\r\n    const forceUpdate = React.useCallback(() => updateState({} as any), [])\r\n    const formRef = useRef<FormInstance>(null)\r\n    const searchFormRef = useRef<FormInstance>(null)\r\n    const tableRef = useRef(null)\r\n    const dispatch = useDispatch()\r\n    const location = useLocation()\r\n    const {pathname, state} = location\r\n    const [resData, setResData] = useState({\r\n        pageOption: {},\r\n        searchParam: {}\r\n    })\r\n\r\n    const searchSchema = {\r\n        layout : {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 16 },\r\n        },\r\n        grid: {\r\n            rowGutter: 10,\r\n            colSpan: 5\r\n        },\r\n        formItem: [\r\n            {\r\n                type: \"select\",\r\n                label: \"菜单类型\",\r\n                field: \"menuType\",\r\n                value: undefined,\r\n                props: {\r\n                    placeholder: \"请选择类型\"\r\n                },\r\n                options:[\r\n                  {label:'目录', value:'catalog'},\r\n                  {label:'菜单', value:'menu'},\r\n                  {label:'按钮', value:'button'}\r\n                ]\r\n            },\r\n            {\r\n                type: \"input\",\r\n                label: \"菜单名称\",\r\n                field: \"title\",\r\n                value: \"\",\r\n                props: {\r\n                    placeholder: \"请输入菜单名称\"\r\n                },\r\n            },\r\n        ]\r\n    }\r\n\r\n    const addSchema = {\r\n        formItem: [\r\n              {\r\n                type: \"tree-select\",\r\n                label: \"上级权限\",\r\n                field: \"parentId\",\r\n                value: \"\",\r\n                loading: true,\r\n                props: {\r\n                  placeholder: \"请选择上级权限\",\r\n                  treeDefaultExpandAll: true,\r\n                },\r\n                asyncOptions: async (curValue:any, formInstance:any) => {\r\n                    const menuList = await getMenulist() \r\n                    return list2tree((menuList as any).result)  // { key: 0, value: '0', title: '无111' }\r\n                },\r\n                // asyncValue: async (curValue:any, fields:any) => { \r\n                //     const {parentId} = fields\r\n                //     return parentId\r\n                // }\r\n              },\r\n              {\r\n                type: \"select\",\r\n                label: \"菜单类型\",\r\n                field: \"menuType\",\r\n                value: undefined,\r\n                props: {\r\n                    // disabled: false,\r\n                    placeholder: \"请选择类型\"\r\n                }, /** 菜单类型（catalog:目录，menu:菜单，button:按钮） */\r\n                options:[\r\n                    {label:'目录', value:'catalog'},\r\n                    {label:'菜单', value:'menu'}\r\n                ],\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"请选择菜单类型\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n              type: \"input\",\r\n              label: \"名称\",\r\n              field: \"title\",\r\n              value: \"\",\r\n              props: {\r\n                  placeholder: \"请输入名称\"\r\n              },\r\n              rules: [\r\n                  {\r\n                      required: true,\r\n                      message: \"名称不能为空\"\r\n                  }\r\n              ]\r\n          },\r\n           {\r\n              type: \"input\",\r\n              label: \"路由地址\",\r\n              field: \"menuPath\",\r\n              value: \"\",\r\n              props: {\r\n                  placeholder: \"请输入路由地址\"\r\n              },\r\n              rules: [\r\n                  {\r\n                      required: true,\r\n                      message: \"请输入路由地址\"\r\n                  }\r\n              ]\r\n          },\r\n          {\r\n              type: \"input\",\r\n              label: \"菜单编码\",\r\n              field: \"menuCode\",\r\n              value: \"\",\r\n              props: {\r\n                  placeholder: \"请输入菜单编码\"\r\n              },\r\n              rules: [\r\n                  {\r\n                      required: true,\r\n                      message: \"请输入菜单编码\"\r\n                  }\r\n              ]\r\n          },\r\n          {\r\n              type: \"input\",\r\n              label: \"重定向地址\",\r\n              field: \"redirect\",\r\n              value: \"\",\r\n              props: {\r\n                  placeholder: \"请输入重定向地址\"\r\n              },\r\n          }, \r\n           {\r\n              type: \"input-number\",\r\n              label: \"排序\",\r\n              field: \"priority\",\r\n              value: \"\",\r\n              props: {\r\n                  placeholder: \"0\"\r\n              },\r\n          },\r\n          {\r\n              type: 'icon-select',\r\n              label: \"图标\",\r\n              field: \"icon\",\r\n              value: \"\",\r\n              asyncValue: async (currentValue:any, fields:any) => {\r\n                //   const {icon} = formInstance?.props.fields\r\n                //   return icon\r\n              }\r\n          }\r\n        ]\r\n    }\r\n\r\n    const columns=[ \r\n            {\r\n                title: '名称',\r\n                dataIndex: 'title',\r\n                key: 'title',\r\n            },\r\n            {\r\n                title: 'url地址',\r\n                dataIndex: 'menuPath',\r\n                key: 'menuPath',\r\n            },\r\n            {\r\n                title: 'icon',\r\n                dataIndex: 'icon',\r\n                key: 'icon',\r\n            },\r\n            {\r\n                title: '排序',\r\n                dataIndex: 'priority',\r\n                key: 'priority',\r\n            },\r\n            {\r\n                title: '按钮类型',\r\n                dataIndex: 'menuType',\r\n                key: 'menuType',\r\n                render: (text:any) => text === 'catalog' ? '目录':'菜单'\r\n            },\r\n            {\r\n              title: '创建时间',\r\n              dataIndex: 'createTime',\r\n              key: 'createTime',\r\n            },\r\n            {\r\n              title: '更新时间',\r\n              dataIndex: 'updateTime',\r\n              key: 'updateTime',\r\n            },\r\n            {\r\n                title: '操作',\r\n                dataIndex: 'action',\r\n                actions: [\r\n                    {\r\n                        type: 'popconfirm', // 控制类型，默认为a,可选： select | button | text\r\n                        key: 'fileid', // 删除的依据，如果需要根据多个字段删除，则字段之间以英文逗号分隔开，例如： id, name\r\n                        text: '删除',\r\n                        permission: { // 权限\r\n                            action: 'delete',\r\n                            effect: 'disabled'\r\n                        },\r\n                        props: {\r\n                            type: 'danger'\r\n                        },\r\n                        func: async ({record}:any, callback:any) => {\r\n                            await deleteMenu(record.menuId)\r\n                            callback()\r\n                        },\r\n                    },\r\n                    {\r\n                        type: 'text', // 控制类型，默认为a,可选： select | button | text\r\n                        key: 'fileid', // 删除的依据，如果需要根据多个字段删除，则字段之间以英文逗号分隔开，例如： id, name\r\n                        text: '编辑',\r\n                        props: {\r\n                            type: 'warning'\r\n                        },\r\n                        func: ({record}:any, callback:any) => {\r\n                            Modal.confirm({\r\n                                title: '编辑菜单',\r\n                                icon: '',\r\n                                content: <SchemaForm ref={formRef} fields={record} dynamicValidateForm={addSchema} />,\r\n                                onOk: (close) => {\r\n                                    // return new Promise((resolve, reject) => {\r\n                                        formRef.current!.validateFields().then(async(values:any)=>{\r\n                                            const params={\r\n                                                ...record,\r\n                                                ...values\r\n                                            }\r\n                                            const {code, message}:any = await updateMenu(params)\r\n                                            if(code === 200){\r\n                                                Message.success(`${message}`,1.5,()=>close());\r\n                                                (tableRef as any).current.refreshTable()\r\n                                                dispatch(SetUserInfor())\r\n                                            }else{\r\n                                                Message.error(`${message}`)\r\n                                            }\r\n                                        }).catch(() => console.log('出错!'))\r\n                                    // }).catch(()=>{})\r\n                                },\r\n                            })\r\n                        }\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n\r\n    const onSelectChange = (keys:any) => {\r\n        setSelectedRowKeys(keys)\r\n    }\r\n\r\n    const deleteItems=()=>{\r\n        Modal.confirm({\r\n            title: '提示',\r\n            icon: '',\r\n            content: '您确定要删除所有选中吗？',\r\n            onOk: async () => {\r\n                await deleteMenus(selectedRowKeys.toString());\r\n                (tableRef as any).current.refreshTable()\r\n                setSelectedRowKeys([])\r\n            },\r\n        })\r\n    }\r\n\r\n    const addItem =()=>{\r\n        Modal.confirm({\r\n            title: '新增菜单',\r\n            icon: '',\r\n            content: <SchemaForm ref={formRef} dynamicValidateForm={addSchema} />,\r\n            onOk: (close) => { \r\n                // return new Promise((resolve, reject) => {\r\n                    formRef.current!.validateFields().then(async(values:any)=>{\r\n                        const {code, message}:any = await addMenu(values)\r\n                        if(code === 200){\r\n                            Message.success(`${message}`,1.5,()=>close());\r\n                            (tableRef as any).current.refreshTable()\r\n                        }else{\r\n                            Message.error(`${message}`)\r\n                        }\r\n                    }).catch(() => console.log('出错!'))\r\n                // }).catch(()=>{})\r\n            },\r\n            okText:\"确认\",\r\n            cancelText:\"取消\"  \r\n        })\r\n    }\r\n\r\n    const onExpand=async(expanded: any, record: any)=>{\r\n        console.log('val', expanded, record)\r\n        // 如果是第一次展开\r\n      // if (expanded && record.menuType === 'catalog') {\r\n        const {result}:any = await queryMenuList({menuId: record.menuId, menuType: 'menu'})\r\n        console.log('result', result)\r\n        record['children'] = result\r\n        console.log('record===>', record)\r\n        forceUpdate()\r\n        // setRefresh(!refreshTable)\r\n      // }\r\n    }\r\n\r\n    const handleClick=(val:any)=> {\r\n        setResData({\r\n            pageOption: resData.pageOption,\r\n            searchParam:val\r\n        });\r\n        (tableRef as any).current.refreshTable(val)\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(state && (state as any).refresh && pathname === '/system/access'){\r\n            console.log('resData', resData)\r\n            handleClick(resData.searchParam)\r\n        }\r\n    }, [state])\r\n\r\n    const callback=(val:any)=> setResData(val)\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <CustSchemaForm ref={searchFormRef} dynamicValidateForm={searchSchema} callback={handleClick} showBtn>\r\n                <Button type=\"primary\" ghost icon={<PlusOutlined />}  onClick={addItem}> 添加 </Button>\r\n                <Button danger icon={<DeleteOutlined />}  onClick={deleteItems}> 删除 </Button>\r\n            </CustSchemaForm>\r\n            <BasicTable \r\n                ref={tableRef}\r\n                columns={columns} \r\n                getListFunc={queryCatalogList} \r\n                queryParams={{'menuType': 'catalog'}} \r\n                rowKey=\"menuId\"  \r\n                rowSelection={{\r\n                    selectedRowKeys,\r\n                    onChange: onSelectChange,\r\n                }} \r\n                refreshTable={refreshTable}\r\n                type=\"table-tree\"\r\n                onExpand={onExpand}\r\n                // expand=\"expand\"\r\n                pageOption={resData.pageOption}\r\n                searchParam={resData.searchParam}\r\n                callback={callback}\r\n            />\r\n  \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AccessPage"],"sourceRoot":""}